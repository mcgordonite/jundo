(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"c:\\Development\\Web\\jundo\\output\\Control.Alt\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Alt = function (__superclass_Prelude$dotFunctor_0, alt) {
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.alt = alt;
};
var altArray = new Alt(function () {
    return Prelude.functorArray;
}, Prelude.append(Prelude.semigroupArray));
var alt = function (dict) {
    return dict.alt;
};
var $less$bar$greater = function (__dict_Alt_0) {
    return alt(__dict_Alt_0);
};
module.exports = {
    Alt: Alt, 
    "<|>": $less$bar$greater, 
    alt: alt, 
    altArray: altArray
};

},{"Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Control.Alternative\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Control_Alt = require("Control.Alt");
var Control_Lazy = require("Control.Lazy");
var Control_Plus = require("Control.Plus");
var Alternative = function (__superclass_Control$dotPlus$dotPlus_1, __superclass_Prelude$dotApplicative_0) {
    this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
    this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
};
var alternativeArray = new Alternative(function () {
    return Control_Plus.plusArray;
}, function () {
    return Prelude.applicativeArray;
});
module.exports = {
    Alternative: Alternative, 
    alternativeArray: alternativeArray
};

},{"Control.Alt":"c:\\Development\\Web\\jundo\\output\\Control.Alt\\index.js","Control.Lazy":"c:\\Development\\Web\\jundo\\output\\Control.Lazy\\index.js","Control.Plus":"c:\\Development\\Web\\jundo\\output\\Control.Plus\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Control.Apply\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var $less$times = function (__dict_Apply_0) {
    return function (a) {
        return function (b) {
            return Prelude["<*>"](__dict_Apply_0)(Prelude["<$>"](__dict_Apply_0["__superclass_Prelude.Functor_0"]())(Prelude["const"])(a))(b);
        };
    };
};
var $times$greater = function (__dict_Apply_1) {
    return function (a) {
        return function (b) {
            return Prelude["<*>"](__dict_Apply_1)(Prelude["<$>"](__dict_Apply_1["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryFn)))(a))(b);
        };
    };
};
var lift5 = function (__dict_Apply_2) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return Prelude["<*>"](__dict_Apply_2)(Prelude["<*>"](__dict_Apply_2)(Prelude["<*>"](__dict_Apply_2)(Prelude["<*>"](__dict_Apply_2)(Prelude["<$>"](__dict_Apply_2["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d))(e);
                        };
                    };
                };
            };
        };
    };
};
var lift4 = function (__dict_Apply_3) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return Prelude["<*>"](__dict_Apply_3)(Prelude["<*>"](__dict_Apply_3)(Prelude["<*>"](__dict_Apply_3)(Prelude["<$>"](__dict_Apply_3["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d);
                    };
                };
            };
        };
    };
};
var lift3 = function (__dict_Apply_4) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return Prelude["<*>"](__dict_Apply_4)(Prelude["<*>"](__dict_Apply_4)(Prelude["<$>"](__dict_Apply_4["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c);
                };
            };
        };
    };
};
var lift2 = function (__dict_Apply_5) {
    return function (f) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_5)(Prelude["<$>"](__dict_Apply_5["__superclass_Prelude.Functor_0"]())(f)(a))(b);
            };
        };
    };
};
module.exports = {
    lift5: lift5, 
    lift4: lift4, 
    lift3: lift3, 
    lift2: lift2, 
    "*>": $times$greater, 
    "<*": $less$times
};

},{"Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Control.Biapplicative\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Control_Biapply = require("Control.Biapply");
var Biapplicative = function (__superclass_Control$dotBiapply$dotBiapply_0, bipure) {
    this["__superclass_Control.Biapply.Biapply_0"] = __superclass_Control$dotBiapply$dotBiapply_0;
    this.bipure = bipure;
};
var bipure = function (dict) {
    return dict.bipure;
};
module.exports = {
    Biapplicative: Biapplicative, 
    bipure: bipure
};

},{"Control.Biapply":"c:\\Development\\Web\\jundo\\output\\Control.Biapply\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Control.Biapply\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Data_Bifunctor = require("Data.Bifunctor");
var Biapply = function (__superclass_Data$dotBifunctor$dotBifunctor_0, biapply) {
    this["__superclass_Data.Bifunctor.Bifunctor_0"] = __superclass_Data$dotBifunctor$dotBifunctor_0;
    this.biapply = biapply;
};
var $less$less$dollar$greater$greater = Prelude.id(Prelude.categoryFn);
var biapply = function (dict) {
    return dict.biapply;
};
var $less$less$times$greater$greater = function (__dict_Biapply_0) {
    return biapply(__dict_Biapply_0);
};
var bilift2 = function (__dict_Biapply_1) {
    return function (f) {
        return function (g) {
            return function (a) {
                return function (b) {
                    return $less$less$times$greater$greater(__dict_Biapply_1)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(__dict_Biapply_1["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g))(a))(b);
                };
            };
        };
    };
};
var bilift3 = function (__dict_Biapply_2) {
    return function (f) {
        return function (g) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return $less$less$times$greater$greater(__dict_Biapply_2)($less$less$times$greater$greater(__dict_Biapply_2)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(__dict_Biapply_2["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g))(a))(b))(c);
                    };
                };
            };
        };
    };
};
var $times$greater$greater = function (__dict_Biapply_3) {
    return function (a) {
        return function (b) {
            return $less$less$times$greater$greater(__dict_Biapply_3)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(__dict_Biapply_3["__superclass_Data.Bifunctor.Bifunctor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryFn)))(Prelude["const"](Prelude.id(Prelude.categoryFn))))(a))(b);
        };
    };
};
var $less$less$times = function (__dict_Biapply_4) {
    return function (a) {
        return function (b) {
            return $less$less$times$greater$greater(__dict_Biapply_4)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(__dict_Biapply_4["__superclass_Data.Bifunctor.Bifunctor_0"]())(Prelude["const"])(Prelude["const"]))(a))(b);
        };
    };
};
module.exports = {
    Biapply: Biapply, 
    bilift3: bilift3, 
    bilift2: bilift2, 
    "<<*": $less$less$times, 
    "*>>": $times$greater$greater, 
    "<<*>>": $less$less$times$greater$greater, 
    biapply: biapply, 
    "<<$>>": $less$less$dollar$greater$greater
};

},{"Data.Bifunctor":"c:\\Development\\Web\\jundo\\output\\Data.Bifunctor\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Control.Comonad\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Control_Extend = require("Control.Extend");
var Comonad = function (__superclass_Control$dotExtend$dotExtend_0, extract) {
    this["__superclass_Control.Extend.Extend_0"] = __superclass_Control$dotExtend$dotExtend_0;
    this.extract = extract;
};
var extract = function (dict) {
    return dict.extract;
};
module.exports = {
    Comonad: Comonad, 
    extract: extract
};

},{"Control.Extend":"c:\\Development\\Web\\jundo\\output\\Control.Extend\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Control.Extend\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Extend = function (__superclass_Prelude$dotFunctor_0, extend) {
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.extend = extend;
};
var extendFn = function (__dict_Semigroup_0) {
    return new Extend(function () {
        return Prelude.functorFn;
    }, function (f) {
        return function (g) {
            return function (w) {
                return f(function (w$prime) {
                    return g(Prelude["<>"](__dict_Semigroup_0)(w)(w$prime));
                });
            };
        };
    });
};
var extend = function (dict) {
    return dict.extend;
};
var $less$less$eq = function (__dict_Extend_1) {
    return extend(__dict_Extend_1);
};
var $eq$less$eq = function (__dict_Extend_2) {
    return function (f) {
        return function (g) {
            return function (w) {
                return f($less$less$eq(__dict_Extend_2)(g)(w));
            };
        };
    };
};
var $eq$greater$eq = function (__dict_Extend_3) {
    return function (f) {
        return function (g) {
            return function (w) {
                return g($less$less$eq(__dict_Extend_3)(f)(w));
            };
        };
    };
};
var $eq$greater$greater = function (__dict_Extend_4) {
    return function (w) {
        return function (f) {
            return $less$less$eq(__dict_Extend_4)(f)(w);
        };
    };
};
var duplicate = function (__dict_Extend_5) {
    return extend(__dict_Extend_5)(Prelude.id(Prelude.categoryFn));
};
module.exports = {
    Extend: Extend, 
    duplicate: duplicate, 
    "=<=": $eq$less$eq, 
    "=>=": $eq$greater$eq, 
    "=>>": $eq$greater$greater, 
    "<<=": $less$less$eq, 
    extend: extend, 
    extendFn: extendFn
};

},{"Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Control.Lazy\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Lazy = function (defer) {
    this.defer = defer;
};
var defer = function (dict) {
    return dict.defer;
};
var fix = function (__dict_Lazy_0) {
    return function (f) {
        return defer(__dict_Lazy_0)(function (_277) {
            return f(fix(__dict_Lazy_0)(f));
        });
    };
};
module.exports = {
    Lazy: Lazy, 
    fix: fix, 
    defer: defer
};

},{"Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff.Console\\foreign.js":[function(require,module,exports){
/* global exports, console */
"use strict";

// module Control.Monad.Eff.Console

exports.log = function (s) {
  return function () {
    console.log(s);
    return {};
  };
};

exports.error = function (s) {
  return function () {
    console.error(s);
    return {};
  };
};

},{}],"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff.Console\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var print = function (__dict_Show_0) {
    return function (_1149) {
        return $foreign.log(Prelude.show(__dict_Show_0)(_1149));
    };
};
module.exports = {
    print: print, 
    error: $foreign.error, 
    log: $foreign.log
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff.Console\\foreign.js","Control.Monad.Eff":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff.Exception\\foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Control.Monad.Eff.Exception

exports.showErrorImpl = function (err) {
  return err.stack || err.toString();
};

exports.error = function (msg) {
  return new Error(msg);
};

exports.message = function (e) {
  return e.message;
};

exports.throwException = function (e) {
  return function () {
    throw e;
  };
};

exports.catchException = function (c) {
  return function (t) {
    return function () {
      try {
        return t();
      } catch (e) {
        if (e instanceof Error || Object.prototype.toString.call(e) === "[object Error]") {
          return c(e)();
        } else {
          return c(new Error(e.toString()))();
        }
      }
    };
  };
};

},{}],"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff.Exception\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var showError = new Prelude.Show($foreign.showErrorImpl);
module.exports = {
    showError: showError, 
    catchException: $foreign.catchException, 
    throwException: $foreign.throwException, 
    message: $foreign.message, 
    error: $foreign.error
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff.Exception\\foreign.js","Control.Monad.Eff":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff.Unsafe\\foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Control.Monad.Eff.Unsafe

exports.unsafeInterleaveEff = function (f) {
  return f;
};

},{}],"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff.Unsafe\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
module.exports = {
    unsafeInterleaveEff: $foreign.unsafeInterleaveEff
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff.Unsafe\\foreign.js","Control.Monad.Eff":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff\\foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Control.Monad.Eff

exports.returnE = function (a) {
  return function () {
    return a;
  };
};

exports.bindE = function (a) {
  return function (f) {
    return function () {
      return f(a())();
    };
  };
};

exports.runPure = function (f) {
  return f();
};

exports.untilE = function (f) {
  return function () {
    while (!f());
    return {};
  };
};

exports.whileE = function (f) {
  return function (a) {
    return function () {
      while (f()) {
        a();
      }
      return {};
    };
  };
};

exports.forE = function (lo) {
  return function (hi) {
    return function (f) {
      return function () {
        for (var i = lo; i < hi; i++) {
          f(i)();
        }
      };
    };
  };
};

exports.foreachE = function (as) {
  return function (f) {
    return function () {
      for (var i = 0, l = as.length; i < l; i++) {
        f(as[i])();
      }
    };
  };
};

},{}],"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var monadEff = new Prelude.Monad(function () {
    return applicativeEff;
}, function () {
    return bindEff;
});
var bindEff = new Prelude.Bind(function () {
    return applyEff;
}, $foreign.bindE);
var applyEff = new Prelude.Apply(function () {
    return functorEff;
}, Prelude.ap(monadEff));
var applicativeEff = new Prelude.Applicative(function () {
    return applyEff;
}, $foreign.returnE);
var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
module.exports = {
    functorEff: functorEff, 
    applyEff: applyEff, 
    applicativeEff: applicativeEff, 
    bindEff: bindEff, 
    monadEff: monadEff, 
    foreachE: $foreign.foreachE, 
    forE: $foreign.forE, 
    whileE: $foreign.whileE, 
    untilE: $foreign.untilE, 
    runPure: $foreign.runPure
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff\\foreign.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Control.Monad.Free\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Control_Monad_Rec_Class = require("Control.Monad.Rec.Class");
var Control_Monad_Trans = require("Control.Monad.Trans");
var Data_CatList = require("Data.CatList");
var Data_Either = require("Data.Either");
var Data_Identity = require("Data.Identity");
var Data_Inject = require("Data.Inject");
var Data_Maybe = require("Data.Maybe");
var Data_NaturalTransformation = require("Data.NaturalTransformation");
var Data_Tuple = require("Data.Tuple");
var Unsafe_Coerce = require("Unsafe.Coerce");
var ExpF = function (x) {
    return x;
};
var Free = (function () {
    function Free(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Free.create = function (value0) {
        return function (value1) {
            return new Free(value0, value1);
        };
    };
    return Free;
})();
var Return = (function () {
    function Return(value0) {
        this.value0 = value0;
    };
    Return.create = function (value0) {
        return new Return(value0);
    };
    return Return;
})();
var Bind = (function () {
    function Bind(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Bind.create = function (value0) {
        return function (value1) {
            return new Bind(value0, value1);
        };
    };
    return Bind;
})();
var toView = function (__copy__930) {
    var _930 = __copy__930;
    tco: while (true) {
        var runExpF = function (_933) {
            return _933;
        };
        var concatF = function (_932) {
            return function (r) {
                return new Free(_932.value0, Prelude["<>"](Data_CatList.semigroupCatList)(_932.value1)(r));
            };
        };
        if (_930.value0 instanceof Return) {
            var _3439 = Data_CatList.uncons(_930.value1);
            if (_3439 instanceof Data_Maybe.Nothing) {
                return new Return(Unsafe_Coerce.unsafeCoerce(_930.value0.value0));
            };
            if (_3439 instanceof Data_Maybe.Just) {
                var __tco__930 = Unsafe_Coerce.unsafeCoerce(concatF(runExpF(_3439.value0.value0)(_930.value0.value0))(_3439.value0.value1));
                _930 = __tco__930;
                continue tco;
            };
            throw new Error("Failed pattern match: " + [ _3439.constructor.name ]);
        };
        if (_930.value0 instanceof Bind) {
            return new Bind(_930.value0.value0, function (a) {
                return Unsafe_Coerce.unsafeCoerce(concatF(_930.value0.value1(a))(_930.value1));
            });
        };
        throw new Error("Failed pattern match: " + [ _930.value0.constructor.name ]);
    };
};
var runFreeM = function (__dict_Functor_0) {
    return function (__dict_MonadRec_1) {
        return function (k) {
            var go = function (f) {
                var _3448 = toView(f);
                if (_3448 instanceof Return) {
                    return Prelude["<$>"]((((__dict_MonadRec_1["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(Prelude.pure((__dict_MonadRec_1["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())(_3448.value0));
                };
                if (_3448 instanceof Bind) {
                    return Prelude["<$>"]((((__dict_MonadRec_1["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Left.create)(k(Prelude["<$>"](__dict_Functor_0)(_3448.value1)(_3448.value0)));
                };
                throw new Error("Failed pattern match at Control.Monad.Free line 123, column 3 - line 124, column 3: " + [ _3448.constructor.name ]);
            };
            return Control_Monad_Rec_Class.tailRecM(__dict_MonadRec_1)(go);
        };
    };
};
var runFree = function (__dict_Functor_2) {
    return function (k) {
        return function (_3460) {
            return Data_Identity.runIdentity(runFreeM(__dict_Functor_2)(Control_Monad_Rec_Class.monadRecIdentity)(function (_3461) {
                return Data_Identity.Identity(k(_3461));
            })(_3460));
        };
    };
};
var fromView = function (f) {
    return new Free(Unsafe_Coerce.unsafeCoerce(f), Data_CatList.empty);
};
var suspendF = function (__dict_Applicative_4) {
    return function (f) {
        return fromView(new Bind(Unsafe_Coerce.unsafeCoerce(Prelude.pure(__dict_Applicative_4)(f)), function (_3462) {
            return Prelude.id(Prelude.categoryFn)(Unsafe_Coerce.unsafeCoerce(_3462));
        }));
    };
};
var freeMonad = new Prelude.Monad(function () {
    return freeApplicative;
}, function () {
    return freeBind;
});
var freeFunctor = new Prelude.Functor(function (k) {
    return function (f) {
        return Prelude[">>="](freeBind)(f)(function (_3463) {
            return Prelude["return"](freeApplicative)(k(_3463));
        });
    };
});
var freeBind = new Prelude.Bind(function () {
    return freeApply;
}, function (_931) {
    return function (k) {
        return new Free(_931.value0, Data_CatList.snoc(_931.value1)(Unsafe_Coerce.unsafeCoerce(k)));
    };
});
var freeApply = new Prelude.Apply(function () {
    return freeFunctor;
}, Prelude.ap(freeMonad));
var freeApplicative = new Prelude.Applicative(function () {
    return freeApply;
}, function (_3464) {
    return fromView(Return.create(_3464));
});
var freeMonadRec = new Control_Monad_Rec_Class.MonadRec(function () {
    return freeMonad;
}, function (k) {
    return function (a) {
        return Prelude[">>="](freeBind)(k(a))(Data_Either.either(Control_Monad_Rec_Class.tailRecM(freeMonadRec)(k))(Prelude.pure(freeApplicative)));
    };
});
var liftF = function (f) {
    return fromView(new Bind(Unsafe_Coerce.unsafeCoerce(f), function (_3465) {
        return Prelude.pure(freeApplicative)(Unsafe_Coerce.unsafeCoerce(_3465));
    }));
};
var freeMonadTrans = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_5) {
    return liftF;
});
var liftFI = function (__dict_Inject_3) {
    return function (fa) {
        return liftF(Data_Inject.inj(__dict_Inject_3)(fa));
    };
};
var foldFree = function (__dict_MonadRec_6) {
    return function (k) {
        var go = function (f) {
            var _3456 = toView(f);
            if (_3456 instanceof Return) {
                return Prelude["<$>"]((((__dict_MonadRec_6["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(Prelude.pure((__dict_MonadRec_6["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())(_3456.value0));
            };
            if (_3456 instanceof Bind) {
                return Prelude["<$>"]((((__dict_MonadRec_6["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(function (_3466) {
                    return Data_Either.Left.create(_3456.value1(_3466));
                })(k(_3456.value0));
            };
            throw new Error("Failed pattern match at Control.Monad.Free line 108, column 3 - line 109, column 3: " + [ _3456.constructor.name ]);
        };
        return Control_Monad_Rec_Class.tailRecM(__dict_MonadRec_6)(go);
    };
};
var mapF = function (k) {
    return foldFree(freeMonadRec)(function (_3467) {
        return liftF(k(_3467));
    });
};
var injF = function (__dict_Inject_7) {
    return mapF(Data_Inject.inj(__dict_Inject_7));
};
module.exports = {
    runFreeM: runFreeM, 
    runFree: runFree, 
    foldFree: foldFree, 
    injF: injF, 
    mapF: mapF, 
    liftFI: liftFI, 
    liftF: liftF, 
    suspendF: suspendF, 
    freeFunctor: freeFunctor, 
    freeBind: freeBind, 
    freeApplicative: freeApplicative, 
    freeApply: freeApply, 
    freeMonad: freeMonad, 
    freeMonadTrans: freeMonadTrans, 
    freeMonadRec: freeMonadRec
};

},{"Control.Monad.Rec.Class":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Rec.Class\\index.js","Control.Monad.Trans":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Trans\\index.js","Data.CatList":"c:\\Development\\Web\\jundo\\output\\Data.CatList\\index.js","Data.Either":"c:\\Development\\Web\\jundo\\output\\Data.Either\\index.js","Data.Identity":"c:\\Development\\Web\\jundo\\output\\Data.Identity\\index.js","Data.Inject":"c:\\Development\\Web\\jundo\\output\\Data.Inject\\index.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js","Data.NaturalTransformation":"c:\\Development\\Web\\jundo\\output\\Data.NaturalTransformation\\index.js","Data.Tuple":"c:\\Development\\Web\\jundo\\output\\Data.Tuple\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js","Unsafe.Coerce":"c:\\Development\\Web\\jundo\\output\\Unsafe.Coerce\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Control.Monad.Rec.Class\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_ST = require("Control.Monad.ST");
var Data_Either = require("Data.Either");
var Data_Functor = require("Data.Functor");
var Data_Identity = require("Data.Identity");
var Control_Monad_Eff_Unsafe = require("Control.Monad.Eff.Unsafe");
var Data_Either_Unsafe = require("Data.Either.Unsafe");
var MonadRec = function (__superclass_Prelude$dotMonad_0, tailRecM) {
    this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    this.tailRecM = tailRecM;
};
var tailRecM = function (dict) {
    return dict.tailRecM;
};
var tailRecM2 = function (__dict_MonadRec_0) {
    return function (f) {
        return function (a) {
            return function (b) {
                return tailRecM(__dict_MonadRec_0)(function (o) {
                    return f(o.a)(o.b);
                })({
                    a: a, 
                    b: b
                });
            };
        };
    };
};
var tailRecM3 = function (__dict_MonadRec_1) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return tailRecM(__dict_MonadRec_1)(function (o) {
                        return f(o.a)(o.b)(o.c);
                    })({
                        a: a, 
                        b: b, 
                        c: c
                    });
                };
            };
        };
    };
};
var tailRecEff = function (f) {
    return function (a) {
        var f$prime = function (_1787) {
            return Control_Monad_Eff_Unsafe.unsafeInterleaveEff(f(_1787));
        };
        return function __do() {
            var _22 = f$prime(a)();
            var _21 = {
                value: _22
            };
            (function () {
                while (!(function __do() {
                    var _20 = _21.value;
                    return (function () {
                        if (_20 instanceof Data_Either.Left) {
                            return function __do() {
                                var _19 = f$prime(_20.value0)();
                                _21.value = _19;
                                return Prelude["return"](Control_Monad_Eff.applicativeEff)(false)();
                            };
                        };
                        if (_20 instanceof Data_Either.Right) {
                            return Prelude["return"](Control_Monad_Eff.applicativeEff)(true);
                        };
                        throw new Error("Failed pattern match at Control.Monad.Rec.Class line 75, column 1 - line 76, column 1: " + [ _20.constructor.name ]);
                    })()();
                })()) {

                };
                return {};
            })();
            return Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Either_Unsafe.fromRight)(Control_Monad_ST.readSTRef(_21))();
        };
    };
};
var tailRec = function (f) {
    return function (a) {
        var go = function (__copy__560) {
            var _560 = __copy__560;
            tco: while (true) {
                if (_560 instanceof Data_Either.Left) {
                    var __tco__560 = f(_560.value0);
                    _560 = __tco__560;
                    continue tco;
                };
                if (_560 instanceof Data_Either.Right) {
                    return _560.value0;
                };
                throw new Error("Failed pattern match at Control.Monad.Rec.Class line 63, column 1 - line 64, column 1: " + [ _560.constructor.name ]);
            };
        };
        return go(f(a));
    };
};
var monadRecIdentity = new MonadRec(function () {
    return Data_Identity.monadIdentity;
}, function (f) {
    return function (_1788) {
        return Data_Identity.Identity(tailRec(function (_1789) {
            return Data_Identity.runIdentity(f(_1789));
        })(_1788));
    };
});
var monadRecEff = new MonadRec(function () {
    return Control_Monad_Eff.monadEff;
}, tailRecEff);
var forever = function (__dict_MonadRec_2) {
    return function (ma) {
        return tailRecM(__dict_MonadRec_2)(function (u) {
            return Data_Functor["<$"]((((__dict_MonadRec_2["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(new Data_Either.Left(u))(ma);
        })(Prelude.unit);
    };
};
module.exports = {
    MonadRec: MonadRec, 
    forever: forever, 
    tailRecM3: tailRecM3, 
    tailRecM2: tailRecM2, 
    tailRecM: tailRecM, 
    tailRec: tailRec, 
    monadRecIdentity: monadRecIdentity, 
    monadRecEff: monadRecEff
};

},{"Control.Monad.Eff":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff\\index.js","Control.Monad.Eff.Unsafe":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff.Unsafe\\index.js","Control.Monad.ST":"c:\\Development\\Web\\jundo\\output\\Control.Monad.ST\\index.js","Data.Either":"c:\\Development\\Web\\jundo\\output\\Data.Either\\index.js","Data.Either.Unsafe":"c:\\Development\\Web\\jundo\\output\\Data.Either.Unsafe\\index.js","Data.Functor":"c:\\Development\\Web\\jundo\\output\\Data.Functor\\index.js","Data.Identity":"c:\\Development\\Web\\jundo\\output\\Data.Identity\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Control.Monad.ST\\foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Control.Monad.ST

exports.newSTRef = function (val) {
  return function () {
    return { value: val };
  };
};

exports.readSTRef = function (ref) {
  return function () {
    return ref.value;
  };
};

exports.modifySTRef = function (ref) {
  return function (f) {
    return function () {
      /* jshint boss: true */
      return ref.value = f(ref.value);
    };
  };
};

exports.writeSTRef = function (ref) {
  return function (a) {
    return function () {
      /* jshint boss: true */
      return ref.value = a;
    };
  };
};

exports.runST = function (f) {
  return f;
};

},{}],"c:\\Development\\Web\\jundo\\output\\Control.Monad.ST\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var pureST = function (st) {
    return Control_Monad_Eff.runPure($foreign.runST(st));
};
module.exports = {
    pureST: pureST, 
    runST: $foreign.runST, 
    writeSTRef: $foreign.writeSTRef, 
    modifySTRef: $foreign.modifySTRef, 
    readSTRef: $foreign.readSTRef, 
    newSTRef: $foreign.newSTRef
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\Control.Monad.ST\\foreign.js","Control.Monad.Eff":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Control.Monad.Trans\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var MonadTrans = function (lift) {
    this.lift = lift;
};
var lift = function (dict) {
    return dict.lift;
};
module.exports = {
    MonadTrans: MonadTrans, 
    lift: lift
};

},{"Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Control.MonadPlus\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Control_Alternative = require("Control.Alternative");
var Control_Plus = require("Control.Plus");
var MonadPlus = function (__superclass_Control$dotAlternative$dotAlternative_1, __superclass_Prelude$dotMonad_0) {
    this["__superclass_Control.Alternative.Alternative_1"] = __superclass_Control$dotAlternative$dotAlternative_1;
    this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
};
var monadPlusArray = new MonadPlus(function () {
    return Control_Alternative.alternativeArray;
}, function () {
    return Prelude.monadArray;
});
var guard = function (__dict_MonadPlus_0) {
    return function (_410) {
        if (_410) {
            return Prelude["return"]((__dict_MonadPlus_0["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Prelude.Applicative_0"]())(Prelude.unit);
        };
        if (!_410) {
            return Control_Plus.empty((__dict_MonadPlus_0["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]());
        };
        throw new Error("Failed pattern match at Control.MonadPlus line 35, column 1 - line 36, column 1: " + [ _410.constructor.name ]);
    };
};
module.exports = {
    MonadPlus: MonadPlus, 
    guard: guard, 
    monadPlusArray: monadPlusArray
};

},{"Control.Alternative":"c:\\Development\\Web\\jundo\\output\\Control.Alternative\\index.js","Control.Plus":"c:\\Development\\Web\\jundo\\output\\Control.Plus\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Control.Plus\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Control_Alt = require("Control.Alt");
var Plus = function (__superclass_Control$dotAlt$dotAlt_0, empty) {
    this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
    this.empty = empty;
};
var plusArray = new Plus(function () {
    return Control_Alt.altArray;
}, [  ]);
var empty = function (dict) {
    return dict.empty;
};
module.exports = {
    Plus: Plus, 
    empty: empty, 
    plusArray: plusArray
};

},{"Control.Alt":"c:\\Development\\Web\\jundo\\output\\Control.Alt\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Cube\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Data_ArrayBuffer_Types = require("Data.ArrayBuffer.Types");
var Data_Maybe = require("Data.Maybe");
var Data_TypedArray = require("Data.TypedArray");
var Graphics_WebGL_Free = require("Graphics.WebGL.Free");
var Graphics_WebGL_Raw_Enums = require("Graphics.WebGL.Raw.Enums");
var Graphics_WebGL_Raw_Types = require("Graphics.WebGL.Raw.Types");
var Control_Monad_Free = require("Control.Monad.Free");
var vertices = Data_TypedArray.asFloat32Array([ -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0 ]);
var vertexIndices = Data_TypedArray.asUint16Array([ 0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13, 14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23 ]);
var initialiseBuffers = Prelude.bind(Control_Monad_Free.freeBind)(Graphics_WebGL_Free.createBuffer)(function (_83) {
    if (_83 instanceof Data_Maybe.Just) {
        return Prelude.bind(Control_Monad_Free.freeBind)(Graphics_WebGL_Free.bindBuffer(Graphics_WebGL_Raw_Enums.arrayBuffer)(_83.value0))(function () {
            return Prelude.bind(Control_Monad_Free.freeBind)(Graphics_WebGL_Free.bufferFloat32Data(Graphics_WebGL_Raw_Enums.arrayBuffer)(vertices)(Graphics_WebGL_Raw_Enums.staticDraw))(function () {
                return Prelude.bind(Control_Monad_Free.freeBind)(Graphics_WebGL_Free.createBuffer)(function (_82) {
                    if (_82 instanceof Data_Maybe.Just) {
                        return Prelude.bind(Control_Monad_Free.freeBind)(Graphics_WebGL_Free.bindBuffer(Graphics_WebGL_Raw_Enums.elementArrayBuffer)(_82.value0))(function () {
                            return Prelude.bind(Control_Monad_Free.freeBind)(Graphics_WebGL_Free.bufferUint16Data(Graphics_WebGL_Raw_Enums.elementArrayBuffer)(vertexIndices)(Graphics_WebGL_Raw_Enums.staticDraw))(function () {
                                return Prelude["return"](Control_Monad_Free.freeApplicative)({
                                    vertex: _83.value0, 
                                    index: _82.value0
                                });
                            });
                        });
                    };
                    throw new Error("Failed pattern match at Cube line 75, column 1 - line 76, column 1: " + [ _82.constructor.name ]);
                });
            });
        });
    };
    throw new Error("Failed pattern match at Cube line 75, column 1 - line 76, column 1: " + [ _83.constructor.name ]);
});
module.exports = {
    initialiseBuffers: initialiseBuffers
};

},{"Control.Monad.Free":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Free\\index.js","Data.ArrayBuffer.Types":"c:\\Development\\Web\\jundo\\output\\Data.ArrayBuffer.Types\\index.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js","Data.TypedArray":"c:\\Development\\Web\\jundo\\output\\Data.TypedArray\\index.js","Graphics.WebGL.Free":"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Free\\index.js","Graphics.WebGL.Raw.Enums":"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Raw.Enums\\index.js","Graphics.WebGL.Raw.Types":"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Raw.Types\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\DOM.Event.EventPhase\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Data_Enum = require("Data.Enum");
var Data_Maybe = require("Data.Maybe");
var None = (function () {
    function None() {

    };
    None.value = new None();
    return None;
})();
var Capturing = (function () {
    function Capturing() {

    };
    Capturing.value = new Capturing();
    return Capturing;
})();
var AtTarget = (function () {
    function AtTarget() {

    };
    AtTarget.value = new AtTarget();
    return AtTarget;
})();
var Bubbling = (function () {
    function Bubbling() {

    };
    Bubbling.value = new Bubbling();
    return Bubbling;
})();
var toEnumEventPhase = function (_813) {
    if (_813 === 0) {
        return new Data_Maybe.Just(None.value);
    };
    if (_813 === 1) {
        return new Data_Maybe.Just(Capturing.value);
    };
    if (_813 === 2) {
        return new Data_Maybe.Just(AtTarget.value);
    };
    if (_813 === 3) {
        return new Data_Maybe.Just(Bubbling.value);
    };
    return Data_Maybe.Nothing.value;
};
var fromEnumEventPhase = function (_814) {
    if (_814 instanceof None) {
        return 0;
    };
    if (_814 instanceof Capturing) {
        return 1;
    };
    if (_814 instanceof AtTarget) {
        return 2;
    };
    if (_814 instanceof Bubbling) {
        return 3;
    };
    throw new Error("Failed pattern match at DOM.Event.EventPhase line 44, column 1 - line 45, column 1: " + [ _814.constructor.name ]);
};
var eqEventPhase = new Prelude.Eq(function (_815) {
    return function (_816) {
        if (_815 instanceof None && _816 instanceof None) {
            return true;
        };
        if (_815 instanceof Capturing && _816 instanceof Capturing) {
            return true;
        };
        if (_815 instanceof AtTarget && _816 instanceof AtTarget) {
            return true;
        };
        if (_815 instanceof Bubbling && _816 instanceof Bubbling) {
            return true;
        };
        return false;
    };
});
var ordEventPhase = new Prelude.Ord(function () {
    return eqEventPhase;
}, function (x) {
    return function (y) {
        return Prelude.compare(Prelude.ordInt)(fromEnumEventPhase(x))(fromEnumEventPhase(y));
    };
});
var boundedEventPhase = new Prelude.Bounded(None.value, Bubbling.value);
var boundedOrdEventPhase = new Prelude.BoundedOrd(function () {
    return boundedEventPhase;
}, function () {
    return ordEventPhase;
});
var enumEventPhase = new Data_Enum.Enum(function () {
    return boundedEventPhase;
}, 4, fromEnumEventPhase, Data_Enum.defaultPred(toEnumEventPhase)(fromEnumEventPhase), Data_Enum.defaultSucc(toEnumEventPhase)(fromEnumEventPhase), toEnumEventPhase);
module.exports = {
    None: None, 
    Capturing: Capturing, 
    AtTarget: AtTarget, 
    Bubbling: Bubbling, 
    eqEventPhase: eqEventPhase, 
    ordEventPhase: ordEventPhase, 
    boundedEventPhase: boundedEventPhase, 
    boundedOrdEventPhase: boundedOrdEventPhase, 
    enumEventPhase: enumEventPhase
};

},{"Data.Enum":"c:\\Development\\Web\\jundo\\output\\Data.Enum\\index.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\DOM.Event.EventTarget\\foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module DOM.Event.EventTarget

exports.eventListener = function (fn) {
  return function (event) {
    return fn(event)();
  };
};

exports.addEventListener = function (type) {
  return function (listener) {
    return function (useCapture) {
      return function (target) {
        return function () {
          target.addEventListener(type, listener, useCapture);
          return {};
        };
      };
    };
  };
};

exports.removeEventListener = function (type) {
  return function (listener) {
    return function (useCapture) {
      return function (target) {
        return function () {
          target.removeEventListener(type, listener, useCapture);
          return {};
        };
      };
    };
  };
};

exports.dispatchEvent = function (event) {
  return function (target) {
    return function () {
      return target.dispatchEvent(event);
    };
  };
};

},{}],"c:\\Development\\Web\\jundo\\output\\DOM.Event.EventTarget\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_Eff_Exception = require("Control.Monad.Eff.Exception");
var DOM = require("DOM");
var DOM_Event_Types = require("DOM.Event.Types");
module.exports = {
    dispatchEvent: $foreign.dispatchEvent, 
    removeEventListener: $foreign.removeEventListener, 
    addEventListener: $foreign.addEventListener, 
    eventListener: $foreign.eventListener
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\DOM.Event.EventTarget\\foreign.js","Control.Monad.Eff":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff\\index.js","Control.Monad.Eff.Exception":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff.Exception\\index.js","DOM":"c:\\Development\\Web\\jundo\\output\\DOM\\index.js","DOM.Event.Types":"c:\\Development\\Web\\jundo\\output\\DOM.Event.Types\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\DOM.Event.EventTypes\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var DOM_Event_Types = require("DOM.Event.Types");
var wheel = "wheel";
var waiting = "waiting";
var volumechange = "volumechange";
var visibilitychange = "visibilitychange";
var unload = "unload";
var transitionend = "transitionend";
var touchstart = "touchstart";
var touchmove = "touchmove";
var touchleave = "touchleave";
var touchenter = "touchenter";
var touchend = "touchend";
var touchcancel = "touchcancel";
var timeupdate = "timeupdate";
var timeout = "timeout";
var suspend = "suspend";
var submit = "submit";
var stalled = "stalled";
var show = "show";
var select = "select";
var seeking = "seeking";
var seeked = "seeked";
var scroll = "scroll";
var resize = "resize";
var reset = "reset";
var readystatechange = "readystatechange";
var ratechange = "ratechange";
var progress = "progress";
var popstate = "popstate";
var playing = "playing";
var play = "play";
var pause = "pause";
var paste = "paste";
var pageshow = "pageshow";
var pagehide = "pagehide";
var open = "open";
var mouseup = "mouseup";
var mouseover = "mouseover";
var mouseout = "mouseout";
var mousemove = "mousemove";
var mouseleave = "mouseleave";
var mouseenter = "mouseenter";
var mousedown = "mousedown";
var message = "message";
var loadstart = "loadstart";
var loadend = "loadend";
var loadedmetadata = "loadedmetadata";
var loadeddata = "loadeddata";
var load = "load";
var keyup = "keyup";
var keypress = "keypress";
var keydown = "keydown";
var invalid = "invalid";
var input = "input";
var hashchange = "hashchange";
var fullscreenerror = "fullscreenerror";
var fullscreenchange = "fullscreenchange";
var focus = "focus";
var error = "error";
var ended = "ended";
var emptied = "emptied";
var durationchange = "durationchange";
var drop = "drop";
var dragstart = "dragstart";
var dragover = "dragover";
var dragleave = "dragleave";
var dragenter = "dragenter";
var dragend = "dragend";
var drag = "drag";
var dblclick = "dblclick";
var cut = "cut";
var copy = "copy";
var contextmenu = "contextmenu";
var compositionupdate = "compositionupdate";
var compositionstart = "compositionstart";
var compositionend = "compositionend";
var complete = "complete";
var click = "click";
var change = "change";
var canplaythrough = "canplaythrough";
var canplay = "canplay";
var blur = "blur";
var beforeunload = "beforeunload";
var beforeprint = "beforeprint";
var audioprocess = "audioprocess";
var animationstart = "animationstart";
var animationiteration = "animationiteration";
var animationend = "animationend";
var abort = "abort";
module.exports = {
    wheel: wheel, 
    waiting: waiting, 
    volumechange: volumechange, 
    visibilitychange: visibilitychange, 
    unload: unload, 
    transitionend: transitionend, 
    touchstart: touchstart, 
    touchmove: touchmove, 
    touchleave: touchleave, 
    touchenter: touchenter, 
    touchend: touchend, 
    touchcancel: touchcancel, 
    timeupdate: timeupdate, 
    timeout: timeout, 
    suspend: suspend, 
    submit: submit, 
    stalled: stalled, 
    show: show, 
    select: select, 
    seeking: seeking, 
    seeked: seeked, 
    scroll: scroll, 
    resize: resize, 
    reset: reset, 
    readystatechange: readystatechange, 
    ratechange: ratechange, 
    progress: progress, 
    popstate: popstate, 
    playing: playing, 
    play: play, 
    pause: pause, 
    paste: paste, 
    pageshow: pageshow, 
    pagehide: pagehide, 
    open: open, 
    mouseup: mouseup, 
    mouseover: mouseover, 
    mouseout: mouseout, 
    mousemove: mousemove, 
    mouseleave: mouseleave, 
    mouseenter: mouseenter, 
    mousedown: mousedown, 
    message: message, 
    loadstart: loadstart, 
    loadend: loadend, 
    loadedmetadata: loadedmetadata, 
    loadeddata: loadeddata, 
    load: load, 
    keyup: keyup, 
    keypress: keypress, 
    keydown: keydown, 
    invalid: invalid, 
    input: input, 
    hashchange: hashchange, 
    fullscreenerror: fullscreenerror, 
    fullscreenchange: fullscreenchange, 
    focus: focus, 
    error: error, 
    ended: ended, 
    emptied: emptied, 
    durationchange: durationchange, 
    drop: drop, 
    dragstart: dragstart, 
    dragover: dragover, 
    dragleave: dragleave, 
    dragenter: dragenter, 
    dragend: dragend, 
    drag: drag, 
    dblclick: dblclick, 
    cut: cut, 
    copy: copy, 
    contextmenu: contextmenu, 
    compositionupdate: compositionupdate, 
    compositionstart: compositionstart, 
    compositionend: compositionend, 
    complete: complete, 
    click: click, 
    change: change, 
    canplaythrough: canplaythrough, 
    canplay: canplay, 
    blur: blur, 
    beforeunload: beforeunload, 
    beforeprint: beforeprint, 
    audioprocess: audioprocess, 
    animationstart: animationstart, 
    animationiteration: animationiteration, 
    animationend: animationend, 
    abort: abort
};

},{"DOM.Event.Types":"c:\\Development\\Web\\jundo\\output\\DOM.Event.Types\\index.js"}],"c:\\Development\\Web\\jundo\\output\\DOM.Event.Experimental\\foreign.js":[function(require,module,exports){
// module DOM.Event.Experimental

var fullscreenChangeEvent = 'fullscreenchange';

// Use the requestFullScreen function to guess if we need to use a browser-specific prefix
if (Element.prototype.webkitRequestFullScreen) {
  fullscreenChangeEvent = 'webkitfullscreenchange';
} else if (Element.prototype.mozRequestFullScreen) {
  fullscreenChangeEvent = 'mozfullscreenchange';
} else {
  fullscreenChangeEvent = 'msfullscreenchange';
}

exports.fullscreenChangeEvent = fullscreenChangeEvent;


},{}],"c:\\Development\\Web\\jundo\\output\\DOM.Event.Experimental\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var DOM_Event_Types = require("DOM.Event.Types");
var fullscreenChange = $foreign.fullscreenChangeName;
module.exports = {
    fullscreenChange: fullscreenChange
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\DOM.Event.Experimental\\foreign.js","DOM.Event.Types":"c:\\Development\\Web\\jundo\\output\\DOM.Event.Types\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\DOM.Event.MouseEvent\\foreign.js":[function(require,module,exports){
// module DOM.Event.MouseEvent

exports.movementX = function(event) {
  return event.movementX;
};

exports.movementY = function(event) {
  return event.movementY;
};

exports.mouseEventListener = function (fn) {
  return function (event) {
    return fn(event)();
  };
};

exports.addMouseEventListenerImpl = function (type) {
  return function (listener) {
    return function (useCapture) {
      return function (target) {
        return function () {
          target.addEventListener(type, listener, useCapture);
          return {};
        };
      };
    };
  };
};

},{}],"c:\\Development\\Web\\jundo\\output\\DOM.Event.MouseEvent\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var DOM = require("DOM");
var DOM_Event_Types = require("DOM.Event.Types");
var DOM_Event_EventTypes = require("DOM.Event.EventTypes");
var MouseEventType = function (x) {
    return x;
};
var mousemove = DOM_Event_EventTypes.mousemove;
var click = DOM_Event_EventTypes.click;
var addMouseEventListener = function (_822) {
    return function (callback) {
        return function (useCapture) {
            return function (target) {
                return $foreign.addMouseEventListenerImpl(_822)($foreign.mouseEventListener(callback))(useCapture)(target);
            };
        };
    };
};
module.exports = {
    mousemove: mousemove, 
    click: click, 
    addMouseEventListener: addMouseEventListener, 
    movementY: $foreign.movementY, 
    movementX: $foreign.movementX
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\DOM.Event.MouseEvent\\foreign.js","Control.Monad.Eff":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff\\index.js","DOM":"c:\\Development\\Web\\jundo\\output\\DOM\\index.js","DOM.Event.EventTypes":"c:\\Development\\Web\\jundo\\output\\DOM.Event.EventTypes\\index.js","DOM.Event.Types":"c:\\Development\\Web\\jundo\\output\\DOM.Event.Types\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\DOM.Event.Types\\foreign.js":[function(require,module,exports){
/* global exports, EventTarget */
"use strict";

// module DOM.Event.Types

exports._readEventTarget = function (left) {
  return function (right) {
    return function (foreign) {
      return foreign instanceof EventTarget ? left("Value is not an EventTarget") : right(foreign);
    };
  };
};

},{}],"c:\\Development\\Web\\jundo\\output\\DOM.Event.Types\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Either = require("Data.Either");
var Data_Foreign = require("Data.Foreign");
var Data_Foreign_Class = require("Data.Foreign.Class");
var Data_Maybe_Unsafe = require("Data.Maybe.Unsafe");
var Unsafe_Coerce = require("Unsafe.Coerce");
var DOM = require("DOM");
var DOM_Event_EventPhase = require("DOM.Event.EventPhase");
var EventType = function (x) {
    return x;
};
var unsafeToEvent = Unsafe_Coerce.unsafeCoerce;
var userProximityEventToEvent = unsafeToEvent;
var wheelEventToEvent = unsafeToEvent;
var uiEventToEvent = unsafeToEvent;
var transitionEventToEvent = unsafeToEvent;
var touchEventToEvent = unsafeToEvent;
var timeEventToEvent = unsafeToEvent;
var svgZoomEventToEvent = unsafeToEvent;
var svgEventToEvent = unsafeToEvent;
var storageEventToEvent = unsafeToEvent;
var sensorEventToEvent = unsafeToEvent;
var rtcPeerConnectionIceEventToEvent = unsafeToEvent;
var rtcIdentityEventToEvent = unsafeToEvent;
var rtcIdentityErrorEventToEvent = unsafeToEvent;
var rtcDataChannelEventToEvent = unsafeToEvent;
var relatedEventToEvent = unsafeToEvent;
var readWheelEvent = Data_Foreign.unsafeReadTagged("WheelEvent");
var readUserProximityEvent = Data_Foreign.unsafeReadTagged("UserProximityEvent");
var readUIEvent = Data_Foreign.unsafeReadTagged("UIEvent");
var readTransitionEvent = Data_Foreign.unsafeReadTagged("TransitionEvent");
var readTouchEvent = Data_Foreign.unsafeReadTagged("TouchEvent");
var readTimeEvent = Data_Foreign.unsafeReadTagged("TimeEvent");
var readStorageEvent = Data_Foreign.unsafeReadTagged("StorageEvent");
var readSensorEvent = Data_Foreign.unsafeReadTagged("SensorEvent");
var readSVGZoomEvent = Data_Foreign.unsafeReadTagged("SVGZoomEvent");
var readSVGEvent = Data_Foreign.unsafeReadTagged("SVGEvent");
var readRelatedEvent = Data_Foreign.unsafeReadTagged("RelatedEvent");
var readRTCPeerConnectionIceEvent = Data_Foreign.unsafeReadTagged("RTCPeerConnectionIceEvent");
var readRTCIdentityEvent = Data_Foreign.unsafeReadTagged("RTCIdentityEvent");
var readRTCIdentityErrorEvent = Data_Foreign.unsafeReadTagged("RTCIdentityErrorEvent");
var readRTCDataChannelEvent = Data_Foreign.unsafeReadTagged("RTCDataChannelEvent");
var readProgressEvent = Data_Foreign.unsafeReadTagged("ProgressEvent");
var readPopStateEvent = Data_Foreign.unsafeReadTagged("PopStateEvent");
var readPointerEvent = Data_Foreign.unsafeReadTagged("PointerEvent");
var readPageTransitionEvent = Data_Foreign.unsafeReadTagged("PageTransitionEvent");
var readOfflineAudioCompletionEvent = Data_Foreign.unsafeReadTagged("OfflineAudioCompletionEvent");
var readMutationEvent = Data_Foreign.unsafeReadTagged("MutationEvent");
var readMouseEvent = Data_Foreign.unsafeReadTagged("MouseEvent");
var readMessageEvent = Data_Foreign.unsafeReadTagged("MessageEvent");
var readMediaStreamEvent = Data_Foreign.unsafeReadTagged("MediaStreamEvent");
var readKeyboardEvent = Data_Foreign.unsafeReadTagged("KeyboardEvent");
var readInputEvent = Data_Foreign.unsafeReadTagged("InputEvent");
var readIDBVersionChangeEvent = Data_Foreign.unsafeReadTagged("IDBVersionChangeEvent");
var readHashChangeEvent = Data_Foreign.unsafeReadTagged("HashChangeEvent");
var readGamepadEvent = Data_Foreign.unsafeReadTagged("GamepadEvent");
var readFocusEvent = Data_Foreign.unsafeReadTagged("FocusEvent");
var readFetchEvent = Data_Foreign.unsafeReadTagged("FetchEvent");
var readEventTarget = $foreign._readEventTarget(Data_Either.Left.create)(Data_Either.Right.create);
var readErrorEvent = Data_Foreign.unsafeReadTagged("ErrorEvent");
var readEditingBeforeInputEvent = Data_Foreign.unsafeReadTagged("EditingBeforeInputEvent");
var readDragEvent = Data_Foreign.unsafeReadTagged("DragEvent");
var readDeviceProximityEvent = Data_Foreign.unsafeReadTagged("DeviceProximityEvent");
var readDeviceOrientationEvent = Data_Foreign.unsafeReadTagged("DeviceOrientationEvent");
var readDeviceMotionEvent = Data_Foreign.unsafeReadTagged("DeviceMotionEvent");
var readDeviceLightEvent = Data_Foreign.unsafeReadTagged("DeviceLightEvent");
var readDOMTransactionEvent = Data_Foreign.unsafeReadTagged("DOMTransactionEvent");
var readCustomEvent = Data_Foreign.unsafeReadTagged("CustomEvent");
var readCompositionEvent = Data_Foreign.unsafeReadTagged("CompositionEvent");
var readCloseEvent = Data_Foreign.unsafeReadTagged("CloseEvent");
var readClipboardEvent = Data_Foreign.unsafeReadTagged("ClipboardEvent");
var readCSSFontFaceLoadEvent = Data_Foreign.unsafeReadTagged("CSSFontFaceLoadEvent");
var readBlobEvent = Data_Foreign.unsafeReadTagged("BlobEvent");
var readBeforeUnloadEvent = Data_Foreign.unsafeReadTagged("BeforeUnloadEvent");
var readBeforeInputEvent = Data_Foreign.unsafeReadTagged("BeforeInputEvent");
var readAudioProcessingEvent = Data_Foreign.unsafeReadTagged("AudioProcessingEvent");
var readAnimationEvent = Data_Foreign.unsafeReadTagged("AnimationEvent");
var progressEventToEvent = unsafeToEvent;
var popStateEventToEvent = unsafeToEvent;
var pointerEventToEvent = unsafeToEvent;
var pageTransitionEventToEvent = unsafeToEvent;
var offlineAudioCompletionEventToEvent = unsafeToEvent;
var mutationEventToEvent = unsafeToEvent;
var mouseEventToEvent = unsafeToEvent;
var messageEventToEvent = unsafeToEvent;
var mediaStreamEventToEvent = unsafeToEvent;
var keyboardEventToEvent = unsafeToEvent;
var isForeignWheelEvent = new Data_Foreign_Class.IsForeign(readWheelEvent);
var isForeignUserProximityEvent = new Data_Foreign_Class.IsForeign(readUserProximityEvent);
var isForeignUIEvent = new Data_Foreign_Class.IsForeign(readUIEvent);
var isForeignTransitionEvent = new Data_Foreign_Class.IsForeign(readTransitionEvent);
var isForeignTouchEvent = new Data_Foreign_Class.IsForeign(readTouchEvent);
var isForeignTimeEvent = new Data_Foreign_Class.IsForeign(readTimeEvent);
var isForeignStorageEvent = new Data_Foreign_Class.IsForeign(readStorageEvent);
var isForeignSensorEvent = new Data_Foreign_Class.IsForeign(readSensorEvent);
var isForeignSVGZoomEvent = new Data_Foreign_Class.IsForeign(readSVGZoomEvent);
var isForeignSVGEvent = new Data_Foreign_Class.IsForeign(readSVGEvent);
var isForeignRelatedEvent = new Data_Foreign_Class.IsForeign(readRelatedEvent);
var isForeignRTCPeerConnectionIceEvent = new Data_Foreign_Class.IsForeign(readRTCPeerConnectionIceEvent);
var isForeignRTCIdentityEvent = new Data_Foreign_Class.IsForeign(readRTCIdentityEvent);
var isForeignRTCIdentityErrorEvent = new Data_Foreign_Class.IsForeign(readRTCIdentityErrorEvent);
var isForeignRTCDataChannelEvent = new Data_Foreign_Class.IsForeign(readRTCDataChannelEvent);
var isForeignProgressEvent = new Data_Foreign_Class.IsForeign(readProgressEvent);
var isForeignPopStateEvent = new Data_Foreign_Class.IsForeign(readPopStateEvent);
var isForeignPointerEvent = new Data_Foreign_Class.IsForeign(readPointerEvent);
var isForeignPageTransitionEvent = new Data_Foreign_Class.IsForeign(readPageTransitionEvent);
var isForeignOfflineAudioCompletionEvent = new Data_Foreign_Class.IsForeign(readOfflineAudioCompletionEvent);
var isForeignMutationEvent = new Data_Foreign_Class.IsForeign(readMutationEvent);
var isForeignMouseEvent = new Data_Foreign_Class.IsForeign(readMouseEvent);
var isForeignMessageEvent = new Data_Foreign_Class.IsForeign(readMessageEvent);
var isForeignMediaStreamEvent = new Data_Foreign_Class.IsForeign(readMediaStreamEvent);
var isForeignKeyboardEvent = new Data_Foreign_Class.IsForeign(readKeyboardEvent);
var isForeignInputEvent = new Data_Foreign_Class.IsForeign(readInputEvent);
var isForeignIDBVersionChangeEvent = new Data_Foreign_Class.IsForeign(readIDBVersionChangeEvent);
var isForeignHashChangeEvent = new Data_Foreign_Class.IsForeign(readHashChangeEvent);
var isForeignGamepadEvent = new Data_Foreign_Class.IsForeign(readGamepadEvent);
var isForeignFocusEvent = new Data_Foreign_Class.IsForeign(readFocusEvent);
var isForeignFetchEvent = new Data_Foreign_Class.IsForeign(readFetchEvent);
var isForeignEventTarget = new Data_Foreign_Class.IsForeign(readEventTarget);
var isForeignErrorEvent = new Data_Foreign_Class.IsForeign(readErrorEvent);
var isForeignEditingBeforeInputEvent = new Data_Foreign_Class.IsForeign(readEditingBeforeInputEvent);
var isForeignDragEvent = new Data_Foreign_Class.IsForeign(readDragEvent);
var isForeignDeviceProximityEvent = new Data_Foreign_Class.IsForeign(readDeviceProximityEvent);
var isForeignDeviceOrientationEvent = new Data_Foreign_Class.IsForeign(readDeviceOrientationEvent);
var isForeignDeviceMotionEvent = new Data_Foreign_Class.IsForeign(readDeviceMotionEvent);
var isForeignDeviceLightEvent = new Data_Foreign_Class.IsForeign(readDeviceLightEvent);
var isForeignDOMTransactionEvent = new Data_Foreign_Class.IsForeign(readDOMTransactionEvent);
var isForeignCustomEvent = new Data_Foreign_Class.IsForeign(readCustomEvent);
var isForeignCompositionEvent = new Data_Foreign_Class.IsForeign(readCompositionEvent);
var isForeignCloseEvent = new Data_Foreign_Class.IsForeign(readCloseEvent);
var isForeignClipboardEvent = new Data_Foreign_Class.IsForeign(readClipboardEvent);
var isForeignCSSFontFaceLoadEvent = new Data_Foreign_Class.IsForeign(readCSSFontFaceLoadEvent);
var isForeignBlobEvent = new Data_Foreign_Class.IsForeign(readBlobEvent);
var isForeignBeforeUnloadEvent = new Data_Foreign_Class.IsForeign(readBeforeUnloadEvent);
var isForeignBeforeInputEvent = new Data_Foreign_Class.IsForeign(readBeforeInputEvent);
var isForeignAudioProcessingEvent = new Data_Foreign_Class.IsForeign(readAudioProcessingEvent);
var isForeignAnimationEvent = new Data_Foreign_Class.IsForeign(readAnimationEvent);
var inputEventToEvent = unsafeToEvent;
var idbVersionChangeEventToEvent = unsafeToEvent;
var hashChangeEventToEvent = unsafeToEvent;
var gamepadEventToEvent = unsafeToEvent;
var focusEventToEvent = unsafeToEvent;
var fetchEventToEvent = unsafeToEvent;
var errorEventToEvent = unsafeToEvent;
var eqEventType = new Prelude.Eq(function (_817) {
    return function (_818) {
        return Prelude["=="](Prelude.eqString)(_817)(_818);
    };
});
var ordEventType = new Prelude.Ord(function () {
    return eqEventType;
}, function (_819) {
    return function (_820) {
        return Prelude.compare(Prelude.ordString)(_819)(_820);
    };
});
var editingBeforeInputEventToEvent = unsafeToEvent;
var dragEventToEvent = unsafeToEvent;
var domTransactionEventToEvent = unsafeToEvent;
var deviceProximityEventToEvent = unsafeToEvent;
var deviceOrientationEventToEvent = unsafeToEvent;
var deviceMotionEventToEvent = unsafeToEvent;
var deviceLightEventToEvent = unsafeToEvent;
var customEventToEvent = unsafeToEvent;
var cssFontFaceLoadEventToEvent = unsafeToEvent;
var compositionEventToEvent = unsafeToEvent;
var closeEventToEvent = unsafeToEvent;
var clipboardEventToEvent = unsafeToEvent;
var blobEventToEvent = unsafeToEvent;
var beforeUnloadEventToEvent = unsafeToEvent;
var beforeInputEventToEvent = unsafeToEvent;
var audioProcessingEventToEvent = unsafeToEvent;
var animationEventToEvent = unsafeToEvent;
module.exports = {
    EventType: EventType, 
    readWheelEvent: readWheelEvent, 
    wheelEventToEvent: wheelEventToEvent, 
    readUserProximityEvent: readUserProximityEvent, 
    userProximityEventToEvent: userProximityEventToEvent, 
    readUIEvent: readUIEvent, 
    uiEventToEvent: uiEventToEvent, 
    readTransitionEvent: readTransitionEvent, 
    transitionEventToEvent: transitionEventToEvent, 
    readTouchEvent: readTouchEvent, 
    touchEventToEvent: touchEventToEvent, 
    readTimeEvent: readTimeEvent, 
    timeEventToEvent: timeEventToEvent, 
    readSVGZoomEvent: readSVGZoomEvent, 
    svgZoomEventToEvent: svgZoomEventToEvent, 
    readSVGEvent: readSVGEvent, 
    svgEventToEvent: svgEventToEvent, 
    readStorageEvent: readStorageEvent, 
    storageEventToEvent: storageEventToEvent, 
    readSensorEvent: readSensorEvent, 
    sensorEventToEvent: sensorEventToEvent, 
    readRTCPeerConnectionIceEvent: readRTCPeerConnectionIceEvent, 
    rtcPeerConnectionIceEventToEvent: rtcPeerConnectionIceEventToEvent, 
    readRTCIdentityEvent: readRTCIdentityEvent, 
    rtcIdentityEventToEvent: rtcIdentityEventToEvent, 
    readRTCIdentityErrorEvent: readRTCIdentityErrorEvent, 
    rtcIdentityErrorEventToEvent: rtcIdentityErrorEventToEvent, 
    readRTCDataChannelEvent: readRTCDataChannelEvent, 
    rtcDataChannelEventToEvent: rtcDataChannelEventToEvent, 
    readRelatedEvent: readRelatedEvent, 
    relatedEventToEvent: relatedEventToEvent, 
    readProgressEvent: readProgressEvent, 
    progressEventToEvent: progressEventToEvent, 
    readPopStateEvent: readPopStateEvent, 
    popStateEventToEvent: popStateEventToEvent, 
    readPointerEvent: readPointerEvent, 
    pointerEventToEvent: pointerEventToEvent, 
    readPageTransitionEvent: readPageTransitionEvent, 
    pageTransitionEventToEvent: pageTransitionEventToEvent, 
    readOfflineAudioCompletionEvent: readOfflineAudioCompletionEvent, 
    offlineAudioCompletionEventToEvent: offlineAudioCompletionEventToEvent, 
    readMutationEvent: readMutationEvent, 
    mutationEventToEvent: mutationEventToEvent, 
    readMouseEvent: readMouseEvent, 
    mouseEventToEvent: mouseEventToEvent, 
    readMessageEvent: readMessageEvent, 
    messageEventToEvent: messageEventToEvent, 
    readMediaStreamEvent: readMediaStreamEvent, 
    mediaStreamEventToEvent: mediaStreamEventToEvent, 
    readKeyboardEvent: readKeyboardEvent, 
    keyboardEventToEvent: keyboardEventToEvent, 
    readInputEvent: readInputEvent, 
    inputEventToEvent: inputEventToEvent, 
    readIDBVersionChangeEvent: readIDBVersionChangeEvent, 
    idbVersionChangeEventToEvent: idbVersionChangeEventToEvent, 
    readHashChangeEvent: readHashChangeEvent, 
    hashChangeEventToEvent: hashChangeEventToEvent, 
    readGamepadEvent: readGamepadEvent, 
    gamepadEventToEvent: gamepadEventToEvent, 
    readFocusEvent: readFocusEvent, 
    focusEventToEvent: focusEventToEvent, 
    readFetchEvent: readFetchEvent, 
    fetchEventToEvent: fetchEventToEvent, 
    readErrorEvent: readErrorEvent, 
    errorEventToEvent: errorEventToEvent, 
    readEditingBeforeInputEvent: readEditingBeforeInputEvent, 
    editingBeforeInputEventToEvent: editingBeforeInputEventToEvent, 
    readDragEvent: readDragEvent, 
    dragEventToEvent: dragEventToEvent, 
    readDOMTransactionEvent: readDOMTransactionEvent, 
    domTransactionEventToEvent: domTransactionEventToEvent, 
    readDeviceProximityEvent: readDeviceProximityEvent, 
    deviceProximityEventToEvent: deviceProximityEventToEvent, 
    readDeviceOrientationEvent: readDeviceOrientationEvent, 
    deviceOrientationEventToEvent: deviceOrientationEventToEvent, 
    readDeviceMotionEvent: readDeviceMotionEvent, 
    deviceMotionEventToEvent: deviceMotionEventToEvent, 
    readDeviceLightEvent: readDeviceLightEvent, 
    deviceLightEventToEvent: deviceLightEventToEvent, 
    readCustomEvent: readCustomEvent, 
    customEventToEvent: customEventToEvent, 
    readCSSFontFaceLoadEvent: readCSSFontFaceLoadEvent, 
    cssFontFaceLoadEventToEvent: cssFontFaceLoadEventToEvent, 
    readCompositionEvent: readCompositionEvent, 
    compositionEventToEvent: compositionEventToEvent, 
    readCloseEvent: readCloseEvent, 
    closeEventToEvent: closeEventToEvent, 
    readClipboardEvent: readClipboardEvent, 
    clipboardEventToEvent: clipboardEventToEvent, 
    readBlobEvent: readBlobEvent, 
    blobEventToEvent: blobEventToEvent, 
    readBeforeUnloadEvent: readBeforeUnloadEvent, 
    beforeUnloadEventToEvent: beforeUnloadEventToEvent, 
    readBeforeInputEvent: readBeforeInputEvent, 
    beforeInputEventToEvent: beforeInputEventToEvent, 
    readAudioProcessingEvent: readAudioProcessingEvent, 
    audioProcessingEventToEvent: audioProcessingEventToEvent, 
    readAnimationEvent: readAnimationEvent, 
    animationEventToEvent: animationEventToEvent, 
    readEventTarget: readEventTarget, 
    eqEventType: eqEventType, 
    ordEventType: ordEventType, 
    isForeignEventTarget: isForeignEventTarget, 
    isForeignAnimationEvent: isForeignAnimationEvent, 
    isForeignAudioProcessingEvent: isForeignAudioProcessingEvent, 
    isForeignBeforeInputEvent: isForeignBeforeInputEvent, 
    isForeignBeforeUnloadEvent: isForeignBeforeUnloadEvent, 
    isForeignBlobEvent: isForeignBlobEvent, 
    isForeignClipboardEvent: isForeignClipboardEvent, 
    isForeignCloseEvent: isForeignCloseEvent, 
    isForeignCompositionEvent: isForeignCompositionEvent, 
    isForeignCSSFontFaceLoadEvent: isForeignCSSFontFaceLoadEvent, 
    isForeignCustomEvent: isForeignCustomEvent, 
    isForeignDeviceLightEvent: isForeignDeviceLightEvent, 
    isForeignDeviceMotionEvent: isForeignDeviceMotionEvent, 
    isForeignDeviceOrientationEvent: isForeignDeviceOrientationEvent, 
    isForeignDeviceProximityEvent: isForeignDeviceProximityEvent, 
    isForeignDOMTransactionEvent: isForeignDOMTransactionEvent, 
    isForeignDragEvent: isForeignDragEvent, 
    isForeignEditingBeforeInputEvent: isForeignEditingBeforeInputEvent, 
    isForeignErrorEvent: isForeignErrorEvent, 
    isForeignFetchEvent: isForeignFetchEvent, 
    isForeignFocusEvent: isForeignFocusEvent, 
    isForeignGamepadEvent: isForeignGamepadEvent, 
    isForeignHashChangeEvent: isForeignHashChangeEvent, 
    isForeignIDBVersionChangeEvent: isForeignIDBVersionChangeEvent, 
    isForeignInputEvent: isForeignInputEvent, 
    isForeignKeyboardEvent: isForeignKeyboardEvent, 
    isForeignMediaStreamEvent: isForeignMediaStreamEvent, 
    isForeignMessageEvent: isForeignMessageEvent, 
    isForeignMouseEvent: isForeignMouseEvent, 
    isForeignMutationEvent: isForeignMutationEvent, 
    isForeignOfflineAudioCompletionEvent: isForeignOfflineAudioCompletionEvent, 
    isForeignPageTransitionEvent: isForeignPageTransitionEvent, 
    isForeignPointerEvent: isForeignPointerEvent, 
    isForeignPopStateEvent: isForeignPopStateEvent, 
    isForeignProgressEvent: isForeignProgressEvent, 
    isForeignRelatedEvent: isForeignRelatedEvent, 
    isForeignRTCDataChannelEvent: isForeignRTCDataChannelEvent, 
    isForeignRTCIdentityErrorEvent: isForeignRTCIdentityErrorEvent, 
    isForeignRTCIdentityEvent: isForeignRTCIdentityEvent, 
    isForeignRTCPeerConnectionIceEvent: isForeignRTCPeerConnectionIceEvent, 
    isForeignSensorEvent: isForeignSensorEvent, 
    isForeignStorageEvent: isForeignStorageEvent, 
    isForeignSVGEvent: isForeignSVGEvent, 
    isForeignSVGZoomEvent: isForeignSVGZoomEvent, 
    isForeignTimeEvent: isForeignTimeEvent, 
    isForeignTouchEvent: isForeignTouchEvent, 
    isForeignTransitionEvent: isForeignTransitionEvent, 
    isForeignUIEvent: isForeignUIEvent, 
    isForeignUserProximityEvent: isForeignUserProximityEvent, 
    isForeignWheelEvent: isForeignWheelEvent
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\DOM.Event.Types\\foreign.js","Control.Monad.Eff":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff\\index.js","DOM":"c:\\Development\\Web\\jundo\\output\\DOM\\index.js","DOM.Event.EventPhase":"c:\\Development\\Web\\jundo\\output\\DOM.Event.EventPhase\\index.js","Data.Either":"c:\\Development\\Web\\jundo\\output\\Data.Either\\index.js","Data.Foreign":"c:\\Development\\Web\\jundo\\output\\Data.Foreign\\index.js","Data.Foreign.Class":"c:\\Development\\Web\\jundo\\output\\Data.Foreign.Class\\index.js","Data.Maybe.Unsafe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe.Unsafe\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js","Unsafe.Coerce":"c:\\Development\\Web\\jundo\\output\\Unsafe.Coerce\\index.js"}],"c:\\Development\\Web\\jundo\\output\\DOM.HTML.Types\\foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module DOM.HTML.Types

exports._readHTMLElement = function (failure) {
  return function (success) {
    return function (value) {
      var tag = Object.prototype.toString.call(value);
      if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) {
        return success(value);
      } else {
        return failure(tag);
      }
    };
  };
};

},{}],"c:\\Development\\Web\\jundo\\output\\DOM.HTML.Types\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Either = require("Data.Either");
var Data_Foreign = require("Data.Foreign");
var Data_Foreign_Class = require("Data.Foreign.Class");
var DOM_Event_Types = require("DOM.Event.Types");
var DOM_Node_Types = require("DOM.Node.Types");
var Unsafe_Coerce = require("Unsafe.Coerce");
var windowToEventTarget = Unsafe_Coerce.unsafeCoerce;
var readHTMLElement = $foreign._readHTMLElement(function (_3100) {
    return Data_Either.Left.create(Data_Foreign.TypeMismatch.create("HTMLElement")(_3100));
})(Data_Either.Right.create);
var readHTMLDocument = Data_Foreign.unsafeReadTagged("HTMLDocument");
var isForeignHTMLElement = new Data_Foreign_Class.IsForeign(readHTMLElement);
var isForeignHTMLDocument = new Data_Foreign_Class.IsForeign(readHTMLDocument);
var htmlElementToParentNode = Unsafe_Coerce.unsafeCoerce;
var htmlElementToNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var htmlElementToNode = Unsafe_Coerce.unsafeCoerce;
var htmlElementToEventTarget = Unsafe_Coerce.unsafeCoerce;
var htmlElementToElement = Unsafe_Coerce.unsafeCoerce;
var htmlDocumentToParentNode = Unsafe_Coerce.unsafeCoerce;
var htmlDocumentToNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
var htmlDocumentToNode = Unsafe_Coerce.unsafeCoerce;
var htmlDocumentToEventTarget = Unsafe_Coerce.unsafeCoerce;
var htmlDocumentToDocument = Unsafe_Coerce.unsafeCoerce;
module.exports = {
    readHTMLElement: readHTMLElement, 
    htmlElementToEventTarget: htmlElementToEventTarget, 
    htmlElementToNode: htmlElementToNode, 
    htmlElementToNonDocumentTypeChildNode: htmlElementToNonDocumentTypeChildNode, 
    htmlElementToParentNode: htmlElementToParentNode, 
    htmlElementToElement: htmlElementToElement, 
    readHTMLDocument: readHTMLDocument, 
    htmlDocumentToEventTarget: htmlDocumentToEventTarget, 
    htmlDocumentToNode: htmlDocumentToNode, 
    htmlDocumentToParentNode: htmlDocumentToParentNode, 
    htmlDocumentToNonElementParentNode: htmlDocumentToNonElementParentNode, 
    htmlDocumentToDocument: htmlDocumentToDocument, 
    windowToEventTarget: windowToEventTarget, 
    isForeignHTMLDocument: isForeignHTMLDocument, 
    isForeignHTMLElement: isForeignHTMLElement
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\DOM.HTML.Types\\foreign.js","DOM.Event.Types":"c:\\Development\\Web\\jundo\\output\\DOM.Event.Types\\index.js","DOM.Node.Types":"c:\\Development\\Web\\jundo\\output\\DOM.Node.Types\\index.js","Data.Either":"c:\\Development\\Web\\jundo\\output\\Data.Either\\index.js","Data.Foreign":"c:\\Development\\Web\\jundo\\output\\Data.Foreign\\index.js","Data.Foreign.Class":"c:\\Development\\Web\\jundo\\output\\Data.Foreign.Class\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js","Unsafe.Coerce":"c:\\Development\\Web\\jundo\\output\\Unsafe.Coerce\\index.js"}],"c:\\Development\\Web\\jundo\\output\\DOM.HTML.Window\\foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module DOM.HTML.Window

exports.document = function (window) {
  return function () {
    return window.document;
  };
};

},{}],"c:\\Development\\Web\\jundo\\output\\DOM.HTML.Window\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("Control.Monad.Eff");
var DOM = require("DOM");
var DOM_HTML_Types = require("DOM.HTML.Types");
module.exports = {
    document: $foreign.document
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\DOM.HTML.Window\\foreign.js","Control.Monad.Eff":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff\\index.js","DOM":"c:\\Development\\Web\\jundo\\output\\DOM\\index.js","DOM.HTML.Types":"c:\\Development\\Web\\jundo\\output\\DOM.HTML.Types\\index.js"}],"c:\\Development\\Web\\jundo\\output\\DOM.HTML\\foreign.js":[function(require,module,exports){
/* global exports, window */
"use strict";

// module DOM.HTML

exports.window = function () {
  return window;
};

},{}],"c:\\Development\\Web\\jundo\\output\\DOM.HTML\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("Control.Monad.Eff");
var DOM = require("DOM");
var DOM_HTML_Types = require("DOM.HTML.Types");
module.exports = {
    window: $foreign.window
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\DOM.HTML\\foreign.js","Control.Monad.Eff":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff\\index.js","DOM":"c:\\Development\\Web\\jundo\\output\\DOM\\index.js","DOM.HTML.Types":"c:\\Development\\Web\\jundo\\output\\DOM.HTML.Types\\index.js"}],"c:\\Development\\Web\\jundo\\output\\DOM.Node.Document.Experimental\\foreign.js":[function(require,module,exports){
// module DOM.Node.Document.Experimental

var fullscreenPrefix = 'fullscreen';

if (Element.prototype.webkitRequestFullscreen !== undefined) {
  fullscreenPrefix = 'webkitFullscreen';
} else if (Element.prototype.mozRequestFullscreen !== undefined) {
  fullscreenPrefix = 'mozFullscreen';
} else if (Element.prototype.msRequestFullscreen !== undefined) {
  fullscreenPrefix = 'msFullscreen';
}

exports.fullscreenEnabled = function(doc) {
  return function() {
    return doc[fullscreenPrefix + 'Enabled'];
  };
};

exports.fullscreenElement = function(doc) {
  return function() {
    return doc[fullscreenPrefix + 'Element'];
  };
};

var exitPointerLockFunction = Document.prototype.exitPointerLock || Document.prototype.webkitExitPointerLock || Document.prototype.mozExitPointerLock || Document.prototype.msExitPointerLock;

exports.exitPointerLock = function(doc) {
  return function() {
    exitPointerLockFunction.call(doc);
    return {};
  };
};

var pointerLockElementProperty = 'pointerLockElement';

if (Document.prototype.webkitPointerLockElement !== undefined) {
  pointerLockElementProperty = 'webkitPointerLockElement';
} else if (Document.prototype.mozPointerLockElement !== undefined) {
  pointerLockElementProperty = 'mozPointerLockElement';
} else if (Document.prototype.msPointerLockElement !== undefined) {
  pointerLockElementProperty = 'msPointerLockElement';
}

exports.pointerLockElement = function(doc) {
  return function() {
    return doc[pointerLockElementProperty];
  };
};


},{}],"c:\\Development\\Web\\jundo\\output\\DOM.Node.Document.Experimental\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Nullable = require("Data.Nullable");
var DOM = require("DOM");
var DOM_Node_Types = require("DOM.Node.Types");
module.exports = {
    pointerLockElement: $foreign.pointerLockElement, 
    exitPointerLock: $foreign.exitPointerLock, 
    fullscreenEnabled: $foreign.fullscreenEnabled, 
    fullscreenElement: $foreign.fullscreenElement
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\DOM.Node.Document.Experimental\\foreign.js","Control.Monad.Eff":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff\\index.js","DOM":"c:\\Development\\Web\\jundo\\output\\DOM\\index.js","DOM.Node.Types":"c:\\Development\\Web\\jundo\\output\\DOM.Node.Types\\index.js","Data.Nullable":"c:\\Development\\Web\\jundo\\output\\Data.Nullable\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\DOM.Node.Element.Experimental\\foreign.js":[function(require,module,exports){
// module DOM.Node.Element.Experimental

exports.clientHeight = function(el) {
  return function() {
    return el.clientHeight;
  };
};

exports.clientWidth = function(el) {
  return function() {
    return el.clientWidth;
  };
};

var fullscreenFunction = Element.prototype.requestFullscreen || Element.prototype.webkitRequestFullScreen || Element.prototype.mozRequestFullScreen || Element.prototpe.msRequestFullScreen;

exports.requestFullscreen = function(el) {
  return function() {
    fullscreenFunction.call(el);
    return {};
  };
};

var pointerLockFunction = Element.prototype.requestPointerLock || Element.ptototype.webkitRequestPointerLock || Element.prototype.mozRequestPointerLock || Element.prototype.msRequestPointerLock;

exports.requestPointerLock = function(el) {
  return function() {
    pointerLockFunction.call(el);
    return {};
  };
};


},{}],"c:\\Development\\Web\\jundo\\output\\DOM.Node.Element.Experimental\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var DOM = require("DOM");
var DOM_Node_Types = require("DOM.Node.Types");
module.exports = {
    requestPointerLock: $foreign.requestPointerLock, 
    requestFullscreen: $foreign.requestFullscreen, 
    clientHeight: $foreign.clientHeight, 
    clientWidth: $foreign.clientWidth
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\DOM.Node.Element.Experimental\\foreign.js","Control.Monad.Eff":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff\\index.js","DOM":"c:\\Development\\Web\\jundo\\output\\DOM\\index.js","DOM.Node.Types":"c:\\Development\\Web\\jundo\\output\\DOM.Node.Types\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\DOM.Node.NodeType\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Enum = require("Data.Enum");
var ElementNode = (function () {
    function ElementNode() {

    };
    ElementNode.value = new ElementNode();
    return ElementNode;
})();
var AttributeNode = (function () {
    function AttributeNode() {

    };
    AttributeNode.value = new AttributeNode();
    return AttributeNode;
})();
var TextNode = (function () {
    function TextNode() {

    };
    TextNode.value = new TextNode();
    return TextNode;
})();
var CDATASectionNode = (function () {
    function CDATASectionNode() {

    };
    CDATASectionNode.value = new CDATASectionNode();
    return CDATASectionNode;
})();
var EntityReferenceNode = (function () {
    function EntityReferenceNode() {

    };
    EntityReferenceNode.value = new EntityReferenceNode();
    return EntityReferenceNode;
})();
var EntityNode = (function () {
    function EntityNode() {

    };
    EntityNode.value = new EntityNode();
    return EntityNode;
})();
var ProcessingInstructionNode = (function () {
    function ProcessingInstructionNode() {

    };
    ProcessingInstructionNode.value = new ProcessingInstructionNode();
    return ProcessingInstructionNode;
})();
var CommentNode = (function () {
    function CommentNode() {

    };
    CommentNode.value = new CommentNode();
    return CommentNode;
})();
var DocumentNode = (function () {
    function DocumentNode() {

    };
    DocumentNode.value = new DocumentNode();
    return DocumentNode;
})();
var DocumentTypeNode = (function () {
    function DocumentTypeNode() {

    };
    DocumentTypeNode.value = new DocumentTypeNode();
    return DocumentTypeNode;
})();
var DocumentFragmentNode = (function () {
    function DocumentFragmentNode() {

    };
    DocumentFragmentNode.value = new DocumentFragmentNode();
    return DocumentFragmentNode;
})();
var NotationNode = (function () {
    function NotationNode() {

    };
    NotationNode.value = new NotationNode();
    return NotationNode;
})();
var toEnumNodeType = function (_823) {
    if (_823 === 1) {
        return new Data_Maybe.Just(ElementNode.value);
    };
    if (_823 === 2) {
        return new Data_Maybe.Just(AttributeNode.value);
    };
    if (_823 === 3) {
        return new Data_Maybe.Just(TextNode.value);
    };
    if (_823 === 4) {
        return new Data_Maybe.Just(CDATASectionNode.value);
    };
    if (_823 === 5) {
        return new Data_Maybe.Just(EntityReferenceNode.value);
    };
    if (_823 === 6) {
        return new Data_Maybe.Just(EntityNode.value);
    };
    if (_823 === 7) {
        return new Data_Maybe.Just(ProcessingInstructionNode.value);
    };
    if (_823 === 8) {
        return new Data_Maybe.Just(CommentNode.value);
    };
    if (_823 === 9) {
        return new Data_Maybe.Just(DocumentNode.value);
    };
    if (_823 === 10) {
        return new Data_Maybe.Just(DocumentTypeNode.value);
    };
    if (_823 === 11) {
        return new Data_Maybe.Just(DocumentFragmentNode.value);
    };
    if (_823 === 12) {
        return new Data_Maybe.Just(NotationNode.value);
    };
    return Data_Maybe.Nothing.value;
};
var fromEnumNodeType = function (_824) {
    if (_824 instanceof ElementNode) {
        return 1;
    };
    if (_824 instanceof AttributeNode) {
        return 2;
    };
    if (_824 instanceof TextNode) {
        return 3;
    };
    if (_824 instanceof CDATASectionNode) {
        return 4;
    };
    if (_824 instanceof EntityReferenceNode) {
        return 5;
    };
    if (_824 instanceof EntityNode) {
        return 6;
    };
    if (_824 instanceof ProcessingInstructionNode) {
        return 7;
    };
    if (_824 instanceof CommentNode) {
        return 8;
    };
    if (_824 instanceof DocumentNode) {
        return 9;
    };
    if (_824 instanceof DocumentTypeNode) {
        return 10;
    };
    if (_824 instanceof DocumentFragmentNode) {
        return 11;
    };
    if (_824 instanceof NotationNode) {
        return 12;
    };
    throw new Error("Failed pattern match at DOM.Node.NodeType line 67, column 1 - line 68, column 1: " + [ _824.constructor.name ]);
};
var eqNodeType = new Prelude.Eq(function (_825) {
    return function (_826) {
        if (_825 instanceof ElementNode && _826 instanceof ElementNode) {
            return true;
        };
        if (_825 instanceof AttributeNode && _826 instanceof AttributeNode) {
            return true;
        };
        if (_825 instanceof TextNode && _826 instanceof TextNode) {
            return true;
        };
        if (_825 instanceof CDATASectionNode && _826 instanceof CDATASectionNode) {
            return true;
        };
        if (_825 instanceof EntityReferenceNode && _826 instanceof EntityReferenceNode) {
            return true;
        };
        if (_825 instanceof EntityNode && _826 instanceof EntityNode) {
            return true;
        };
        if (_825 instanceof ProcessingInstructionNode && _826 instanceof ProcessingInstructionNode) {
            return true;
        };
        if (_825 instanceof CommentNode && _826 instanceof CommentNode) {
            return true;
        };
        if (_825 instanceof DocumentNode && _826 instanceof DocumentNode) {
            return true;
        };
        if (_825 instanceof DocumentTypeNode && _826 instanceof DocumentTypeNode) {
            return true;
        };
        if (_825 instanceof DocumentFragmentNode && _826 instanceof DocumentFragmentNode) {
            return true;
        };
        if (_825 instanceof NotationNode && _826 instanceof NotationNode) {
            return true;
        };
        return false;
    };
});
var ordNodeType = new Prelude.Ord(function () {
    return eqNodeType;
}, function (x) {
    return function (y) {
        return Prelude.compare(Prelude.ordInt)(fromEnumNodeType(x))(fromEnumNodeType(y));
    };
});
var boundedNodeType = new Prelude.Bounded(ElementNode.value, NotationNode.value);
var boundedOrdNodeType = new Prelude.BoundedOrd(function () {
    return boundedNodeType;
}, function () {
    return ordNodeType;
});
var enumNodeType = new Data_Enum.Enum(function () {
    return boundedNodeType;
}, 4, fromEnumNodeType, Data_Enum.defaultPred(toEnumNodeType)(fromEnumNodeType), Data_Enum.defaultSucc(toEnumNodeType)(fromEnumNodeType), toEnumNodeType);
module.exports = {
    ElementNode: ElementNode, 
    AttributeNode: AttributeNode, 
    TextNode: TextNode, 
    CDATASectionNode: CDATASectionNode, 
    EntityReferenceNode: EntityReferenceNode, 
    EntityNode: EntityNode, 
    ProcessingInstructionNode: ProcessingInstructionNode, 
    CommentNode: CommentNode, 
    DocumentNode: DocumentNode, 
    DocumentTypeNode: DocumentTypeNode, 
    DocumentFragmentNode: DocumentFragmentNode, 
    NotationNode: NotationNode, 
    eqNodeType: eqNodeType, 
    ordNodeType: ordNodeType, 
    boundedNodeType: boundedNodeType, 
    boundedOrdNodeType: boundedOrdNodeType, 
    enumNodeType: enumNodeType
};

},{"Data.Enum":"c:\\Development\\Web\\jundo\\output\\Data.Enum\\index.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\DOM.Node.Node\\foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module DOM.Node.Node

var getEffProp = function (name) {
  return function (node) {
    return function () {
      return node[name];
    };
  };
};

exports.nodeTypeIndex = function (node) {
  return node.nodeType;
};

exports.nodeName = function (node) {
  return node.nodeName;
};

exports.baseURI = getEffProp("baseURI");

exports.ownerDocument = getEffProp("ownerDocument");

exports.parentNode = getEffProp("parentNode");

exports.parentElement = getEffProp("parentElement");

exports.hasChildNodes = function (node) {
  return function () {
    return node.hasChildNodes();
  };
};

exports.childNodes = getEffProp("childNodes");

exports.firstChild = getEffProp("firstChild");

exports.lastChild = getEffProp("lastChild");

exports.previousSibling = getEffProp("previousSibling");

exports.nextSibling = getEffProp("nextSibling");

exports.nodeValue = getEffProp("nodeValue");

exports.setNodeValue = function (value) {
  return function (node) {
    return function () {
      node.nodeValue = value;
      return {};
    };
  };
};

exports.textContent = getEffProp("textContent");

exports.setTextContent = function (value) {
  return function (node) {
    return function () {
      node.nodeValue = value;
      return {};
    };
  };
};

exports.normalize = function (node) {
  return function () {
    node.normalize();
    return {};
  };
};

exports.clone = function (node) {
  return function () {
    return node.clone(false);
  };
};

exports.deepClone = function (node) {
  return function () {
    return node.clone(false);
  };
};

exports.isEqualNode = function (node1) {
  return function (node2) {
    return function () {
      return node1.isEqualNode(node2);
    };
  };
};

exports.compareDocumentPositionBits = function (node1) {
  return function (node2) {
    return function () {
      return node1.compareDocumentPosition(node2);
    };
  };
};

exports.contains = function (node1) {
  return function (node2) {
    return function () {
      return node1.contains(node2);
    };
  };
};

exports.lookupPrefix = function (prefix) {
  return function (node) {
    return function () {
      return node.lookupPrefix(prefix);
    };
  };
};

exports.lookupNamespaceURI = function (ns) {
  return function (node) {
    return function () {
      return node.lookupNamespaceURI(ns);
    };
  };
};

exports.lookupNamespaceURI = function (ns) {
  return function (node) {
    return function () {
      return node.isDefaultNamespace(ns);
    };
  };
};

exports.insertBefore = function (node1) {
  return function (node2) {
    return function (parent) {
      return function () {
        return parent.insertBefore(node1, node2);
      };
    };
  };
};

exports.appendChild = function (node) {
  return function (parent) {
    return function () {
      return parent.appendChild(node);
    };
  };
};

exports.replaceChild = function (oldChild) {
  return function (newChild) {
    return function (parent) {
      return function () {
        return parent.replaceChild(oldChild, newChild);
      };
    };
  };
};

exports.removeChild = function (node) {
  return function (parent) {
    return function () {
      return parent.removeChild(node);
    };
  };
};

},{}],"c:\\Development\\Web\\jundo\\output\\DOM.Node.Node\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Enum = require("Data.Enum");
var Data_Nullable = require("Data.Nullable");
var Data_Maybe_Unsafe = require("Data.Maybe.Unsafe");
var DOM = require("DOM");
var DOM_Node_NodeType = require("DOM.Node.NodeType");
var DOM_Node_Types = require("DOM.Node.Types");
var nodeType = function (_3106) {
    return Data_Maybe_Unsafe.fromJust(Data_Enum.toEnum(DOM_Node_NodeType.enumNodeType)($foreign.nodeTypeIndex(_3106)));
};
module.exports = {
    nodeType: nodeType, 
    removeChild: $foreign.removeChild, 
    replaceChild: $foreign.replaceChild, 
    appendChild: $foreign.appendChild, 
    insertBefore: $foreign.insertBefore, 
    isDefaultNamespace: $foreign.isDefaultNamespace, 
    lookupNamespaceURI: $foreign.lookupNamespaceURI, 
    lookupPrefix: $foreign.lookupPrefix, 
    contains: $foreign.contains, 
    compareDocumentPositionBits: $foreign.compareDocumentPositionBits, 
    isEqualNode: $foreign.isEqualNode, 
    deepClone: $foreign.deepClone, 
    clone: $foreign.clone, 
    normalize: $foreign.normalize, 
    setTextContent: $foreign.setTextContent, 
    textContent: $foreign.textContent, 
    setNodeValue: $foreign.setNodeValue, 
    nodeValue: $foreign.nodeValue, 
    nextSibling: $foreign.nextSibling, 
    previousSibling: $foreign.previousSibling, 
    lastChild: $foreign.lastChild, 
    firstChild: $foreign.firstChild, 
    childNodes: $foreign.childNodes, 
    hasChildNodes: $foreign.hasChildNodes, 
    parentElement: $foreign.parentElement, 
    parentNode: $foreign.parentNode, 
    ownerDocument: $foreign.ownerDocument, 
    baseURI: $foreign.baseURI, 
    nodeName: $foreign.nodeName, 
    nodeTypeIndex: $foreign.nodeTypeIndex
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\DOM.Node.Node\\foreign.js","Control.Monad.Eff":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff\\index.js","DOM":"c:\\Development\\Web\\jundo\\output\\DOM\\index.js","DOM.Node.NodeType":"c:\\Development\\Web\\jundo\\output\\DOM.Node.NodeType\\index.js","DOM.Node.Types":"c:\\Development\\Web\\jundo\\output\\DOM.Node.Types\\index.js","Data.Enum":"c:\\Development\\Web\\jundo\\output\\Data.Enum\\index.js","Data.Maybe.Unsafe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe.Unsafe\\index.js","Data.Nullable":"c:\\Development\\Web\\jundo\\output\\Data.Nullable\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\DOM.Node.NonElementParentNode\\foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module DOM.Node.NonElementParentNode

exports.getElementById = function (id) {
  return function (node) {
    return function () {
      return node.getElementById(id);
    };
  };
};

},{}],"c:\\Development\\Web\\jundo\\output\\DOM.Node.NonElementParentNode\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Nullable = require("Data.Nullable");
var DOM = require("DOM");
var DOM_Node_Types = require("DOM.Node.Types");
module.exports = {
    getElementById: $foreign.getElementById
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\DOM.Node.NonElementParentNode\\foreign.js","Control.Monad.Eff":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff\\index.js","DOM":"c:\\Development\\Web\\jundo\\output\\DOM\\index.js","DOM.Node.Types":"c:\\Development\\Web\\jundo\\output\\DOM.Node.Types\\index.js","Data.Nullable":"c:\\Development\\Web\\jundo\\output\\Data.Nullable\\index.js"}],"c:\\Development\\Web\\jundo\\output\\DOM.Node.Types\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var DOM_Event_Types = require("DOM.Event.Types");
var Unsafe_Coerce = require("Unsafe.Coerce");
var ElementId = function (x) {
    return x;
};
var textToNode = Unsafe_Coerce.unsafeCoerce;
var processingInstructionToNode = Unsafe_Coerce.unsafeCoerce;
var elementToParentNode = Unsafe_Coerce.unsafeCoerce;
var elementToNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var elementToNode = Unsafe_Coerce.unsafeCoerce;
var elementToEventTarget = Unsafe_Coerce.unsafeCoerce;
var documentTypeToNode = Unsafe_Coerce.unsafeCoerce;
var documentToParentNode = Unsafe_Coerce.unsafeCoerce;
var documentToNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
var documentToNode = Unsafe_Coerce.unsafeCoerce;
var documentToEventTarget = Unsafe_Coerce.unsafeCoerce;
var documentFragmentToParentNode = Unsafe_Coerce.unsafeCoerce;
var documentFragmentToNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
var documentFragmentToNode = Unsafe_Coerce.unsafeCoerce;
var commentToNode = Unsafe_Coerce.unsafeCoerce;
var characterDataToNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
module.exports = {
    ElementId: ElementId, 
    documentTypeToNode: documentTypeToNode, 
    documentFragmentToNode: documentFragmentToNode, 
    documentFragmentToParentNode: documentFragmentToParentNode, 
    documentFragmentToNonElementParentNode: documentFragmentToNonElementParentNode, 
    processingInstructionToNode: processingInstructionToNode, 
    commentToNode: commentToNode, 
    textToNode: textToNode, 
    characterDataToNonDocumentTypeChildNode: characterDataToNonDocumentTypeChildNode, 
    elementToEventTarget: elementToEventTarget, 
    elementToNode: elementToNode, 
    elementToNonDocumentTypeChildNode: elementToNonDocumentTypeChildNode, 
    elementToParentNode: elementToParentNode, 
    documentToEventTarget: documentToEventTarget, 
    documentToNode: documentToNode, 
    documentToParentNode: documentToParentNode, 
    documentToNonElementParentNode: documentToNonElementParentNode
};

},{"DOM.Event.Types":"c:\\Development\\Web\\jundo\\output\\DOM.Event.Types\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js","Unsafe.Coerce":"c:\\Development\\Web\\jundo\\output\\Unsafe.Coerce\\index.js"}],"c:\\Development\\Web\\jundo\\output\\DOM.RequestAnimationFrame\\foreign.js":[function(require,module,exports){
"use strict";

// module DOM.RequestAnimationFrame 

var requestAnimationFrame = null;

// http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/
exports.requestAnimationFrame_ = function(window_) {
    return function(action) {

        if (!requestAnimationFrame) {
            requestAnimationFrame = (function() {
                return window_.requestAnimationFrame ||
                    window_.webkitRequestAnimationFrame ||
                    window_.mozRequestAnimationFrame ||
                    function(callback) {
                        window_.setTimeout(callback, 1000 / 60);
                    };
            })();
        }

        return function() {
            return requestAnimationFrame(action);
        };
    }
};

},{}],"c:\\Development\\Web\\jundo\\output\\DOM.RequestAnimationFrame\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var DOM = require("DOM");
var DOM_HTML = require("DOM.HTML");
var DOM_HTML_Types = require("DOM.HTML.Types");
var requestAnimationFrame = function (action) {
    return function __do() {
        var _58 = DOM_HTML.window();
        return $foreign.requestAnimationFrame_(_58)(action)();
    };
};
module.exports = {
    requestAnimationFrame: requestAnimationFrame, 
    requestAnimationFrame_: $foreign.requestAnimationFrame_
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\DOM.RequestAnimationFrame\\foreign.js","Control.Monad.Eff":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff\\index.js","DOM":"c:\\Development\\Web\\jundo\\output\\DOM\\index.js","DOM.HTML":"c:\\Development\\Web\\jundo\\output\\DOM.HTML\\index.js","DOM.HTML.Types":"c:\\Development\\Web\\jundo\\output\\DOM.HTML.Types\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\DOM\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
module.exports = {};

},{}],"c:\\Development\\Web\\jundo\\output\\Data.Array.ST\\foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Array.ST

exports.runSTArray = function (f) {
  return f;
};

exports.emptySTArray = function () {
  return [];
};

exports.peekSTArrayImpl = function (just) {
  return function (nothing) {
    return function (xs) {
      return function (i) {
        return function () {
          return i >= 0 && i < xs.length ? just(xs[i]) : nothing;
        };
      };
    };
  };
};

exports.pokeSTArray = function (xs) {
  return function (i) {
    return function (a) {
      return function () {
        var ret = i >= 0 && i < xs.length;
        if (ret) xs[i] = a;
        return ret;
      };
    };
  };
};

exports.pushAllSTArray = function (xs) {
  return function (as) {
    return function () {
      return xs.push.apply(xs, as);
    };
  };
};

exports.spliceSTArray = function (xs) {
  return function (i) {
    return function (howMany) {
      return function (bs) {
        return function () {
          return xs.splice.apply(xs, [i, howMany].concat(bs));
        };
      };
    };
  };
};

exports.copyImpl = function (xs) {
  return function () {
    return xs.slice();
  };
};

exports.toAssocArray = function (xs) {
  return function () {
    var n = xs.length;
    var as = new Array(n);
    for (var i = 0; i < n; i++) as[i] = { value: xs[i], index: i };
    return as;
  };
};

},{}],"c:\\Development\\Web\\jundo\\output\\Data.Array.ST\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_ST = require("Control.Monad.ST");
var Data_Maybe = require("Data.Maybe");
var thaw = $foreign.copyImpl;
var pushSTArray = function (arr) {
    return function (a) {
        return $foreign.pushAllSTArray(arr)([ a ]);
    };
};
var peekSTArray = $foreign.peekSTArrayImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var freeze = $foreign.copyImpl;
module.exports = {
    thaw: thaw, 
    freeze: freeze, 
    pushSTArray: pushSTArray, 
    peekSTArray: peekSTArray, 
    toAssocArray: $foreign.toAssocArray, 
    spliceSTArray: $foreign.spliceSTArray, 
    pushAllSTArray: $foreign.pushAllSTArray, 
    pokeSTArray: $foreign.pokeSTArray, 
    emptySTArray: $foreign.emptySTArray, 
    runSTArray: $foreign.runSTArray
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\Data.Array.ST\\foreign.js","Control.Monad.Eff":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff\\index.js","Control.Monad.ST":"c:\\Development\\Web\\jundo\\output\\Control.Monad.ST\\index.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Array.Unsafe\\foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Array.Unsafe

exports.unsafeIndex = function (xs) {
  return function (n) {
    return xs[n];
  };
};

},{}],"c:\\Development\\Web\\jundo\\output\\Data.Array.Unsafe\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Array = require("Data.Array");
var tail = function (xs) {
    return Data_Array.slice(1)(Data_Array.length(xs))(xs);
};
var last = function (xs) {
    return $foreign.unsafeIndex(xs)(Data_Array.length(xs) - 1);
};
var init = function (xs) {
    return Data_Array.slice(0)(Data_Array.length(xs) - 1)(xs);
};
var head = function (xs) {
    return $foreign.unsafeIndex(xs)(0);
};
module.exports = {
    init: init, 
    last: last, 
    tail: tail, 
    head: head, 
    unsafeIndex: $foreign.unsafeIndex
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\Data.Array.Unsafe\\foreign.js","Data.Array":"c:\\Development\\Web\\jundo\\output\\Data.Array\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.ArrayBuffer.Types\\index.js":[function(require,module,exports){
arguments[4]["c:\\Development\\Web\\jundo\\output\\DOM\\index.js"][0].apply(exports,arguments)
},{}],"c:\\Development\\Web\\jundo\\output\\Data.Array\\foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Array

//------------------------------------------------------------------------------
// Array creation --------------------------------------------------------------
//------------------------------------------------------------------------------

exports.range = function (start) {
  return function (end) {
    var step = start > end ? -1 : 1;
    var result = [];
    for (var i = start, n = 0; i !== end; i += step) {
      result[n++] = i;
    }
    result[n] = i;
    return result;
  };
};

exports.replicate = function (n) {
  return function (v) {
    if (n < 1) return [];
    var r = new Array(n);
    for (var i = 0; i < n; i++) r[i] = v;
    return r;
  };
};

//------------------------------------------------------------------------------
// Array size ------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.length = function (xs) {
  return xs.length;
};

//------------------------------------------------------------------------------
// Extending arrays ------------------------------------------------------------
//------------------------------------------------------------------------------

exports.cons = function (e) {
  return function (l) {
    return [e].concat(l);
  };
};

exports.snoc = function (l) {
  return function (e) {
    var l1 = l.slice();
    l1.push(e);
    return l1;
  };
};

//------------------------------------------------------------------------------
// Non-indexed reads -----------------------------------------------------------
//------------------------------------------------------------------------------

exports["uncons'"] = function (empty) {
  return function (next) {
    return function (xs) {
      return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
    };
  };
};

//------------------------------------------------------------------------------
// Indexed operations ----------------------------------------------------------
//------------------------------------------------------------------------------

exports.indexImpl = function (just) {
  return function (nothing) {
    return function (xs) {
      return function (i) {
        return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
      };
    };
  };
};

exports.findIndexImpl = function (just) {
  return function (nothing) {
    return function (f) {
      return function (xs) {
        for (var i = 0, l = xs.length; i < l; i++) {
          if (f(xs[i])) return just(i);
        }
        return nothing;
      };
    };
  };
};

exports.findLastIndexImpl = function (just) {
  return function (nothing) {
    return function (f) {
      return function (xs) {
        for (var i = xs.length - 1; i >= 0; i--) {
          if (f(xs[i])) return just(i);
        }
        return nothing;
      };
    };
  };
};

exports._insertAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (a) {
        return function (l) {
          if (i < 0 || i > l.length) return nothing;
          var l1 = l.slice();
          l1.splice(i, 0, a);
          return just(l1);
        };
      };
    };
  };
};

exports._deleteAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (l) {
        if (i < 0 || i >= l.length) return nothing;
        var l1 = l.slice();
        l1.splice(i, 1);
        return just(l1);
      };
    };
  };
};

exports._updateAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (a) {
        return function (l) {
          if (i < 0 || i >= l.length) return nothing;
          var l1 = l.slice();
          l1[i] = a;
          return just(l1);
        };
      };
    };
  };
};

//------------------------------------------------------------------------------
// Transformations -------------------------------------------------------------
//------------------------------------------------------------------------------

exports.reverse = function (l) {
  return l.slice().reverse();
};

exports.concat = function (xss) {
  var result = [];
  for (var i = 0, l = xss.length; i < l; i++) {
    var xs = xss[i];
    for (var j = 0, m = xs.length; j < m; j++) {
      result.push(xs[j]);
    }
  }
  return result;
};

exports.filter = function (f) {
  return function (xs) {
    return xs.filter(f);
  };
};

//------------------------------------------------------------------------------
// Sorting ---------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.sortImpl = function (f) {
  return function (l) {
    /* jshint maxparams: 2 */
    return l.slice().sort(function (x, y) {
      return f(x)(y);
    });
  };
};

//------------------------------------------------------------------------------
// Subarrays -------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.slice = function (s) {
  return function (e) {
    return function (l) {
      return l.slice(s, e);
    };
  };
};

exports.drop = function (n) {
  return function (l) {
    return n < 1 ? l : l.slice(n);
  };
};

//------------------------------------------------------------------------------
// Zipping ---------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.zipWith = function (f) {
  return function (xs) {
    return function (ys) {
      var l = xs.length < ys.length ? xs.length : ys.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(xs[i])(ys[i]);
      }
      return result;
    };
  };
};

},{}],"c:\\Development\\Web\\jundo\\output\\Data.Array\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Alt = require("Control.Alt");
var Control_Alternative = require("Control.Alternative");
var Control_Lazy = require("Control.Lazy");
var Control_MonadPlus = require("Control.MonadPlus");
var Control_Plus = require("Control.Plus");
var Data_Foldable = require("Data.Foldable");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var Data_Traversable = require("Data.Traversable");
var Data_Tuple = require("Data.Tuple");
var Data_Maybe_Unsafe = require("Data.Maybe.Unsafe");
var $colon = $foreign.cons;
var $dot$dot = $foreign.range;
var zipWithA = function (__dict_Applicative_0) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return Data_Traversable.sequence(Data_Traversable.traversableArray)(__dict_Applicative_0)($foreign.zipWith(f)(xs)(ys));
            };
        };
    };
};
var zip = $foreign.zipWith(Data_Tuple.Tuple.create);
var updateAt = $foreign._updateAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var unzip = $foreign["uncons'"](function (_663) {
    return new Data_Tuple.Tuple([  ], [  ]);
})(function (_664) {
    return function (ts) {
        var _2230 = unzip(ts);
        return new Data_Tuple.Tuple($colon(_664.value0)(_2230.value0), $colon(_664.value1)(_2230.value1));
    };
});
var uncons = $foreign["uncons'"](Prelude["const"](Data_Maybe.Nothing.value))(function (x) {
    return function (xs) {
        return new Data_Maybe.Just({
            head: x, 
            tail: xs
        });
    };
});
var take = $foreign.slice(0);
var tail = $foreign["uncons'"](Prelude["const"](Data_Maybe.Nothing.value))(function (_661) {
    return function (xs) {
        return new Data_Maybe.Just(xs);
    };
});
var span = function (p) {
    var go = function (__copy_acc) {
        return function (__copy_xs) {
            var acc = __copy_acc;
            var xs = __copy_xs;
            tco: while (true) {
                var _2236 = uncons(xs);
                if (_2236 instanceof Data_Maybe.Just && p(_2236.value0.head)) {
                    var __tco_acc = $colon(_2236.value0.head)(acc);
                    acc = __tco_acc;
                    xs = _2236.value0.tail;
                    continue tco;
                };
                return {
                    init: $foreign.reverse(acc), 
                    rest: xs
                };
            };
        };
    };
    return go([  ]);
};
var takeWhile = function (p) {
    return function (xs) {
        return (span(p)(xs)).init;
    };
};
var sortBy = function (comp) {
    return function (xs) {
        var comp$prime = function (x) {
            return function (y) {
                var _2240 = comp(x)(y);
                if (_2240 instanceof Prelude.GT) {
                    return 1;
                };
                if (_2240 instanceof Prelude.EQ) {
                    return 0;
                };
                if (_2240 instanceof Prelude.LT) {
                    return -1;
                };
                throw new Error("Failed pattern match at Data.Array line 390, column 3 - line 395, column 1: " + [ _2240.constructor.name ]);
            };
        };
        return $foreign.sortImpl(comp$prime)(xs);
    };
};
var sort = function (__dict_Ord_1) {
    return function (xs) {
        return sortBy(Prelude.compare(__dict_Ord_1))(xs);
    };
};
var singleton = function (a) {
    return [ a ];
};
var replicateM = function (__dict_Monad_2) {
    return function (n) {
        return function (m) {
            if (n < 1) {
                return Prelude["return"](__dict_Monad_2["__superclass_Prelude.Applicative_0"]())([  ]);
            };
            if (Prelude.otherwise) {
                return Data_Traversable.sequence(Data_Traversable.traversableArray)(__dict_Monad_2["__superclass_Prelude.Applicative_0"]())($foreign.replicate(n)(m));
            };
            throw new Error("Failed pattern match at Data.Array line 117, column 1 - line 118, column 1: " + [ n.constructor.name, m.constructor.name ]);
        };
    };
};
var $$null = function (xs) {
    return $foreign.length(xs) === 0;
};
var nubBy = function (eq) {
    return function (xs) {
        var _2243 = uncons(xs);
        if (_2243 instanceof Data_Maybe.Just) {
            return $colon(_2243.value0.head)(nubBy(eq)($foreign.filter(function (y) {
                return !eq(_2243.value0.head)(y);
            })(_2243.value0.tail)));
        };
        if (_2243 instanceof Data_Maybe.Nothing) {
            return [  ];
        };
        throw new Error("Failed pattern match: " + [ _2243.constructor.name ]);
    };
};
var nub = function (__dict_Eq_3) {
    return nubBy(Prelude.eq(__dict_Eq_3));
};
var some = function (__dict_Alternative_4) {
    return function (__dict_Lazy_5) {
        return function (v) {
            return Prelude["<*>"]((__dict_Alternative_4["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](((__dict_Alternative_4["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())($colon)(v))(Control_Lazy.defer(__dict_Lazy_5)(function (_659) {
                return many(__dict_Alternative_4)(__dict_Lazy_5)(v);
            }));
        };
    };
};
var many = function (__dict_Alternative_6) {
    return function (__dict_Lazy_7) {
        return function (v) {
            return Control_Alt["<|>"]((__dict_Alternative_6["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(__dict_Alternative_6)(__dict_Lazy_7)(v))(Prelude.pure(__dict_Alternative_6["__superclass_Prelude.Applicative_0"]())([  ]));
        };
    };
};
var insertAt = $foreign._insertAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var init = function (xs) {
    if ($$null(xs)) {
        return Data_Maybe.Nothing.value;
    };
    if (Prelude.otherwise) {
        return new Data_Maybe.Just($foreign.slice(0)($foreign.length(xs) - 1)(xs));
    };
    throw new Error("Failed pattern match at Data.Array line 207, column 1 - line 208, column 1: " + [ xs.constructor.name ]);
};
var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var $bang$bang = index;
var last = function (xs) {
    return $bang$bang(xs)($foreign.length(xs) - 1);
};
var modifyAt = function (i) {
    return function (f) {
        return function (xs) {
            var go = function (x) {
                return updateAt(i)(f(x))(xs);
            };
            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)($bang$bang(xs)(i));
        };
    };
};
var head = $foreign["uncons'"](Prelude["const"](Data_Maybe.Nothing.value))(function (x) {
    return function (_660) {
        return new Data_Maybe.Just(x);
    };
});
var groupBy = function (op) {
    var go = function (__copy_acc) {
        return function (__copy_xs) {
            var acc = __copy_acc;
            var xs = __copy_xs;
            tco: while (true) {
                var _2248 = uncons(xs);
                if (_2248 instanceof Data_Maybe.Just) {
                    var sp = span(op(_2248.value0.head))(_2248.value0.tail);
                    var __tco_acc = $colon($colon(_2248.value0.head)(sp.init))(acc);
                    acc = __tco_acc;
                    xs = sp.rest;
                    continue tco;
                };
                if (_2248 instanceof Data_Maybe.Nothing) {
                    return $foreign.reverse(acc);
                };
                throw new Error("Failed pattern match at Data.Array line 457, column 1 - line 458, column 1: " + [ _2248.constructor.name ]);
            };
        };
    };
    return go([  ]);
};
var group = function (__dict_Eq_8) {
    return function (xs) {
        return groupBy(Prelude.eq(__dict_Eq_8))(xs);
    };
};
var group$prime = function (__dict_Ord_9) {
    return function (_2262) {
        return group(__dict_Ord_9["__superclass_Prelude.Eq_0"]())(sort(__dict_Ord_9)(_2262));
    };
};
var foldM = function (__dict_Monad_10) {
    return function (f) {
        return function (a) {
            return $foreign["uncons'"](function (_665) {
                return Prelude["return"](__dict_Monad_10["__superclass_Prelude.Applicative_0"]())(a);
            })(function (b) {
                return function (bs) {
                    return Prelude[">>="](__dict_Monad_10["__superclass_Prelude.Bind_1"]())(f(a)(b))(function (a$prime) {
                        return foldM(__dict_Monad_10)(f)(a$prime)(bs);
                    });
                };
            });
        };
    };
};
var findLastIndex = $foreign.findLastIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var insertBy = function (cmp) {
    return function (x) {
        return function (ys) {
            var i = Data_Maybe.maybe(0)(function (_4) {
                return _4 + 1 | 0;
            })(findLastIndex(function (y) {
                return Prelude["=="](Prelude.eqOrdering)(cmp(x)(y))(Prelude.GT.value);
            })(ys));
            return Data_Maybe_Unsafe.fromJust(insertAt(i)(x)(ys));
        };
    };
};
var insert = function (__dict_Ord_11) {
    return insertBy(Prelude.compare(__dict_Ord_11));
};
var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var intersectBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return $foreign.filter(function (x) {
                return Data_Maybe.isJust(findIndex(eq(x))(ys));
            })(xs);
        };
    };
};
var intersect = function (__dict_Eq_12) {
    return intersectBy(Prelude.eq(__dict_Eq_12));
};
var filterM = function (__dict_Monad_13) {
    return function (p) {
        return $foreign["uncons'"](function (_662) {
            return Prelude.pure(__dict_Monad_13["__superclass_Prelude.Applicative_0"]())([  ]);
        })(function (x) {
            return function (xs) {
                return Prelude.bind(__dict_Monad_13["__superclass_Prelude.Bind_1"]())(p(x))(function (_51) {
                    return Prelude.bind(__dict_Monad_13["__superclass_Prelude.Bind_1"]())(filterM(__dict_Monad_13)(p)(xs))(function (_50) {
                        return Prelude["return"](__dict_Monad_13["__superclass_Prelude.Applicative_0"]())((function () {
                            if (_51) {
                                return $colon(x)(_50);
                            };
                            if (!_51) {
                                return _50;
                            };
                            throw new Error("Failed pattern match: " + [ _51.constructor.name ]);
                        })());
                    });
                });
            };
        });
    };
};
var elemLastIndex = function (__dict_Eq_14) {
    return function (x) {
        return findLastIndex(function (_6) {
            return Prelude["=="](__dict_Eq_14)(_6)(x);
        });
    };
};
var elemIndex = function (__dict_Eq_15) {
    return function (x) {
        return findIndex(function (_5) {
            return Prelude["=="](__dict_Eq_15)(_5)(x);
        });
    };
};
var dropWhile = function (p) {
    return function (xs) {
        return (span(p)(xs)).rest;
    };
};
var deleteAt = $foreign._deleteAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var deleteBy = function (eq) {
    return function (x) {
        return function (_666) {
            if (_666.length === 0) {
                return [  ];
            };
            return Data_Maybe.maybe(_666)(function (i) {
                return Data_Maybe_Unsafe.fromJust(deleteAt(i)(_666));
            })(findIndex(eq(x))(_666));
        };
    };
};
var unionBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return Prelude["++"](Prelude.semigroupArray)(xs)(Data_Foldable.foldl(Data_Foldable.foldableArray)(Prelude.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
        };
    };
};
var union = function (__dict_Eq_16) {
    return unionBy(Prelude["=="](__dict_Eq_16));
};
var $$delete = function (__dict_Eq_17) {
    return deleteBy(Prelude.eq(__dict_Eq_17));
};
var $bslash$bslash = function (__dict_Eq_18) {
    return function (xs) {
        return function (ys) {
            if ($$null(xs)) {
                return [  ];
            };
            if (Prelude.otherwise) {
                return $foreign["uncons'"](Prelude["const"](xs))(function (y) {
                    return function (ys_2) {
                        return $bslash$bslash(__dict_Eq_18)($$delete(__dict_Eq_18)(y)(xs))(ys_2);
                    };
                })(ys);
            };
            throw new Error("Failed pattern match: " + [ xs.constructor.name, ys.constructor.name ]);
        };
    };
};
var concatMap = Prelude.flip(Prelude.bind(Prelude.bindArray));
var mapMaybe = function (f) {
    return concatMap(function (_2263) {
        return Data_Maybe.maybe([  ])(singleton)(f(_2263));
    });
};
var catMaybes = mapMaybe(Prelude.id(Prelude.categoryFn));
var alterAt = function (i) {
    return function (f) {
        return function (xs) {
            var go = function (x) {
                var _2260 = f(x);
                if (_2260 instanceof Data_Maybe.Nothing) {
                    return deleteAt(i)(xs);
                };
                if (_2260 instanceof Data_Maybe.Just) {
                    return updateAt(i)(_2260.value0)(xs);
                };
                throw new Error("Failed pattern match at Data.Array line 330, column 3 - line 339, column 1: " + [ _2260.constructor.name ]);
            };
            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)($bang$bang(xs)(i));
        };
    };
};
module.exports = {
    foldM: foldM, 
    unzip: unzip, 
    zip: zip, 
    zipWithA: zipWithA, 
    intersectBy: intersectBy, 
    intersect: intersect, 
    "\\\\": $bslash$bslash, 
    deleteBy: deleteBy, 
    "delete": $$delete, 
    unionBy: unionBy, 
    union: union, 
    nubBy: nubBy, 
    nub: nub, 
    groupBy: groupBy, 
    "group'": group$prime, 
    group: group, 
    span: span, 
    dropWhile: dropWhile, 
    takeWhile: takeWhile, 
    take: take, 
    sortBy: sortBy, 
    sort: sort, 
    catMaybes: catMaybes, 
    mapMaybe: mapMaybe, 
    filterM: filterM, 
    concatMap: concatMap, 
    alterAt: alterAt, 
    modifyAt: modifyAt, 
    updateAt: updateAt, 
    deleteAt: deleteAt, 
    insertAt: insertAt, 
    findLastIndex: findLastIndex, 
    findIndex: findIndex, 
    elemLastIndex: elemLastIndex, 
    elemIndex: elemIndex, 
    index: index, 
    "!!": $bang$bang, 
    uncons: uncons, 
    init: init, 
    tail: tail, 
    last: last, 
    head: head, 
    insertBy: insertBy, 
    insert: insert, 
    ":": $colon, 
    "null": $$null, 
    many: many, 
    some: some, 
    replicateM: replicateM, 
    "..": $dot$dot, 
    singleton: singleton, 
    zipWith: $foreign.zipWith, 
    drop: $foreign.drop, 
    slice: $foreign.slice, 
    filter: $foreign.filter, 
    concat: $foreign.concat, 
    reverse: $foreign.reverse, 
    snoc: $foreign.snoc, 
    cons: $foreign.cons, 
    length: $foreign.length, 
    replicate: $foreign.replicate, 
    range: $foreign.range
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\Data.Array\\foreign.js","Control.Alt":"c:\\Development\\Web\\jundo\\output\\Control.Alt\\index.js","Control.Alternative":"c:\\Development\\Web\\jundo\\output\\Control.Alternative\\index.js","Control.Lazy":"c:\\Development\\Web\\jundo\\output\\Control.Lazy\\index.js","Control.MonadPlus":"c:\\Development\\Web\\jundo\\output\\Control.MonadPlus\\index.js","Control.Plus":"c:\\Development\\Web\\jundo\\output\\Control.Plus\\index.js","Data.Foldable":"c:\\Development\\Web\\jundo\\output\\Data.Foldable\\index.js","Data.Functor.Invariant":"c:\\Development\\Web\\jundo\\output\\Data.Functor.Invariant\\index.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js","Data.Maybe.Unsafe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe.Unsafe\\index.js","Data.Monoid":"c:\\Development\\Web\\jundo\\output\\Data.Monoid\\index.js","Data.Traversable":"c:\\Development\\Web\\jundo\\output\\Data.Traversable\\index.js","Data.Tuple":"c:\\Development\\Web\\jundo\\output\\Data.Tuple\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Bifoldable\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Control_Apply = require("Control.Apply");
var Data_Monoid = require("Data.Monoid");
var Data_Monoid_Disj = require("Data.Monoid.Disj");
var Data_Monoid_Conj = require("Data.Monoid.Conj");
var Bifoldable = function (bifoldMap, bifoldl, bifoldr) {
    this.bifoldMap = bifoldMap;
    this.bifoldl = bifoldl;
    this.bifoldr = bifoldr;
};
var bifoldr = function (dict) {
    return dict.bifoldr;
};
var bitraverse_ = function (__dict_Bifoldable_0) {
    return function (__dict_Applicative_1) {
        return function (f) {
            return function (g) {
                return bifoldr(__dict_Bifoldable_0)(function (_1344) {
                    return Control_Apply["*>"](__dict_Applicative_1["__superclass_Prelude.Apply_0"]())(f(_1344));
                })(function (_1345) {
                    return Control_Apply["*>"](__dict_Applicative_1["__superclass_Prelude.Apply_0"]())(g(_1345));
                })(Prelude.pure(__dict_Applicative_1)(Prelude.unit));
            };
        };
    };
};
var bifor_ = function (__dict_Bifoldable_2) {
    return function (__dict_Applicative_3) {
        return function (t) {
            return function (f) {
                return function (g) {
                    return bitraverse_(__dict_Bifoldable_2)(__dict_Applicative_3)(f)(g)(t);
                };
            };
        };
    };
};
var bisequence_ = function (__dict_Bifoldable_4) {
    return function (__dict_Applicative_5) {
        return bitraverse_(__dict_Bifoldable_4)(__dict_Applicative_5)(Prelude.id(Prelude.categoryFn))(Prelude.id(Prelude.categoryFn));
    };
};
var bifoldl = function (dict) {
    return dict.bifoldl;
};
var bifoldMap = function (dict) {
    return dict.bifoldMap;
};
var bifold = function (__dict_Bifoldable_6) {
    return function (__dict_Monoid_7) {
        return bifoldMap(__dict_Bifoldable_6)(__dict_Monoid_7)(Prelude.id(Prelude.categoryFn))(Prelude.id(Prelude.categoryFn));
    };
};
var biany = function (__dict_Bifoldable_8) {
    return function (__dict_BooleanAlgebra_9) {
        return function (p) {
            return function (q) {
                return function (_1346) {
                    return Data_Monoid_Disj.runDisj(bifoldMap(__dict_Bifoldable_8)(Data_Monoid_Disj.monoidDisj(__dict_BooleanAlgebra_9))(function (_1347) {
                        return Data_Monoid_Disj.Disj(p(_1347));
                    })(function (_1348) {
                        return Data_Monoid_Disj.Disj(q(_1348));
                    })(_1346));
                };
            };
        };
    };
};
var biall = function (__dict_Bifoldable_10) {
    return function (__dict_BooleanAlgebra_11) {
        return function (p) {
            return function (q) {
                return function (_1349) {
                    return Data_Monoid_Conj.runConj(bifoldMap(__dict_Bifoldable_10)(Data_Monoid_Conj.monoidConj(__dict_BooleanAlgebra_11))(function (_1350) {
                        return Data_Monoid_Conj.Conj(p(_1350));
                    })(function (_1351) {
                        return Data_Monoid_Conj.Conj(q(_1351));
                    })(_1349));
                };
            };
        };
    };
};
module.exports = {
    Bifoldable: Bifoldable, 
    biall: biall, 
    biany: biany, 
    bisequence_: bisequence_, 
    bifor_: bifor_, 
    bitraverse_: bitraverse_, 
    bifold: bifold, 
    bifoldMap: bifoldMap, 
    bifoldl: bifoldl, 
    bifoldr: bifoldr
};

},{"Control.Apply":"c:\\Development\\Web\\jundo\\output\\Control.Apply\\index.js","Data.Monoid":"c:\\Development\\Web\\jundo\\output\\Data.Monoid\\index.js","Data.Monoid.Conj":"c:\\Development\\Web\\jundo\\output\\Data.Monoid.Conj\\index.js","Data.Monoid.Disj":"c:\\Development\\Web\\jundo\\output\\Data.Monoid.Disj\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Bifunctor\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Bifunctor = function (bimap) {
    this.bimap = bimap;
};
var bimap = function (dict) {
    return dict.bimap;
};
var lmap = function (__dict_Bifunctor_0) {
    return function (f) {
        return bimap(__dict_Bifunctor_0)(f)(Prelude.id(Prelude.categoryFn));
    };
};
var rmap = function (__dict_Bifunctor_1) {
    return bimap(__dict_Bifunctor_1)(Prelude.id(Prelude.categoryFn));
};
module.exports = {
    Bifunctor: Bifunctor, 
    rmap: rmap, 
    lmap: lmap, 
    bimap: bimap
};

},{"Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Bitraversable\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Data_Bifoldable = require("Data.Bifoldable");
var Data_Bifunctor = require("Data.Bifunctor");
var Bitraversable = function (__superclass_Data$dotBifoldable$dotBifoldable_1, __superclass_Data$dotBifunctor$dotBifunctor_0, bisequence, bitraverse) {
    this["__superclass_Data.Bifoldable.Bifoldable_1"] = __superclass_Data$dotBifoldable$dotBifoldable_1;
    this["__superclass_Data.Bifunctor.Bifunctor_0"] = __superclass_Data$dotBifunctor$dotBifunctor_0;
    this.bisequence = bisequence;
    this.bitraverse = bitraverse;
};
var bitraverse = function (dict) {
    return dict.bitraverse;
};
var bisequence = function (dict) {
    return dict.bisequence;
};
var bifor = function (__dict_Bitraversable_0) {
    return function (__dict_Applicative_1) {
        return function (t) {
            return function (f) {
                return function (g) {
                    return bitraverse(__dict_Bitraversable_0)(__dict_Applicative_1)(f)(g)(t);
                };
            };
        };
    };
};
module.exports = {
    Bitraversable: Bitraversable, 
    bifor: bifor, 
    bisequence: bisequence, 
    bitraverse: bitraverse
};

},{"Data.Bifoldable":"c:\\Development\\Web\\jundo\\output\\Data.Bifoldable\\index.js","Data.Bifunctor":"c:\\Development\\Web\\jundo\\output\\Data.Bifunctor\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.CatList\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var Data_Tuple = require("Data.Tuple");
var Data_CatQueue = require("Data.CatQueue");
var Data_List = require("Data.List");
var CatNil = (function () {
    function CatNil() {

    };
    CatNil.value = new CatNil();
    return CatNil;
})();
var CatCons = (function () {
    function CatCons(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    CatCons.create = function (value0) {
        return function (value1) {
            return new CatCons(value0, value1);
        };
    };
    return CatCons;
})();
var showCatList = function (__dict_Show_0) {
    return new Prelude.Show(function (_929) {
        if (_929 instanceof CatNil) {
            return "CatNil";
        };
        if (_929 instanceof CatCons) {
            return "CatList (" + (Prelude.show(__dict_Show_0)(_929.value0) + (") (" + (Prelude.show(Data_CatQueue.showCatQueue(showCatList(__dict_Show_0)))(_929.value1) + ")")));
        };
        throw new Error("Failed pattern match: " + [ _929.constructor.name ]);
    });
};
var $$null = function (_923) {
    if (_923 instanceof CatNil) {
        return true;
    };
    return false;
};
var link = function (_927) {
    return function (cat) {
        if (_927 instanceof CatNil) {
            return cat;
        };
        if (_927 instanceof CatCons) {
            return new CatCons(_927.value0, Data_CatQueue.snoc(_927.value1)(cat));
        };
        throw new Error("Failed pattern match at Data.CatList line 88, column 1 - line 89, column 1: " + [ _927.constructor.name, cat.constructor.name ]);
    };
};
var foldr = function (k) {
    return function (b) {
        return function (q) {
            var foldl = function (__copy_k_1) {
                return function (__copy_b_1) {
                    return function (__copy__928) {
                        var k_1 = __copy_k_1;
                        var b_1 = __copy_b_1;
                        var _928 = __copy__928;
                        tco: while (true) {
                            var b_2 = b_1;
                            if (_928 instanceof Data_List.Nil) {
                                return b_2;
                            };
                            if (_928 instanceof Data_List.Cons) {
                                var __tco_k_1 = k_1;
                                var __tco_b_1 = k_1(b_1)(_928.value0);
                                var __tco__928 = _928.value1;
                                k_1 = __tco_k_1;
                                b_1 = __tco_b_1;
                                _928 = __tco__928;
                                continue tco;
                            };
                            throw new Error("Failed pattern match at Data.CatList line 95, column 1 - line 96, column 1: " + [ k_1.constructor.name, b_1.constructor.name, _928.constructor.name ]);
                        };
                    };
                };
            };
            var go = function (__copy_xs) {
                return function (__copy_ys) {
                    var xs = __copy_xs;
                    var ys = __copy_ys;
                    tco: while (true) {
                        var _3422 = Data_CatQueue.uncons(xs);
                        if (_3422 instanceof Data_Maybe.Nothing) {
                            return foldl(function (x) {
                                return function (i) {
                                    return i(x);
                                };
                            })(b)(ys);
                        };
                        if (_3422 instanceof Data_Maybe.Just) {
                            var __tco_ys = new Data_List.Cons(k(_3422.value0.value0), ys);
                            xs = _3422.value0.value1;
                            ys = __tco_ys;
                            continue tco;
                        };
                        throw new Error("Failed pattern match at Data.CatList line 95, column 1 - line 96, column 1: " + [ _3422.constructor.name ]);
                    };
                };
            };
            return go(q)(Data_List.Nil.value);
        };
    };
};
var uncons = function (_926) {
    if (_926 instanceof CatNil) {
        return Data_Maybe.Nothing.value;
    };
    if (_926 instanceof CatCons) {
        return new Data_Maybe.Just(new Data_Tuple.Tuple(_926.value0, (function () {
            var _3427 = Data_CatQueue["null"](_926.value1);
            if (_3427) {
                return CatNil.value;
            };
            if (!_3427) {
                return foldr(link)(CatNil.value)(_926.value1);
            };
            throw new Error("Failed pattern match at Data.CatList line 79, column 1 - line 80, column 1: " + [ _3427.constructor.name ]);
        })()));
    };
    throw new Error("Failed pattern match at Data.CatList line 79, column 1 - line 80, column 1: " + [ _926.constructor.name ]);
};
var empty = CatNil.value;
var append = function (_924) {
    return function (_925) {
        if (_925 instanceof CatNil) {
            return _924;
        };
        if (_924 instanceof CatNil) {
            return _925;
        };
        return link(_924)(_925);
    };
};
var cons = function (a) {
    return function (cat) {
        return append(new CatCons(a, Data_CatQueue.empty))(cat);
    };
};
var semigroupCatList = new Prelude.Semigroup(append);
var monoidCatList = new Data_Monoid.Monoid(function () {
    return semigroupCatList;
}, CatNil.value);
var snoc = function (cat) {
    return function (a) {
        return append(cat)(new CatCons(a, Data_CatQueue.empty));
    };
};
module.exports = {
    CatNil: CatNil, 
    CatCons: CatCons, 
    uncons: uncons, 
    snoc: snoc, 
    cons: cons, 
    append: append, 
    "null": $$null, 
    empty: empty, 
    semigroupCatList: semigroupCatList, 
    monoidCatList: monoidCatList, 
    showCatList: showCatList
};

},{"Data.CatQueue":"c:\\Development\\Web\\jundo\\output\\Data.CatQueue\\index.js","Data.List":"c:\\Development\\Web\\jundo\\output\\Data.List\\index.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js","Data.Monoid":"c:\\Development\\Web\\jundo\\output\\Data.Monoid\\index.js","Data.Tuple":"c:\\Development\\Web\\jundo\\output\\Data.Tuple\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.CatQueue\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Data_List = require("Data.List");
var Data_Maybe = require("Data.Maybe");
var Data_Tuple = require("Data.Tuple");
var CatQueue = (function () {
    function CatQueue(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    CatQueue.create = function (value0) {
        return function (value1) {
            return new CatQueue(value0, value1);
        };
    };
    return CatQueue;
})();
var uncons = function (__copy__921) {
    var _921 = __copy__921;
    tco: while (true) {
        if (_921.value0 instanceof Data_List.Nil && _921.value1 instanceof Data_List.Nil) {
            return Data_Maybe.Nothing.value;
        };
        if (_921.value0 instanceof Data_List.Nil) {
            var __tco__921 = new CatQueue(Data_List.reverse(_921.value1), Data_List.Nil.value);
            _921 = __tco__921;
            continue tco;
        };
        if (_921.value0 instanceof Data_List.Cons) {
            return new Data_Maybe.Just(new Data_Tuple.Tuple(_921.value0.value0, new CatQueue(_921.value0.value1, _921.value1)));
        };
        throw new Error("Failed pattern match: " + [ _921.constructor.name ]);
    };
};
var snoc = function (_920) {
    return function (a) {
        return new CatQueue(_920.value0, new Data_List.Cons(a, _920.value1));
    };
};
var showCatQueue = function (__dict_Show_0) {
    return new Prelude.Show(function (_922) {
        return "CatQueue (" + (Prelude.show(Data_List.showList(__dict_Show_0))(_922.value0) + (") (" + (Prelude.show(Data_List.showList(__dict_Show_0))(_922.value1) + ")")));
    });
};
var $$null = function (_919) {
    if (_919.value0 instanceof Data_List.Nil && _919.value1 instanceof Data_List.Nil) {
        return true;
    };
    return false;
};
var empty = new CatQueue(Data_List.Nil.value, Data_List.Nil.value);
module.exports = {
    CatQueue: CatQueue, 
    uncons: uncons, 
    snoc: snoc, 
    "null": $$null, 
    empty: empty, 
    showCatQueue: showCatQueue
};

},{"Data.List":"c:\\Development\\Web\\jundo\\output\\Data.List\\index.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js","Data.Tuple":"c:\\Development\\Web\\jundo\\output\\Data.Tuple\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Char\\foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Char

exports.toString = function (c) {
  return c;
};

exports.toCharCode = function (c) {
  return c.charCodeAt(0);
};

exports.fromCharCode = function (c) {
  return String.fromCharCode(c);
};

exports.toLower = function (c) {
  return c.toLowerCase();
};

exports.toUpper = function (c) {
  return c.toUpperCase();
};

},{}],"c:\\Development\\Web\\jundo\\output\\Data.Char\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
module.exports = {
    toUpper: $foreign.toUpper, 
    toLower: $foreign.toLower, 
    toCharCode: $foreign.toCharCode, 
    fromCharCode: $foreign.fromCharCode, 
    toString: $foreign.toString
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\Data.Char\\foreign.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Date\\foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Date

exports.nowEpochMilliseconds = function () {
  return Date.now();
};

exports.nowImpl = function (ctor) {
  return function () {
    return ctor(new Date());
  };
};

exports.jsDateConstructor = function (x) {
  return new Date(x);
};

// jshint maxparams: 2
exports.jsDateMethod = function (method, date) {
  return date[method]();
};

// jshint maxparams: 3
exports.strictJsDate = function (just, nothing, s) {
  var epoch = Date.parse(s);
  if (isNaN(epoch)) return nothing;
  var date = new Date(epoch);
  var s2 = date.toISOString();
  var idx = s2.indexOf(s);
  return idx < 0 ? nothing : just(date);
};

},{}],"c:\\Development\\Web\\jundo\\output\\Data.Date\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Global = require("Global");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Enum = require("Data.Enum");
var Data_Function = require("Data.Function");
var Data_Maybe = require("Data.Maybe");
var Data_Time = require("Data.Time");
var Year = function (x) {
    return x;
};
var January = (function () {
    function January() {

    };
    January.value = new January();
    return January;
})();
var February = (function () {
    function February() {

    };
    February.value = new February();
    return February;
})();
var March = (function () {
    function March() {

    };
    March.value = new March();
    return March;
})();
var April = (function () {
    function April() {

    };
    April.value = new April();
    return April;
})();
var May = (function () {
    function May() {

    };
    May.value = new May();
    return May;
})();
var June = (function () {
    function June() {

    };
    June.value = new June();
    return June;
})();
var July = (function () {
    function July() {

    };
    July.value = new July();
    return July;
})();
var August = (function () {
    function August() {

    };
    August.value = new August();
    return August;
})();
var September = (function () {
    function September() {

    };
    September.value = new September();
    return September;
})();
var October = (function () {
    function October() {

    };
    October.value = new October();
    return October;
})();
var November = (function () {
    function November() {

    };
    November.value = new November();
    return November;
})();
var December = (function () {
    function December() {

    };
    December.value = new December();
    return December;
})();
var LocaleOffset = function (x) {
    return x;
};
var Sunday = (function () {
    function Sunday() {

    };
    Sunday.value = new Sunday();
    return Sunday;
})();
var Monday = (function () {
    function Monday() {

    };
    Monday.value = new Monday();
    return Monday;
})();
var Tuesday = (function () {
    function Tuesday() {

    };
    Tuesday.value = new Tuesday();
    return Tuesday;
})();
var Wednesday = (function () {
    function Wednesday() {

    };
    Wednesday.value = new Wednesday();
    return Wednesday;
})();
var Thursday = (function () {
    function Thursday() {

    };
    Thursday.value = new Thursday();
    return Thursday;
})();
var Friday = (function () {
    function Friday() {

    };
    Friday.value = new Friday();
    return Friday;
})();
var Saturday = (function () {
    function Saturday() {

    };
    Saturday.value = new Saturday();
    return Saturday;
})();
var DayOfMonth = function (x) {
    return x;
};
var DateTime = function (x) {
    return x;
};
var toJSDate = function (_827) {
    return _827;
};
var toEpochMilliseconds = function (_828) {
    return $foreign.jsDateMethod("getTime", _828);
};
var timezoneOffset = function (_829) {
    return $foreign.jsDateMethod("getTimezoneOffset", _829);
};
var showYear = new Prelude.Show(function (_844) {
    return "(Year " + (Prelude.show(Prelude.showInt)(_844) + ")");
});
var showMonth = new Prelude.Show(function (_847) {
    if (_847 instanceof January) {
        return "January";
    };
    if (_847 instanceof February) {
        return "February";
    };
    if (_847 instanceof March) {
        return "March";
    };
    if (_847 instanceof April) {
        return "April";
    };
    if (_847 instanceof May) {
        return "May";
    };
    if (_847 instanceof June) {
        return "June";
    };
    if (_847 instanceof July) {
        return "July";
    };
    if (_847 instanceof August) {
        return "August";
    };
    if (_847 instanceof September) {
        return "September";
    };
    if (_847 instanceof October) {
        return "October";
    };
    if (_847 instanceof November) {
        return "November";
    };
    if (_847 instanceof December) {
        return "December";
    };
    throw new Error("Failed pattern match at Data.Date line 161, column 1 - line 175, column 1: " + [ _847.constructor.name ]);
});
var showDayOfWeek = new Prelude.Show(function (_854) {
    if (_854 instanceof Sunday) {
        return "Sunday";
    };
    if (_854 instanceof Monday) {
        return "Monday";
    };
    if (_854 instanceof Tuesday) {
        return "Tuesday";
    };
    if (_854 instanceof Wednesday) {
        return "Wednesday";
    };
    if (_854 instanceof Thursday) {
        return "Thursday";
    };
    if (_854 instanceof Friday) {
        return "Friday";
    };
    if (_854 instanceof Saturday) {
        return "Saturday";
    };
    throw new Error("Failed pattern match at Data.Date line 249, column 1 - line 258, column 1: " + [ _854.constructor.name ]);
});
var showDate = new Prelude.Show(function (d) {
    return "(fromEpochMilliseconds " + (Prelude.show(Data_Time.showMilliseconds)(toEpochMilliseconds(d)) + ")");
});
var semiringYear = new Prelude.Semiring(function (_838) {
    return function (_839) {
        return _838 + _839 | 0;
    };
}, function (_840) {
    return function (_841) {
        return _840 * _841 | 0;
    };
}, 1, 0);
var ringYear = new Prelude.Ring(function () {
    return semiringYear;
}, function (_842) {
    return function (_843) {
        return _842 - _843;
    };
});
var now = $foreign.nowImpl(DateTime);
var monthToEnum = function (_830) {
    if (_830 === 0) {
        return new Data_Maybe.Just(January.value);
    };
    if (_830 === 1) {
        return new Data_Maybe.Just(February.value);
    };
    if (_830 === 2) {
        return new Data_Maybe.Just(March.value);
    };
    if (_830 === 3) {
        return new Data_Maybe.Just(April.value);
    };
    if (_830 === 4) {
        return new Data_Maybe.Just(May.value);
    };
    if (_830 === 5) {
        return new Data_Maybe.Just(June.value);
    };
    if (_830 === 6) {
        return new Data_Maybe.Just(July.value);
    };
    if (_830 === 7) {
        return new Data_Maybe.Just(August.value);
    };
    if (_830 === 8) {
        return new Data_Maybe.Just(September.value);
    };
    if (_830 === 9) {
        return new Data_Maybe.Just(October.value);
    };
    if (_830 === 10) {
        return new Data_Maybe.Just(November.value);
    };
    if (_830 === 11) {
        return new Data_Maybe.Just(December.value);
    };
    return Data_Maybe.Nothing.value;
};
var monthFromEnum = function (_831) {
    if (_831 instanceof January) {
        return 0;
    };
    if (_831 instanceof February) {
        return 1;
    };
    if (_831 instanceof March) {
        return 2;
    };
    if (_831 instanceof April) {
        return 3;
    };
    if (_831 instanceof May) {
        return 4;
    };
    if (_831 instanceof June) {
        return 5;
    };
    if (_831 instanceof July) {
        return 6;
    };
    if (_831 instanceof August) {
        return 7;
    };
    if (_831 instanceof September) {
        return 8;
    };
    if (_831 instanceof October) {
        return 9;
    };
    if (_831 instanceof November) {
        return 10;
    };
    if (_831 instanceof December) {
        return 11;
    };
    throw new Error("Failed pattern match at Data.Date line 197, column 1 - line 198, column 1: " + [ _831.constructor.name ]);
};
var fromJSDate = function (d) {
    var _3121 = Global.isNaN($foreign.jsDateMethod("getTime", d));
    if (_3121) {
        return Data_Maybe.Nothing.value;
    };
    if (!_3121) {
        return new Data_Maybe.Just(d);
    };
    throw new Error("Failed pattern match at Data.Date line 50, column 1 - line 51, column 1: " + [ _3121.constructor.name ]);
};
var fromString = function (_3136) {
    return fromJSDate($foreign.jsDateConstructor(_3136));
};
var fromStringStrict = function (s) {
    return Prelude[">>="](Data_Maybe.bindMaybe)($foreign.strictJsDate(Data_Maybe.Just.create, Data_Maybe.Nothing.value, s))(fromJSDate);
};
var fromEpochMilliseconds = function (_3137) {
    return fromJSDate($foreign.jsDateConstructor(_3137));
};
var eqYear = new Prelude.Eq(function (_834) {
    return function (_835) {
        return _834 === _835;
    };
});
var ordYear = new Prelude.Ord(function () {
    return eqYear;
}, function (_836) {
    return function (_837) {
        return Prelude.compare(Prelude.ordInt)(_836)(_837);
    };
});
var eqMonth = new Prelude.Eq(function (_845) {
    return function (_846) {
        if (_845 instanceof January && _846 instanceof January) {
            return true;
        };
        if (_845 instanceof February && _846 instanceof February) {
            return true;
        };
        if (_845 instanceof March && _846 instanceof March) {
            return true;
        };
        if (_845 instanceof April && _846 instanceof April) {
            return true;
        };
        if (_845 instanceof May && _846 instanceof May) {
            return true;
        };
        if (_845 instanceof June && _846 instanceof June) {
            return true;
        };
        if (_845 instanceof July && _846 instanceof July) {
            return true;
        };
        if (_845 instanceof August && _846 instanceof August) {
            return true;
        };
        if (_845 instanceof September && _846 instanceof September) {
            return true;
        };
        if (_845 instanceof October && _846 instanceof October) {
            return true;
        };
        if (_845 instanceof November && _846 instanceof November) {
            return true;
        };
        if (_845 instanceof December && _846 instanceof December) {
            return true;
        };
        return false;
    };
});
var eqDayOfWeek = new Prelude.Eq(function (_852) {
    return function (_853) {
        if (_852 instanceof Sunday && _853 instanceof Sunday) {
            return true;
        };
        if (_852 instanceof Monday && _853 instanceof Monday) {
            return true;
        };
        if (_852 instanceof Tuesday && _853 instanceof Tuesday) {
            return true;
        };
        if (_852 instanceof Wednesday && _853 instanceof Wednesday) {
            return true;
        };
        if (_852 instanceof Thursday && _853 instanceof Thursday) {
            return true;
        };
        if (_852 instanceof Friday && _853 instanceof Friday) {
            return true;
        };
        if (_852 instanceof Saturday && _853 instanceof Saturday) {
            return true;
        };
        return false;
    };
});
var eqDayOfMonth = new Prelude.Eq(function (_848) {
    return function (_849) {
        return _848 === _849;
    };
});
var ordDayOfMonth = new Prelude.Ord(function () {
    return eqDayOfMonth;
}, function (_850) {
    return function (_851) {
        return Prelude.compare(Prelude.ordInt)(_850)(_851);
    };
});
var eqDate = new Prelude.Eq(Data_Function.on(Prelude.eq(Data_Time.eqMilliseconds))(toEpochMilliseconds));
var ordDate = new Prelude.Ord(function () {
    return eqDate;
}, Data_Function.on(Prelude.compare(Data_Time.ordMilliseconds))(toEpochMilliseconds));
var dayOfWeekToEnum = function (_832) {
    if (_832 === 0) {
        return new Data_Maybe.Just(Sunday.value);
    };
    if (_832 === 1) {
        return new Data_Maybe.Just(Monday.value);
    };
    if (_832 === 2) {
        return new Data_Maybe.Just(Tuesday.value);
    };
    if (_832 === 3) {
        return new Data_Maybe.Just(Wednesday.value);
    };
    if (_832 === 4) {
        return new Data_Maybe.Just(Thursday.value);
    };
    if (_832 === 5) {
        return new Data_Maybe.Just(Friday.value);
    };
    if (_832 === 6) {
        return new Data_Maybe.Just(Saturday.value);
    };
    return Data_Maybe.Nothing.value;
};
var dayOfWeekFromEnum = function (_833) {
    if (_833 instanceof Sunday) {
        return 0;
    };
    if (_833 instanceof Monday) {
        return 1;
    };
    if (_833 instanceof Tuesday) {
        return 2;
    };
    if (_833 instanceof Wednesday) {
        return 3;
    };
    if (_833 instanceof Thursday) {
        return 4;
    };
    if (_833 instanceof Friday) {
        return 5;
    };
    if (_833 instanceof Saturday) {
        return 6;
    };
    throw new Error("Failed pattern match at Data.Date line 275, column 1 - line 276, column 1: " + [ _833.constructor.name ]);
};
var boundedMonth = new Prelude.Bounded(January.value, December.value);
var enumMonth = new Data_Enum.Enum(function () {
    return boundedMonth;
}, 12, monthFromEnum, Data_Enum.defaultPred(monthToEnum)(monthFromEnum), Data_Enum.defaultSucc(monthToEnum)(monthFromEnum), monthToEnum);
var ordMonth = new Prelude.Ord(function () {
    return eqMonth;
}, Data_Function.on(Prelude.compare(Prelude.ordInt))(Data_Enum.fromEnum(enumMonth)));
var boundedOrdMonth = new Prelude.BoundedOrd(function () {
    return boundedMonth;
}, function () {
    return ordMonth;
});
var boundedDayOfWeek = new Prelude.Bounded(Sunday.value, Saturday.value);
var enumDayOfWeek = new Data_Enum.Enum(function () {
    return boundedDayOfWeek;
}, 7, dayOfWeekFromEnum, Data_Enum.defaultPred(dayOfWeekToEnum)(dayOfWeekFromEnum), Data_Enum.defaultSucc(dayOfWeekToEnum)(dayOfWeekFromEnum), dayOfWeekToEnum);
var ordDayOfWeek = new Prelude.Ord(function () {
    return eqDayOfWeek;
}, Data_Function.on(Prelude.compare(Prelude.ordInt))(Data_Enum.fromEnum(enumDayOfWeek)));
var boundedOrdDayOfWeek = new Prelude.BoundedOrd(function () {
    return boundedDayOfWeek;
}, function () {
    return ordDayOfWeek;
});
module.exports = {
    Sunday: Sunday, 
    Monday: Monday, 
    Tuesday: Tuesday, 
    Wednesday: Wednesday, 
    Thursday: Thursday, 
    Friday: Friday, 
    Saturday: Saturday, 
    DayOfMonth: DayOfMonth, 
    January: January, 
    February: February, 
    March: March, 
    April: April, 
    May: May, 
    June: June, 
    July: July, 
    August: August, 
    September: September, 
    October: October, 
    November: November, 
    December: December, 
    Year: Year, 
    LocaleOffset: LocaleOffset, 
    timezoneOffset: timezoneOffset, 
    now: now, 
    fromStringStrict: fromStringStrict, 
    fromString: fromString, 
    toEpochMilliseconds: toEpochMilliseconds, 
    fromEpochMilliseconds: fromEpochMilliseconds, 
    toJSDate: toJSDate, 
    fromJSDate: fromJSDate, 
    eqDate: eqDate, 
    ordDate: ordDate, 
    showDate: showDate, 
    eqYear: eqYear, 
    ordYear: ordYear, 
    semiringYear: semiringYear, 
    ringYear: ringYear, 
    showYear: showYear, 
    eqMonth: eqMonth, 
    ordMonth: ordMonth, 
    boundedMonth: boundedMonth, 
    boundedOrdMonth: boundedOrdMonth, 
    showMonth: showMonth, 
    enumMonth: enumMonth, 
    eqDayOfMonth: eqDayOfMonth, 
    ordDayOfMonth: ordDayOfMonth, 
    eqDayOfWeek: eqDayOfWeek, 
    ordDayOfWeek: ordDayOfWeek, 
    boundedDayOfWeek: boundedDayOfWeek, 
    boundedOrdDayOfWeek: boundedOrdDayOfWeek, 
    showDayOfWeek: showDayOfWeek, 
    enumDayOfWeek: enumDayOfWeek, 
    nowEpochMilliseconds: $foreign.nowEpochMilliseconds
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\Data.Date\\foreign.js","Control.Monad.Eff":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff\\index.js","Data.Enum":"c:\\Development\\Web\\jundo\\output\\Data.Enum\\index.js","Data.Function":"c:\\Development\\Web\\jundo\\output\\Data.Function\\index.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js","Data.Time":"c:\\Development\\Web\\jundo\\output\\Data.Time\\index.js","Global":"c:\\Development\\Web\\jundo\\output\\Global\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Either.Unsafe\\foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Either.Unsafe

exports.unsafeThrow = function (msg) {
  throw new Error(msg);
};

},{}],"c:\\Development\\Web\\jundo\\output\\Data.Either.Unsafe\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Either = require("Data.Either");
var fromRight = function (_519) {
    if (_519 instanceof Data_Either.Right) {
        return _519.value0;
    };
    return $foreign.unsafeThrow("Data.Either.Unsafe.fromLeft called on Left value");
};
var fromLeft = function (_518) {
    if (_518 instanceof Data_Either.Left) {
        return _518.value0;
    };
    return $foreign.unsafeThrow("Data.Either.Unsafe.fromLeft called on Right value");
};
module.exports = {
    fromRight: fromRight, 
    fromLeft: fromLeft
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\Data.Either.Unsafe\\foreign.js","Data.Either":"c:\\Development\\Web\\jundo\\output\\Data.Either\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Either\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Control_Alt = require("Control.Alt");
var Control_Extend = require("Control.Extend");
var Data_Bifoldable = require("Data.Bifoldable");
var Data_Bifunctor = require("Data.Bifunctor");
var Data_Bitraversable = require("Data.Bitraversable");
var Data_Foldable = require("Data.Foldable");
var Data_Monoid = require("Data.Monoid");
var Data_Traversable = require("Data.Traversable");
var Left = (function () {
    function Left(value0) {
        this.value0 = value0;
    };
    Left.create = function (value0) {
        return new Left(value0);
    };
    return Left;
})();
var Right = (function () {
    function Right(value0) {
        this.value0 = value0;
    };
    Right.create = function (value0) {
        return new Right(value0);
    };
    return Right;
})();
var showEither = function (__dict_Show_2) {
    return function (__dict_Show_3) {
        return new Prelude.Show(function (_501) {
            if (_501 instanceof Left) {
                return "Left (" + (Prelude.show(__dict_Show_2)(_501.value0) + ")");
            };
            if (_501 instanceof Right) {
                return "Right (" + (Prelude.show(__dict_Show_3)(_501.value0) + ")");
            };
            throw new Error("Failed pattern match at Data.Either line 174, column 1 - line 181, column 1: " + [ _501.constructor.name ]);
        });
    };
};
var functorEither = new Prelude.Functor(function (f) {
    return function (_496) {
        if (_496 instanceof Left) {
            return new Left(_496.value0);
        };
        if (_496 instanceof Right) {
            return new Right(f(_496.value0));
        };
        throw new Error("Failed pattern match at Data.Either line 52, column 1 - line 56, column 1: " + [ f.constructor.name, _496.constructor.name ]);
    };
});
var foldableEither = new Data_Foldable.Foldable(function (__dict_Monoid_8) {
    return function (f) {
        return function (_508) {
            if (_508 instanceof Left) {
                return Data_Monoid.mempty(__dict_Monoid_8);
            };
            if (_508 instanceof Right) {
                return f(_508.value0);
            };
            throw new Error("Failed pattern match at Data.Either line 201, column 1 - line 209, column 1: " + [ f.constructor.name, _508.constructor.name ]);
        };
    };
}, function (f) {
    return function (z) {
        return function (_507) {
            if (_507 instanceof Left) {
                return z;
            };
            if (_507 instanceof Right) {
                return f(z)(_507.value0);
            };
            throw new Error("Failed pattern match at Data.Either line 201, column 1 - line 209, column 1: " + [ f.constructor.name, z.constructor.name, _507.constructor.name ]);
        };
    };
}, function (f) {
    return function (z) {
        return function (_506) {
            if (_506 instanceof Left) {
                return z;
            };
            if (_506 instanceof Right) {
                return f(_506.value0)(z);
            };
            throw new Error("Failed pattern match at Data.Either line 201, column 1 - line 209, column 1: " + [ f.constructor.name, z.constructor.name, _506.constructor.name ]);
        };
    };
});
var traversableEither = new Data_Traversable.Traversable(function () {
    return foldableEither;
}, function () {
    return functorEither;
}, function (__dict_Applicative_1) {
    return function (_513) {
        if (_513 instanceof Left) {
            return Prelude.pure(__dict_Applicative_1)(new Left(_513.value0));
        };
        if (_513 instanceof Right) {
            return Prelude["<$>"]((__dict_Applicative_1["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Right.create)(_513.value0);
        };
        throw new Error("Failed pattern match at Data.Either line 217, column 1 - line 223, column 1: " + [ _513.constructor.name ]);
    };
}, function (__dict_Applicative_0) {
    return function (f) {
        return function (_512) {
            if (_512 instanceof Left) {
                return Prelude.pure(__dict_Applicative_0)(new Left(_512.value0));
            };
            if (_512 instanceof Right) {
                return Prelude["<$>"]((__dict_Applicative_0["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Right.create)(f(_512.value0));
            };
            throw new Error("Failed pattern match at Data.Either line 217, column 1 - line 223, column 1: " + [ f.constructor.name, _512.constructor.name ]);
        };
    };
});
var extendEither = new Control_Extend.Extend(function () {
    return functorEither;
}, function (f) {
    return function (_500) {
        if (_500 instanceof Left) {
            return new Left(_500.value0);
        };
        return new Right(f(_500));
    };
});
var eqEither = function (__dict_Eq_9) {
    return function (__dict_Eq_10) {
        return new Prelude.Eq(function (_502) {
            return function (_503) {
                if (_502 instanceof Left && _503 instanceof Left) {
                    return Prelude["=="](__dict_Eq_9)(_502.value0)(_503.value0);
                };
                if (_502 instanceof Right && _503 instanceof Right) {
                    return Prelude["=="](__dict_Eq_10)(_502.value0)(_503.value0);
                };
                return false;
            };
        });
    };
};
var ordEither = function (__dict_Ord_6) {
    return function (__dict_Ord_7) {
        return new Prelude.Ord(function () {
            return eqEither(__dict_Ord_6["__superclass_Prelude.Eq_0"]())(__dict_Ord_7["__superclass_Prelude.Eq_0"]());
        }, function (_504) {
            return function (_505) {
                if (_504 instanceof Left && _505 instanceof Left) {
                    return Prelude.compare(__dict_Ord_6)(_504.value0)(_505.value0);
                };
                if (_504 instanceof Right && _505 instanceof Right) {
                    return Prelude.compare(__dict_Ord_7)(_504.value0)(_505.value0);
                };
                if (_504 instanceof Left) {
                    return Prelude.LT.value;
                };
                if (_505 instanceof Left) {
                    return Prelude.GT.value;
                };
                throw new Error("Failed pattern match at Data.Either line 191, column 1 - line 197, column 1: " + [ _504.constructor.name, _505.constructor.name ]);
            };
        });
    };
};
var either = function (f) {
    return function (g) {
        return function (_495) {
            if (_495 instanceof Left) {
                return f(_495.value0);
            };
            if (_495 instanceof Right) {
                return g(_495.value0);
            };
            throw new Error("Failed pattern match at Data.Either line 28, column 1 - line 29, column 1: " + [ f.constructor.name, g.constructor.name, _495.constructor.name ]);
        };
    };
};
var isLeft = either(Prelude["const"](true))(Prelude["const"](false));
var isRight = either(Prelude["const"](false))(Prelude["const"](true));
var boundedEither = function (__dict_Bounded_11) {
    return function (__dict_Bounded_12) {
        return new Prelude.Bounded(new Left(Prelude.bottom(__dict_Bounded_11)), new Right(Prelude.top(__dict_Bounded_12)));
    };
};
var bifunctorEither = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (_497) {
            if (_497 instanceof Left) {
                return new Left(f(_497.value0));
            };
            if (_497 instanceof Right) {
                return new Right(g(_497.value0));
            };
            throw new Error("Failed pattern match at Data.Either line 56, column 1 - line 92, column 1: " + [ f.constructor.name, g.constructor.name, _497.constructor.name ]);
        };
    };
});
var bifoldableEither = new Data_Bifoldable.Bifoldable(function (__dict_Monoid_15) {
    return function (f) {
        return function (g) {
            return function (_511) {
                if (_511 instanceof Left) {
                    return f(_511.value0);
                };
                if (_511 instanceof Right) {
                    return g(_511.value0);
                };
                throw new Error("Failed pattern match at Data.Either line 209, column 1 - line 217, column 1: " + [ f.constructor.name, g.constructor.name, _511.constructor.name ]);
            };
        };
    };
}, function (f) {
    return function (g) {
        return function (z) {
            return function (_510) {
                if (_510 instanceof Left) {
                    return f(z)(_510.value0);
                };
                if (_510 instanceof Right) {
                    return g(z)(_510.value0);
                };
                throw new Error("Failed pattern match at Data.Either line 209, column 1 - line 217, column 1: " + [ f.constructor.name, g.constructor.name, z.constructor.name, _510.constructor.name ]);
            };
        };
    };
}, function (f) {
    return function (g) {
        return function (z) {
            return function (_509) {
                if (_509 instanceof Left) {
                    return f(_509.value0)(z);
                };
                if (_509 instanceof Right) {
                    return g(_509.value0)(z);
                };
                throw new Error("Failed pattern match at Data.Either line 209, column 1 - line 217, column 1: " + [ f.constructor.name, g.constructor.name, z.constructor.name, _509.constructor.name ]);
            };
        };
    };
});
var bitraversableEither = new Data_Bitraversable.Bitraversable(function () {
    return bifoldableEither;
}, function () {
    return bifunctorEither;
}, function (__dict_Applicative_14) {
    return function (_515) {
        if (_515 instanceof Left) {
            return Prelude["<$>"]((__dict_Applicative_14["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Left.create)(_515.value0);
        };
        if (_515 instanceof Right) {
            return Prelude["<$>"]((__dict_Applicative_14["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Right.create)(_515.value0);
        };
        throw new Error("Failed pattern match at Data.Either line 223, column 1 - line 229, column 1: " + [ _515.constructor.name ]);
    };
}, function (__dict_Applicative_13) {
    return function (f) {
        return function (g) {
            return function (_514) {
                if (_514 instanceof Left) {
                    return Prelude["<$>"]((__dict_Applicative_13["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Left.create)(f(_514.value0));
                };
                if (_514 instanceof Right) {
                    return Prelude["<$>"]((__dict_Applicative_13["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Right.create)(g(_514.value0));
                };
                throw new Error("Failed pattern match at Data.Either line 223, column 1 - line 229, column 1: " + [ f.constructor.name, g.constructor.name, _514.constructor.name ]);
            };
        };
    };
});
var applyEither = new Prelude.Apply(function () {
    return functorEither;
}, function (_498) {
    return function (r) {
        if (_498 instanceof Left) {
            return new Left(_498.value0);
        };
        if (_498 instanceof Right) {
            return Prelude["<$>"](functorEither)(_498.value0)(r);
        };
        throw new Error("Failed pattern match at Data.Either line 92, column 1 - line 116, column 1: " + [ _498.constructor.name, r.constructor.name ]);
    };
});
var bindEither = new Prelude.Bind(function () {
    return applyEither;
}, either(function (e) {
    return function (_494) {
        return new Left(e);
    };
})(function (a) {
    return function (f) {
        return f(a);
    };
}));
var semigroupEither = function (__dict_Semigroup_5) {
    return new Prelude.Semigroup(function (x) {
        return function (y) {
            return Prelude["<*>"](applyEither)(Prelude["<$>"](functorEither)(Prelude.append(__dict_Semigroup_5))(x))(y);
        };
    });
};
var semiringEither = function (__dict_Semiring_4) {
    return new Prelude.Semiring(function (x) {
        return function (y) {
            return Prelude["<*>"](applyEither)(Prelude["<$>"](functorEither)(Prelude.add(__dict_Semiring_4))(x))(y);
        };
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyEither)(Prelude["<$>"](functorEither)(Prelude.mul(__dict_Semiring_4))(x))(y);
        };
    }, new Right(Prelude.one(__dict_Semiring_4)), new Right(Prelude.zero(__dict_Semiring_4)));
};
var applicativeEither = new Prelude.Applicative(function () {
    return applyEither;
}, Right.create);
var monadEither = new Prelude.Monad(function () {
    return applicativeEither;
}, function () {
    return bindEither;
});
var altEither = new Control_Alt.Alt(function () {
    return functorEither;
}, function (_499) {
    return function (r) {
        if (_499 instanceof Left) {
            return r;
        };
        return _499;
    };
});
module.exports = {
    Left: Left, 
    Right: Right, 
    isRight: isRight, 
    isLeft: isLeft, 
    either: either, 
    functorEither: functorEither, 
    bifunctorEither: bifunctorEither, 
    applyEither: applyEither, 
    applicativeEither: applicativeEither, 
    altEither: altEither, 
    bindEither: bindEither, 
    monadEither: monadEither, 
    extendEither: extendEither, 
    showEither: showEither, 
    eqEither: eqEither, 
    ordEither: ordEither, 
    boundedEither: boundedEither, 
    foldableEither: foldableEither, 
    bifoldableEither: bifoldableEither, 
    traversableEither: traversableEither, 
    bitraversableEither: bitraversableEither, 
    semiringEither: semiringEither, 
    semigroupEither: semigroupEither
};

},{"Control.Alt":"c:\\Development\\Web\\jundo\\output\\Control.Alt\\index.js","Control.Extend":"c:\\Development\\Web\\jundo\\output\\Control.Extend\\index.js","Data.Bifoldable":"c:\\Development\\Web\\jundo\\output\\Data.Bifoldable\\index.js","Data.Bifunctor":"c:\\Development\\Web\\jundo\\output\\Data.Bifunctor\\index.js","Data.Bitraversable":"c:\\Development\\Web\\jundo\\output\\Data.Bitraversable\\index.js","Data.Foldable":"c:\\Development\\Web\\jundo\\output\\Data.Foldable\\index.js","Data.Monoid":"c:\\Development\\Web\\jundo\\output\\Data.Monoid\\index.js","Data.Traversable":"c:\\Development\\Web\\jundo\\output\\Data.Traversable\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Enum\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Data_Char = require("Data.Char");
var Data_Either = require("Data.Either");
var Data_Maybe = require("Data.Maybe");
var Data_Maybe_Unsafe = require("Data.Maybe.Unsafe");
var Data_Tuple = require("Data.Tuple");
var Data_Unfoldable = require("Data.Unfoldable");
var Cardinality = function (x) {
    return x;
};
var Enum = function (__superclass_Prelude$dotBounded_0, cardinality, fromEnum, pred, succ, toEnum) {
    this["__superclass_Prelude.Bounded_0"] = __superclass_Prelude$dotBounded_0;
    this.cardinality = cardinality;
    this.fromEnum = fromEnum;
    this.pred = pred;
    this.succ = succ;
    this.toEnum = toEnum;
};
var toEnum = function (dict) {
    return dict.toEnum;
};
var succ = function (dict) {
    return dict.succ;
};
var runCardinality = function (_801) {
    return _801;
};
var tupleCardinality = function (__dict_Enum_0) {
    return function (__dict_Enum_1) {
        return function (l) {
            return function (r) {
                return Cardinality(runCardinality(l) * runCardinality(r) | 0);
            };
        };
    };
};
var tupleToEnum = function (__dict_Enum_2) {
    return function (__dict_Enum_3) {
        return function (cardb) {
            return function (n) {
                return Prelude["<*>"](Data_Maybe.applyMaybe)(Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(toEnum(__dict_Enum_2)(n / runCardinality(cardb) | 0)))(toEnum(__dict_Enum_3)(n % runCardinality(cardb)));
            };
        };
    };
};
var pred = function (dict) {
    return dict.pred;
};
var maybeCardinality = function (__dict_Enum_4) {
    return function (c) {
        return Cardinality(1 + runCardinality(c) | 0);
    };
};
var maybeToEnum = function (__dict_Enum_5) {
    return function (carda) {
        return function (n) {
            if (n <= runCardinality(maybeCardinality(__dict_Enum_5)(carda))) {
                var _3041 = n === 0;
                if (_3041) {
                    return Data_Maybe.Just.create(Data_Maybe.Nothing.value);
                };
                if (!_3041) {
                    return Data_Maybe.Just.create(toEnum(__dict_Enum_5)(n - 1));
                };
                throw new Error("Failed pattern match at Data.Enum line 138, column 1 - line 139, column 1: " + [ _3041.constructor.name ]);
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var intStepFromTo = function (step) {
    return function (from) {
        return function (to) {
            return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(function (e) {
                var _3042 = e <= to;
                if (_3042) {
                    return Data_Maybe.Just.create(new Data_Tuple.Tuple(e, e + step | 0));
                };
                if (!_3042) {
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match at Data.Enum line 103, column 1 - line 104, column 1: " + [ _3042.constructor.name ]);
            })(from);
        };
    };
};
var intFromTo = intStepFromTo(1);
var fromEnum = function (dict) {
    return dict.fromEnum;
};
var tupleFromEnum = function (__dict_Enum_6) {
    return function (__dict_Enum_7) {
        return function (cardb) {
            return function (_804) {
                return (fromEnum(__dict_Enum_6)(_804.value0) * runCardinality(cardb) | 0) + fromEnum(__dict_Enum_7)(_804.value1) | 0;
            };
        };
    };
};
var enumFromTo = function (__dict_Enum_8) {
    return function (a) {
        return function (b) {
            var b$prime = fromEnum(__dict_Enum_8)(b);
            var a$prime = fromEnum(__dict_Enum_8)(a);
            return Prelude["<$>"](Prelude.functorArray)(Prelude[">>>"](Prelude.semigroupoidFn)(toEnum(__dict_Enum_8))(Data_Maybe_Unsafe.fromJust))(intFromTo(a$prime)(b$prime));
        };
    };
};
var enumFromThenTo = function (__dict_Enum_9) {
    return function (a) {
        return function (b) {
            return function (c) {
                var c$prime = fromEnum(__dict_Enum_9)(c);
                var b$prime = fromEnum(__dict_Enum_9)(b);
                var a$prime = fromEnum(__dict_Enum_9)(a);
                return Prelude["<$>"](Prelude.functorArray)(Prelude[">>>"](Prelude.semigroupoidFn)(toEnum(__dict_Enum_9))(Data_Maybe_Unsafe.fromJust))(intStepFromTo(b$prime - a$prime)(a$prime)(c$prime));
            };
        };
    };
};
var eitherFromEnum = function (__dict_Enum_10) {
    return function (__dict_Enum_11) {
        return function (carda) {
            return function (_805) {
                if (_805 instanceof Data_Either.Left) {
                    return fromEnum(__dict_Enum_10)(_805.value0);
                };
                if (_805 instanceof Data_Either.Right) {
                    return fromEnum(__dict_Enum_11)(_805.value0) + runCardinality(carda) | 0;
                };
                throw new Error("Failed pattern match at Data.Enum line 197, column 1 - line 198, column 1: " + [ carda.constructor.name, _805.constructor.name ]);
            };
        };
    };
};
var eitherCardinality = function (__dict_Enum_12) {
    return function (__dict_Enum_13) {
        return function (l) {
            return function (r) {
                return Cardinality(runCardinality(l) + runCardinality(r) | 0);
            };
        };
    };
};
var eitherToEnum = function (__dict_Enum_14) {
    return function (__dict_Enum_15) {
        return function (carda) {
            return function (cardb) {
                return function (n) {
                    var _3051 = n >= 0 && n < runCardinality(carda);
                    if (_3051) {
                        return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Either.Left.create)(toEnum(__dict_Enum_14)(n));
                    };
                    if (!_3051) {
                        var _3052 = n >= runCardinality(carda) && n < runCardinality(eitherCardinality(__dict_Enum_14)(__dict_Enum_15)(carda)(cardb));
                        if (_3052) {
                            return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Either.Right.create)(toEnum(__dict_Enum_15)(n - runCardinality(carda)));
                        };
                        if (!_3052) {
                            return Data_Maybe.Nothing.value;
                        };
                        throw new Error("Failed pattern match: " + [ _3052.constructor.name ]);
                    };
                    throw new Error("Failed pattern match at Data.Enum line 189, column 1 - line 190, column 1: " + [ _3051.constructor.name ]);
                };
            };
        };
    };
};
var defaultToEnum = function (succ$prime) {
    return function (bottom$prime) {
        return function (n) {
            if (n < 0) {
                return Data_Maybe.Nothing.value;
            };
            if (n === 0) {
                return new Data_Maybe.Just(bottom$prime);
            };
            if (Prelude.otherwise) {
                return Prelude[">>="](Data_Maybe.bindMaybe)(defaultToEnum(succ$prime)(bottom$prime)(n - 1))(succ$prime);
            };
            throw new Error("Failed pattern match: " + [ succ$prime.constructor.name, bottom$prime.constructor.name, n.constructor.name ]);
        };
    };
};
var defaultSucc = function (toEnum$prime) {
    return function (fromEnum$prime) {
        return function (a) {
            return toEnum$prime(fromEnum$prime(a) + 1 | 0);
        };
    };
};
var defaultPred = function (toEnum$prime) {
    return function (fromEnum$prime) {
        return function (a) {
            return toEnum$prime(fromEnum$prime(a) - 1);
        };
    };
};
var defaultFromEnum = function (pred$prime) {
    return function (e) {
        return Data_Maybe.maybe(0)(function (prd) {
            return defaultFromEnum(pred$prime)(prd) + 1 | 0;
        })(pred$prime(e));
    };
};
var charToEnum = function (n) {
    if (n >= 0 && n <= 65535) {
        return Data_Maybe.Just.create(Data_Char.fromCharCode(n));
    };
    return Data_Maybe.Nothing.value;
};
var charFromEnum = Data_Char.toCharCode;
var enumChar = new Enum(function () {
    return Prelude.boundedChar;
}, 65536, charFromEnum, defaultPred(charToEnum)(charFromEnum), defaultSucc(charToEnum)(charFromEnum), charToEnum);
var cardinality = function (dict) {
    return dict.cardinality;
};
var enumEither = function (__dict_Enum_16) {
    return function (__dict_Enum_17) {
        return new Enum(function () {
            return Data_Either.boundedEither(__dict_Enum_16["__superclass_Prelude.Bounded_0"]())(__dict_Enum_17["__superclass_Prelude.Bounded_0"]());
        }, eitherCardinality(__dict_Enum_16)(__dict_Enum_17)(cardinality(__dict_Enum_16))(cardinality(__dict_Enum_17)), eitherFromEnum(__dict_Enum_16)(__dict_Enum_17)(cardinality(__dict_Enum_16)), function (_812) {
            if (_812 instanceof Data_Either.Left) {
                return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function (_3077) {
                    return Data_Maybe.Just.create(Data_Either.Left.create(_3077));
                })(pred(__dict_Enum_16)(_812.value0));
            };
            if (_812 instanceof Data_Either.Right) {
                return Data_Maybe.maybe(Data_Maybe.Just.create(new Data_Either.Left(Prelude.top(__dict_Enum_16["__superclass_Prelude.Bounded_0"]()))))(function (_3078) {
                    return Data_Maybe.Just.create(Data_Either.Right.create(_3078));
                })(pred(__dict_Enum_17)(_812.value0));
            };
            throw new Error("Failed pattern match at Data.Enum line 180, column 1 - line 189, column 1: " + [ _812.constructor.name ]);
        }, function (_811) {
            if (_811 instanceof Data_Either.Left) {
                return Data_Maybe.maybe(Data_Maybe.Just.create(new Data_Either.Right(Prelude.bottom(__dict_Enum_17["__superclass_Prelude.Bounded_0"]()))))(function (_3079) {
                    return Data_Maybe.Just.create(Data_Either.Left.create(_3079));
                })(succ(__dict_Enum_16)(_811.value0));
            };
            if (_811 instanceof Data_Either.Right) {
                return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function (_3080) {
                    return Data_Maybe.Just.create(Data_Either.Right.create(_3080));
                })(succ(__dict_Enum_17)(_811.value0));
            };
            throw new Error("Failed pattern match at Data.Enum line 180, column 1 - line 189, column 1: " + [ _811.constructor.name ]);
        }, eitherToEnum(__dict_Enum_16)(__dict_Enum_17)(cardinality(__dict_Enum_16))(cardinality(__dict_Enum_17)));
    };
};
var enumMaybe = function (__dict_Enum_18) {
    return new Enum(function () {
        return Data_Maybe.boundedMaybe(__dict_Enum_18["__superclass_Prelude.Bounded_0"]());
    }, maybeCardinality(__dict_Enum_18)(cardinality(__dict_Enum_18)), function (_808) {
        if (_808 instanceof Data_Maybe.Nothing) {
            return 0;
        };
        if (_808 instanceof Data_Maybe.Just) {
            return fromEnum(__dict_Enum_18)(_808.value0) + 1 | 0;
        };
        throw new Error("Failed pattern match at Data.Enum line 128, column 1 - line 138, column 1: " + [ _808.constructor.name ]);
    }, function (_807) {
        if (_807 instanceof Data_Maybe.Nothing) {
            return Data_Maybe.Nothing.value;
        };
        if (_807 instanceof Data_Maybe.Just) {
            return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(pred(__dict_Enum_18)(_807.value0));
        };
        throw new Error("Failed pattern match at Data.Enum line 128, column 1 - line 138, column 1: " + [ _807.constructor.name ]);
    }, function (_806) {
        if (_806 instanceof Data_Maybe.Nothing) {
            return Data_Maybe.Just.create(Prelude.bottom(Data_Maybe.boundedMaybe(__dict_Enum_18["__superclass_Prelude.Bounded_0"]())));
        };
        if (_806 instanceof Data_Maybe.Just) {
            return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(succ(__dict_Enum_18)(_806.value0));
        };
        throw new Error("Failed pattern match at Data.Enum line 128, column 1 - line 138, column 1: " + [ _806.constructor.name ]);
    }, maybeToEnum(__dict_Enum_18)(cardinality(__dict_Enum_18)));
};
var enumTuple = function (__dict_Enum_19) {
    return function (__dict_Enum_20) {
        return new Enum(function () {
            return Data_Tuple.boundedTuple(__dict_Enum_19["__superclass_Prelude.Bounded_0"]())(__dict_Enum_20["__superclass_Prelude.Bounded_0"]());
        }, tupleCardinality(__dict_Enum_19)(__dict_Enum_20)(cardinality(__dict_Enum_19))(cardinality(__dict_Enum_20)), tupleFromEnum(__dict_Enum_19)(__dict_Enum_20)(cardinality(__dict_Enum_20)), function (_810) {
            return Data_Maybe.maybe(Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude.flip(Data_Tuple.Tuple.create)(Prelude.bottom(__dict_Enum_20["__superclass_Prelude.Bounded_0"]())))(pred(__dict_Enum_19)(_810.value0)))(function (_3081) {
                return Data_Maybe.Just.create(Data_Tuple.Tuple.create(_810.value0)(_3081));
            })(pred(__dict_Enum_20)(_810.value1));
        }, function (_809) {
            return Data_Maybe.maybe(Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude.flip(Data_Tuple.Tuple.create)(Prelude.bottom(__dict_Enum_20["__superclass_Prelude.Bounded_0"]())))(succ(__dict_Enum_19)(_809.value0)))(function (_3082) {
                return Data_Maybe.Just.create(Data_Tuple.Tuple.create(_809.value0)(_3082));
            })(succ(__dict_Enum_20)(_809.value1));
        }, tupleToEnum(__dict_Enum_19)(__dict_Enum_20)(cardinality(__dict_Enum_20)));
    };
};
var booleanSucc = function (_802) {
    if (!_802) {
        return new Data_Maybe.Just(true);
    };
    return Data_Maybe.Nothing.value;
};
var booleanPred = function (_803) {
    if (_803) {
        return new Data_Maybe.Just(false);
    };
    return Data_Maybe.Nothing.value;
};
var enumBoolean = new Enum(function () {
    return Prelude.boundedBoolean;
}, 2, defaultFromEnum(booleanPred), booleanPred, booleanSucc, defaultToEnum(booleanSucc)(false));
module.exports = {
    Cardinality: Cardinality, 
    Enum: Enum, 
    enumFromThenTo: enumFromThenTo, 
    enumFromTo: enumFromTo, 
    intStepFromTo: intStepFromTo, 
    intFromTo: intFromTo, 
    defaultFromEnum: defaultFromEnum, 
    defaultToEnum: defaultToEnum, 
    defaultPred: defaultPred, 
    defaultSucc: defaultSucc, 
    toEnum: toEnum, 
    succ: succ, 
    runCardinality: runCardinality, 
    pred: pred, 
    fromEnum: fromEnum, 
    cardinality: cardinality, 
    enumChar: enumChar, 
    enumMaybe: enumMaybe, 
    enumBoolean: enumBoolean, 
    enumTuple: enumTuple, 
    enumEither: enumEither
};

},{"Data.Char":"c:\\Development\\Web\\jundo\\output\\Data.Char\\index.js","Data.Either":"c:\\Development\\Web\\jundo\\output\\Data.Either\\index.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js","Data.Maybe.Unsafe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe.Unsafe\\index.js","Data.Tuple":"c:\\Development\\Web\\jundo\\output\\Data.Tuple\\index.js","Data.Unfoldable":"c:\\Development\\Web\\jundo\\output\\Data.Unfoldable\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Foldable\\foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Foldable

exports.foldrArray = function (f) {
  return function (init) {
    return function (xs) {
      var acc = init;
      var len = xs.length;
      for (var i = len - 1; i >= 0; i--) {
        acc = f(xs[i])(acc);
      }
      return acc;
    };
  };
};

exports.foldlArray = function (f) {
  return function (init) {
    return function (xs) {
      var acc = init;
      var len = xs.length;
      for (var i = 0; i < len; i++) {
        acc = f(acc)(xs[i]);
      }
      return acc;
    };
  };
};

},{}],"c:\\Development\\Web\\jundo\\output\\Data.Foldable\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Apply = require("Control.Apply");
var Data_Maybe = require("Data.Maybe");
var Data_Maybe_First = require("Data.Maybe.First");
var Data_Maybe_Last = require("Data.Maybe.Last");
var Data_Monoid = require("Data.Monoid");
var Data_Monoid_Additive = require("Data.Monoid.Additive");
var Data_Monoid_Dual = require("Data.Monoid.Dual");
var Data_Monoid_Disj = require("Data.Monoid.Disj");
var Data_Monoid_Conj = require("Data.Monoid.Conj");
var Data_Monoid_Multiplicative = require("Data.Monoid.Multiplicative");
var Foldable = function (foldMap, foldl, foldr) {
    this.foldMap = foldMap;
    this.foldl = foldl;
    this.foldr = foldr;
};
var foldr = function (dict) {
    return dict.foldr;
};
var traverse_ = function (__dict_Applicative_0) {
    return function (__dict_Foldable_1) {
        return function (f) {
            return foldr(__dict_Foldable_1)(function (_1500) {
                return Control_Apply["*>"](__dict_Applicative_0["__superclass_Prelude.Apply_0"]())(f(_1500));
            })(Prelude.pure(__dict_Applicative_0)(Prelude.unit));
        };
    };
};
var for_ = function (__dict_Applicative_2) {
    return function (__dict_Foldable_3) {
        return Prelude.flip(traverse_(__dict_Applicative_2)(__dict_Foldable_3));
    };
};
var sequence_ = function (__dict_Applicative_4) {
    return function (__dict_Foldable_5) {
        return traverse_(__dict_Applicative_4)(__dict_Foldable_5)(Prelude.id(Prelude.categoryFn));
    };
};
var foldl = function (dict) {
    return dict.foldl;
};
var intercalate = function (__dict_Foldable_6) {
    return function (__dict_Monoid_7) {
        return function (sep) {
            return function (xs) {
                var go = function (_473) {
                    return function (x) {
                        if (_473.init) {
                            return {
                                init: false, 
                                acc: x
                            };
                        };
                        return {
                            init: false, 
                            acc: Prelude["<>"](__dict_Monoid_7["__superclass_Prelude.Semigroup_0"]())(_473.acc)(Prelude["<>"](__dict_Monoid_7["__superclass_Prelude.Semigroup_0"]())(sep)(x))
                        };
                    };
                };
                return (foldl(__dict_Foldable_6)(go)({
                    init: true, 
                    acc: Data_Monoid.mempty(__dict_Monoid_7)
                })(xs)).acc;
            };
        };
    };
};
var mconcat = function (__dict_Foldable_8) {
    return function (__dict_Monoid_9) {
        return foldl(__dict_Foldable_8)(Prelude["<>"](__dict_Monoid_9["__superclass_Prelude.Semigroup_0"]()))(Data_Monoid.mempty(__dict_Monoid_9));
    };
};
var product = function (__dict_Foldable_10) {
    return function (__dict_Semiring_11) {
        return foldl(__dict_Foldable_10)(Prelude["*"](__dict_Semiring_11))(Prelude.one(__dict_Semiring_11));
    };
};
var sum = function (__dict_Foldable_12) {
    return function (__dict_Semiring_13) {
        return foldl(__dict_Foldable_12)(Prelude["+"](__dict_Semiring_13))(Prelude.zero(__dict_Semiring_13));
    };
};
var foldableMultiplicative = new Foldable(function (__dict_Monoid_14) {
    return function (f) {
        return function (_472) {
            return f(_472);
        };
    };
}, function (f) {
    return function (z) {
        return function (_471) {
            return f(z)(_471);
        };
    };
}, function (f) {
    return function (z) {
        return function (_470) {
            return f(_470)(z);
        };
    };
});
var foldableMaybe = new Foldable(function (__dict_Monoid_15) {
    return function (f) {
        return function (_451) {
            if (_451 instanceof Data_Maybe.Nothing) {
                return Data_Monoid.mempty(__dict_Monoid_15);
            };
            if (_451 instanceof Data_Maybe.Just) {
                return f(_451.value0);
            };
            throw new Error("Failed pattern match at Data.Foldable line 51, column 1 - line 59, column 1: " + [ f.constructor.name, _451.constructor.name ]);
        };
    };
}, function (f) {
    return function (z) {
        return function (_450) {
            if (_450 instanceof Data_Maybe.Nothing) {
                return z;
            };
            if (_450 instanceof Data_Maybe.Just) {
                return f(z)(_450.value0);
            };
            throw new Error("Failed pattern match at Data.Foldable line 51, column 1 - line 59, column 1: " + [ f.constructor.name, z.constructor.name, _450.constructor.name ]);
        };
    };
}, function (f) {
    return function (z) {
        return function (_449) {
            if (_449 instanceof Data_Maybe.Nothing) {
                return z;
            };
            if (_449 instanceof Data_Maybe.Just) {
                return f(_449.value0)(z);
            };
            throw new Error("Failed pattern match at Data.Foldable line 51, column 1 - line 59, column 1: " + [ f.constructor.name, z.constructor.name, _449.constructor.name ]);
        };
    };
});
var foldableDual = new Foldable(function (__dict_Monoid_16) {
    return function (f) {
        return function (_463) {
            return f(_463);
        };
    };
}, function (f) {
    return function (z) {
        return function (_462) {
            return f(z)(_462);
        };
    };
}, function (f) {
    return function (z) {
        return function (_461) {
            return f(_461)(z);
        };
    };
});
var foldableDisj = new Foldable(function (__dict_Monoid_17) {
    return function (f) {
        return function (_466) {
            return f(_466);
        };
    };
}, function (f) {
    return function (z) {
        return function (_465) {
            return f(z)(_465);
        };
    };
}, function (f) {
    return function (z) {
        return function (_464) {
            return f(_464)(z);
        };
    };
});
var foldableConj = new Foldable(function (__dict_Monoid_18) {
    return function (f) {
        return function (_469) {
            return f(_469);
        };
    };
}, function (f) {
    return function (z) {
        return function (_468) {
            return f(z)(_468);
        };
    };
}, function (f) {
    return function (z) {
        return function (_467) {
            return f(_467)(z);
        };
    };
});
var foldableArray = new Foldable(function (__dict_Monoid_19) {
    return function (f) {
        return function (xs) {
            return foldr(foldableArray)(function (x) {
                return function (acc) {
                    return Prelude["<>"](__dict_Monoid_19["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                };
            })(Data_Monoid.mempty(__dict_Monoid_19))(xs);
        };
    };
}, $foreign.foldlArray, $foreign.foldrArray);
var foldableAdditive = new Foldable(function (__dict_Monoid_20) {
    return function (f) {
        return function (_460) {
            return f(_460);
        };
    };
}, function (f) {
    return function (z) {
        return function (_459) {
            return f(z)(_459);
        };
    };
}, function (f) {
    return function (z) {
        return function (_458) {
            return f(_458)(z);
        };
    };
});
var foldMap = function (dict) {
    return dict.foldMap;
};
var foldableFirst = new Foldable(function (__dict_Monoid_21) {
    return function (f) {
        return function (_454) {
            return foldMap(foldableMaybe)(__dict_Monoid_21)(f)(_454);
        };
    };
}, function (f) {
    return function (z) {
        return function (_453) {
            return foldl(foldableMaybe)(f)(z)(_453);
        };
    };
}, function (f) {
    return function (z) {
        return function (_452) {
            return foldr(foldableMaybe)(f)(z)(_452);
        };
    };
});
var foldableLast = new Foldable(function (__dict_Monoid_22) {
    return function (f) {
        return function (_457) {
            return foldMap(foldableMaybe)(__dict_Monoid_22)(f)(_457);
        };
    };
}, function (f) {
    return function (z) {
        return function (_456) {
            return foldl(foldableMaybe)(f)(z)(_456);
        };
    };
}, function (f) {
    return function (z) {
        return function (_455) {
            return foldr(foldableMaybe)(f)(z)(_455);
        };
    };
});
var fold = function (__dict_Foldable_23) {
    return function (__dict_Monoid_24) {
        return foldMap(__dict_Foldable_23)(__dict_Monoid_24)(Prelude.id(Prelude.categoryFn));
    };
};
var find = function (__dict_Foldable_25) {
    return function (p) {
        return foldl(__dict_Foldable_25)(function (r) {
            return function (x) {
                var _1499 = p(x);
                if (_1499) {
                    return new Data_Maybe.Just(x);
                };
                if (!_1499) {
                    return r;
                };
                throw new Error("Failed pattern match at Data.Foldable line 181, column 1 - line 182, column 1: " + [ _1499.constructor.name ]);
            };
        })(Data_Maybe.Nothing.value);
    };
};
var any = function (__dict_Foldable_26) {
    return function (__dict_BooleanAlgebra_27) {
        return function (p) {
            return function (_1501) {
                return Data_Monoid_Disj.runDisj(foldMap(__dict_Foldable_26)(Data_Monoid_Disj.monoidDisj(__dict_BooleanAlgebra_27))(function (_1502) {
                    return Data_Monoid_Disj.Disj(p(_1502));
                })(_1501));
            };
        };
    };
};
var elem = function (__dict_Foldable_28) {
    return function (__dict_Eq_29) {
        return function (_1503) {
            return any(__dict_Foldable_28)(Prelude.booleanAlgebraBoolean)(Prelude["=="](__dict_Eq_29)(_1503));
        };
    };
};
var notElem = function (__dict_Foldable_30) {
    return function (__dict_Eq_31) {
        return function (x) {
            return function (_1504) {
                return !elem(__dict_Foldable_30)(__dict_Eq_31)(x)(_1504);
            };
        };
    };
};
var or = function (__dict_Foldable_32) {
    return function (__dict_BooleanAlgebra_33) {
        return any(__dict_Foldable_32)(__dict_BooleanAlgebra_33)(Prelude.id(Prelude.categoryFn));
    };
};
var all = function (__dict_Foldable_34) {
    return function (__dict_BooleanAlgebra_35) {
        return function (p) {
            return function (_1505) {
                return Data_Monoid_Conj.runConj(foldMap(__dict_Foldable_34)(Data_Monoid_Conj.monoidConj(__dict_BooleanAlgebra_35))(function (_1506) {
                    return Data_Monoid_Conj.Conj(p(_1506));
                })(_1505));
            };
        };
    };
};
var and = function (__dict_Foldable_36) {
    return function (__dict_BooleanAlgebra_37) {
        return all(__dict_Foldable_36)(__dict_BooleanAlgebra_37)(Prelude.id(Prelude.categoryFn));
    };
};
module.exports = {
    Foldable: Foldable, 
    find: find, 
    notElem: notElem, 
    elem: elem, 
    product: product, 
    sum: sum, 
    all: all, 
    any: any, 
    or: or, 
    and: and, 
    intercalate: intercalate, 
    mconcat: mconcat, 
    sequence_: sequence_, 
    for_: for_, 
    traverse_: traverse_, 
    fold: fold, 
    foldMap: foldMap, 
    foldl: foldl, 
    foldr: foldr, 
    foldableArray: foldableArray, 
    foldableMaybe: foldableMaybe, 
    foldableFirst: foldableFirst, 
    foldableLast: foldableLast, 
    foldableAdditive: foldableAdditive, 
    foldableDual: foldableDual, 
    foldableDisj: foldableDisj, 
    foldableConj: foldableConj, 
    foldableMultiplicative: foldableMultiplicative
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\Data.Foldable\\foreign.js","Control.Apply":"c:\\Development\\Web\\jundo\\output\\Control.Apply\\index.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js","Data.Maybe.First":"c:\\Development\\Web\\jundo\\output\\Data.Maybe.First\\index.js","Data.Maybe.Last":"c:\\Development\\Web\\jundo\\output\\Data.Maybe.Last\\index.js","Data.Monoid":"c:\\Development\\Web\\jundo\\output\\Data.Monoid\\index.js","Data.Monoid.Additive":"c:\\Development\\Web\\jundo\\output\\Data.Monoid.Additive\\index.js","Data.Monoid.Conj":"c:\\Development\\Web\\jundo\\output\\Data.Monoid.Conj\\index.js","Data.Monoid.Disj":"c:\\Development\\Web\\jundo\\output\\Data.Monoid.Disj\\index.js","Data.Monoid.Dual":"c:\\Development\\Web\\jundo\\output\\Data.Monoid.Dual\\index.js","Data.Monoid.Multiplicative":"c:\\Development\\Web\\jundo\\output\\Data.Monoid.Multiplicative\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Foreign.Class\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Data_Array = require("Data.Array");
var Data_Either = require("Data.Either");
var Data_Foreign = require("Data.Foreign");
var Data_Foreign_Index = require("Data.Foreign.Index");
var Data_Foreign_Null = require("Data.Foreign.Null");
var Data_Foreign_NullOrUndefined = require("Data.Foreign.NullOrUndefined");
var Data_Foreign_Undefined = require("Data.Foreign.Undefined");
var Data_Int = require("Data.Int");
var Data_Traversable = require("Data.Traversable");
var IsForeign = function (read) {
    this.read = read;
};
var stringIsForeign = new IsForeign(Data_Foreign.readString);
var read = function (dict) {
    return dict.read;
};
var readJSON = function (__dict_IsForeign_0) {
    return function (json) {
        return Prelude[">>="](Data_Either.bindEither)(Data_Foreign.parseJSON(json))(read(__dict_IsForeign_0));
    };
};
var readWith = function (__dict_IsForeign_1) {
    return function (f) {
        return function (value) {
            return Data_Either.either(function (_2264) {
                return Data_Either.Left.create(f(_2264));
            })(Data_Either.Right.create)(read(__dict_IsForeign_1)(value));
        };
    };
};
var readProp = function (__dict_IsForeign_2) {
    return function (__dict_Index_3) {
        return function (prop) {
            return function (value) {
                return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Index["!"](__dict_Index_3)(value)(prop))(readWith(__dict_IsForeign_2)(Data_Foreign_Index.errorAt(__dict_Index_3)(prop)));
            };
        };
    };
};
var undefinedIsForeign = function (__dict_IsForeign_4) {
    return new IsForeign(Data_Foreign_Undefined.readUndefined(read(__dict_IsForeign_4)));
};
var numberIsForeign = new IsForeign(Data_Foreign.readNumber);
var nullOrUndefinedIsForeign = function (__dict_IsForeign_5) {
    return new IsForeign(Data_Foreign_NullOrUndefined.readNullOrUndefined(read(__dict_IsForeign_5)));
};
var nullIsForeign = function (__dict_IsForeign_6) {
    return new IsForeign(Data_Foreign_Null.readNull(read(__dict_IsForeign_6)));
};
var intIsForeign = new IsForeign(Data_Foreign.readInt);
var foreignIsForeign = new IsForeign(function (f) {
    return Prelude["return"](Data_Either.applicativeEither)(f);
});
var charIsForeign = new IsForeign(Data_Foreign.readChar);
var booleanIsForeign = new IsForeign(Data_Foreign.readBoolean);
var arrayIsForeign = function (__dict_IsForeign_7) {
    return new IsForeign(function (value) {
        var readElement = function (i) {
            return function (value_1) {
                return readWith(__dict_IsForeign_7)(Data_Foreign.ErrorAtIndex.create(i))(value_1);
            };
        };
        var readElements = function (arr) {
            return Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Data_Array.zipWith(readElement)(Data_Array.range(0)(Data_Array.length(arr)))(arr));
        };
        return Prelude[">>="](Data_Either.bindEither)(Data_Foreign.readArray(value))(readElements);
    });
};
module.exports = {
    IsForeign: IsForeign, 
    readProp: readProp, 
    readWith: readWith, 
    readJSON: readJSON, 
    read: read, 
    foreignIsForeign: foreignIsForeign, 
    stringIsForeign: stringIsForeign, 
    charIsForeign: charIsForeign, 
    booleanIsForeign: booleanIsForeign, 
    numberIsForeign: numberIsForeign, 
    intIsForeign: intIsForeign, 
    arrayIsForeign: arrayIsForeign, 
    nullIsForeign: nullIsForeign, 
    undefinedIsForeign: undefinedIsForeign, 
    nullOrUndefinedIsForeign: nullOrUndefinedIsForeign
};

},{"Data.Array":"c:\\Development\\Web\\jundo\\output\\Data.Array\\index.js","Data.Either":"c:\\Development\\Web\\jundo\\output\\Data.Either\\index.js","Data.Foreign":"c:\\Development\\Web\\jundo\\output\\Data.Foreign\\index.js","Data.Foreign.Index":"c:\\Development\\Web\\jundo\\output\\Data.Foreign.Index\\index.js","Data.Foreign.Null":"c:\\Development\\Web\\jundo\\output\\Data.Foreign.Null\\index.js","Data.Foreign.NullOrUndefined":"c:\\Development\\Web\\jundo\\output\\Data.Foreign.NullOrUndefined\\index.js","Data.Foreign.Undefined":"c:\\Development\\Web\\jundo\\output\\Data.Foreign.Undefined\\index.js","Data.Int":"c:\\Development\\Web\\jundo\\output\\Data.Int\\index.js","Data.Traversable":"c:\\Development\\Web\\jundo\\output\\Data.Traversable\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Foreign.Index\\foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Foreign.Index

// jshint maxparams: 4
exports.unsafeReadPropImpl = function (f, s, key, value) {
  return value == null ? f : s(value[key]);
};

// jshint maxparams: 2
exports.unsafeHasOwnProperty = function (prop, value) {
  return Object.prototype.hasOwnProperty.call(value, prop);
};

exports.unsafeHasProperty = function (prop, value) {
  return prop in value;
};

},{}],"c:\\Development\\Web\\jundo\\output\\Data.Foreign.Index\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Either = require("Data.Either");
var Data_Foreign = require("Data.Foreign");
var Data_Function = require("Data.Function");
var Data_Int = require("Data.Int");
var Index = function (errorAt, hasOwnProperty, hasProperty, ix) {
    this.errorAt = errorAt;
    this.hasOwnProperty = hasOwnProperty;
    this.hasProperty = hasProperty;
    this.ix = ix;
};
var unsafeReadProp = function (k) {
    return function (value) {
        return $foreign.unsafeReadPropImpl(new Data_Either.Left(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(value))), Prelude.pure(Data_Either.applicativeEither), k, value);
    };
};
var prop = unsafeReadProp;
var ix = function (dict) {
    return dict.ix;
};
var $bang = function (__dict_Index_0) {
    return ix(__dict_Index_0);
};
var index = unsafeReadProp;
var hasPropertyImpl = function (p) {
    return function (value) {
        if (Data_Foreign.isNull(value)) {
            return false;
        };
        if (Data_Foreign.isUndefined(value)) {
            return false;
        };
        if (Prelude["=="](Prelude.eqString)(Data_Foreign.typeOf(value))("object") || Prelude["=="](Prelude.eqString)(Data_Foreign.typeOf(value))("function")) {
            return $foreign.unsafeHasProperty(p, value);
        };
        return false;
    };
};
var hasProperty = function (dict) {
    return dict.hasProperty;
};
var hasOwnPropertyImpl = function (p) {
    return function (value) {
        if (Data_Foreign.isNull(value)) {
            return false;
        };
        if (Data_Foreign.isUndefined(value)) {
            return false;
        };
        if (Prelude["=="](Prelude.eqString)(Data_Foreign.typeOf(value))("object") || Prelude["=="](Prelude.eqString)(Data_Foreign.typeOf(value))("function")) {
            return $foreign.unsafeHasOwnProperty(p, value);
        };
        return false;
    };
};
var indexInt = new Index(Data_Foreign.ErrorAtIndex.create, hasOwnPropertyImpl, hasPropertyImpl, Prelude.flip(index));
var indexString = new Index(Data_Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl, Prelude.flip(prop));
var hasOwnProperty = function (dict) {
    return dict.hasOwnProperty;
};
var errorAt = function (dict) {
    return dict.errorAt;
};
module.exports = {
    Index: Index, 
    errorAt: errorAt, 
    hasOwnProperty: hasOwnProperty, 
    hasProperty: hasProperty, 
    "!": $bang, 
    ix: ix, 
    index: index, 
    prop: prop, 
    indexString: indexString, 
    indexInt: indexInt
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\Data.Foreign.Index\\foreign.js","Data.Either":"c:\\Development\\Web\\jundo\\output\\Data.Either\\index.js","Data.Foreign":"c:\\Development\\Web\\jundo\\output\\Data.Foreign\\index.js","Data.Function":"c:\\Development\\Web\\jundo\\output\\Data.Function\\index.js","Data.Int":"c:\\Development\\Web\\jundo\\output\\Data.Int\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Foreign.NullOrUndefined\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Foreign = require("Data.Foreign");
var Data_Either = require("Data.Either");
var NullOrUndefined = function (x) {
    return x;
};
var runNullOrUndefined = function (_524) {
    return _524;
};
var readNullOrUndefined = function (f) {
    return function (value) {
        if (Data_Foreign.isNull(value) || Data_Foreign.isUndefined(value)) {
            return Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
        };
        return Prelude["<$>"](Data_Either.functorEither)(function (_1709) {
            return NullOrUndefined(Data_Maybe.Just.create(_1709));
        })(f(value));
    };
};
module.exports = {
    NullOrUndefined: NullOrUndefined, 
    readNullOrUndefined: readNullOrUndefined, 
    runNullOrUndefined: runNullOrUndefined
};

},{"Data.Either":"c:\\Development\\Web\\jundo\\output\\Data.Either\\index.js","Data.Foreign":"c:\\Development\\Web\\jundo\\output\\Data.Foreign\\index.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Foreign.Null\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Foreign = require("Data.Foreign");
var Data_Either = require("Data.Either");
var Null = function (x) {
    return x;
};
var runNull = function (_523) {
    return _523;
};
var readNull = function (f) {
    return function (value) {
        if (Data_Foreign.isNull(value)) {
            return Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
        };
        return Prelude["<$>"](Data_Either.functorEither)(function (_1705) {
            return Null(Data_Maybe.Just.create(_1705));
        })(f(value));
    };
};
module.exports = {
    Null: Null, 
    readNull: readNull, 
    runNull: runNull
};

},{"Data.Either":"c:\\Development\\Web\\jundo\\output\\Data.Either\\index.js","Data.Foreign":"c:\\Development\\Web\\jundo\\output\\Data.Foreign\\index.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Foreign.Undefined\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Foreign = require("Data.Foreign");
var Data_Either = require("Data.Either");
var Undefined = function (x) {
    return x;
};
var runUndefined = function (_525) {
    return _525;
};
var readUndefined = function (f) {
    return function (value) {
        if (Data_Foreign.isUndefined(value)) {
            return Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
        };
        return Prelude["<$>"](Data_Either.functorEither)(function (_1713) {
            return Undefined(Data_Maybe.Just.create(_1713));
        })(f(value));
    };
};
module.exports = {
    Undefined: Undefined, 
    readUndefined: readUndefined, 
    runUndefined: runUndefined
};

},{"Data.Either":"c:\\Development\\Web\\jundo\\output\\Data.Either\\index.js","Data.Foreign":"c:\\Development\\Web\\jundo\\output\\Data.Foreign\\index.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Foreign\\foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Foreign

// jshint maxparams: 3
exports.parseJSONImpl = function (left, right, str) {
  try {
    return right(JSON.parse(str));
  } catch (e) {
    return left(e.toString());
  }
};

// jshint maxparams: 1
exports.toForeign = function (value) {
  return value;
};

exports.unsafeFromForeign = function (value) {
  return value;
};

exports.typeOf = function (value) {
  return typeof value;
};

exports.tagOf = function (value) {
  return Object.prototype.toString.call(value).slice(8, -1);
};

exports.isNull = function (value) {
  return value === null;
};

exports.isUndefined = function (value) {
  return value === undefined;
};

exports.isArray = Array.isArray || function (value) {
  return Object.prototype.toString.call(value) === "[object Array]";
};

},{}],"c:\\Development\\Web\\jundo\\output\\Data.Foreign\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Either = require("Data.Either");
var Data_Maybe = require("Data.Maybe");
var Data_Function = require("Data.Function");
var Data_Int = require("Data.Int");
var Data_String = require("Data.String");
var TypeMismatch = (function () {
    function TypeMismatch(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    TypeMismatch.create = function (value0) {
        return function (value1) {
            return new TypeMismatch(value0, value1);
        };
    };
    return TypeMismatch;
})();
var ErrorAtIndex = (function () {
    function ErrorAtIndex(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtIndex.create = function (value0) {
        return function (value1) {
            return new ErrorAtIndex(value0, value1);
        };
    };
    return ErrorAtIndex;
})();
var ErrorAtProperty = (function () {
    function ErrorAtProperty(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtProperty.create = function (value0) {
        return function (value1) {
            return new ErrorAtProperty(value0, value1);
        };
    };
    return ErrorAtProperty;
})();
var JSONError = (function () {
    function JSONError(value0) {
        this.value0 = value0;
    };
    JSONError.create = function (value0) {
        return new JSONError(value0);
    };
    return JSONError;
})();
var unsafeReadTagged = function (tag) {
    return function (value) {
        if (Prelude["=="](Prelude.eqString)($foreign.tagOf(value))(tag)) {
            return Prelude.pure(Data_Either.applicativeEither)($foreign.unsafeFromForeign(value));
        };
        return new Data_Either.Left(new TypeMismatch(tag, $foreign.tagOf(value)));
    };
};
var showForeignError = new Prelude.Show(function (_520) {
    if (_520 instanceof TypeMismatch) {
        return "Type mismatch: expected " + (_520.value0 + (", found " + _520.value1));
    };
    if (_520 instanceof ErrorAtIndex) {
        return "Error at array index " + (Prelude.show(Prelude.showInt)(_520.value0) + (": " + Prelude.show(showForeignError)(_520.value1)));
    };
    if (_520 instanceof ErrorAtProperty) {
        return "Error at property " + (Prelude.show(Prelude.showString)(_520.value0) + (": " + Prelude.show(showForeignError)(_520.value1)));
    };
    if (_520 instanceof JSONError) {
        return "JSON error: " + _520.value0;
    };
    throw new Error("Failed pattern match: " + [ _520.constructor.name ]);
});
var readString = unsafeReadTagged("String");
var readNumber = unsafeReadTagged("Number");
var readInt = function (value) {
    var error = Data_Either.Left.create(new TypeMismatch("Int", $foreign.tagOf(value)));
    var fromNumber = function (_1699) {
        return Data_Maybe.maybe(error)(Prelude.pure(Data_Either.applicativeEither))(Data_Int.fromNumber(_1699));
    };
    return Data_Either.either(Prelude["const"](error))(fromNumber)(readNumber(value));
};
var readChar = function (value) {
    var error = Data_Either.Left.create(new TypeMismatch("Char", $foreign.tagOf(value)));
    var fromString = function (_1700) {
        return Data_Maybe.maybe(error)(Prelude.pure(Data_Either.applicativeEither))(Data_String.toChar(_1700));
    };
    return Data_Either.either(Prelude["const"](error))(fromString)(readString(value));
};
var readBoolean = unsafeReadTagged("Boolean");
var readArray = function (value) {
    if ($foreign.isArray(value)) {
        return Prelude.pure(Data_Either.applicativeEither)($foreign.unsafeFromForeign(value));
    };
    return new Data_Either.Left(new TypeMismatch("array", $foreign.tagOf(value)));
};
var parseJSON = function (json) {
    return $foreign.parseJSONImpl(function (_1701) {
        return Data_Either.Left.create(JSONError.create(_1701));
    }, Data_Either.Right.create, json);
};
var eqForeignError = new Prelude.Eq(function (_521) {
    return function (_522) {
        if (_521 instanceof TypeMismatch && _522 instanceof TypeMismatch) {
            return Prelude["=="](Prelude.eqString)(_521.value0)(_522.value0) && Prelude["=="](Prelude.eqString)(_521.value1)(_522.value1);
        };
        if (_521 instanceof ErrorAtIndex && _522 instanceof ErrorAtIndex) {
            return _521.value0 === _522.value0 && Prelude["=="](eqForeignError)(_521.value1)(_522.value1);
        };
        if (_521 instanceof ErrorAtProperty && _522 instanceof ErrorAtProperty) {
            return Prelude["=="](Prelude.eqString)(_521.value0)(_522.value0) && Prelude["=="](eqForeignError)(_521.value1)(_522.value1);
        };
        if (_521 instanceof JSONError && _522 instanceof JSONError) {
            return Prelude["=="](Prelude.eqString)(_521.value0)(_522.value0);
        };
        return false;
    };
});
module.exports = {
    TypeMismatch: TypeMismatch, 
    ErrorAtIndex: ErrorAtIndex, 
    ErrorAtProperty: ErrorAtProperty, 
    JSONError: JSONError, 
    readArray: readArray, 
    readInt: readInt, 
    readNumber: readNumber, 
    readBoolean: readBoolean, 
    readChar: readChar, 
    readString: readString, 
    unsafeReadTagged: unsafeReadTagged, 
    parseJSON: parseJSON, 
    showForeignError: showForeignError, 
    eqForeignError: eqForeignError, 
    isArray: $foreign.isArray, 
    isUndefined: $foreign.isUndefined, 
    isNull: $foreign.isNull, 
    tagOf: $foreign.tagOf, 
    typeOf: $foreign.typeOf, 
    unsafeFromForeign: $foreign.unsafeFromForeign, 
    toForeign: $foreign.toForeign
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\Data.Foreign\\foreign.js","Data.Either":"c:\\Development\\Web\\jundo\\output\\Data.Either\\index.js","Data.Function":"c:\\Development\\Web\\jundo\\output\\Data.Function\\index.js","Data.Int":"c:\\Development\\Web\\jundo\\output\\Data.Int\\index.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js","Data.String":"c:\\Development\\Web\\jundo\\output\\Data.String\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Function\\foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Function

exports.mkFn0 = function (fn) {
  return function () {
    return fn({});
  };
};

exports.mkFn1 = function (fn) {
  return function (a) {
    return fn(a);
  };
};

exports.mkFn2 = function (fn) {
  /* jshint maxparams: 2 */
  return function (a, b) {
    return fn(a)(b);
  };
};

exports.mkFn3 = function (fn) {
  /* jshint maxparams: 3 */
  return function (a, b, c) {
    return fn(a)(b)(c);
  };
};

exports.mkFn4 = function (fn) {
  /* jshint maxparams: 4 */
  return function (a, b, c, d) {
    return fn(a)(b)(c)(d);
  };
};

exports.mkFn5 = function (fn) {
  /* jshint maxparams: 5 */
  return function (a, b, c, d, e) {
    return fn(a)(b)(c)(d)(e);
  };
};

exports.mkFn6 = function (fn) {
  /* jshint maxparams: 6 */
  return function (a, b, c, d, e, f) {
    return fn(a)(b)(c)(d)(e)(f);
  };
};

exports.mkFn7 = function (fn) {
  /* jshint maxparams: 7 */
  return function (a, b, c, d, e, f, g) {
    return fn(a)(b)(c)(d)(e)(f)(g);
  };
};

exports.mkFn8 = function (fn) {
  /* jshint maxparams: 8 */
  return function (a, b, c, d, e, f, g, h) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h);
  };
};

exports.mkFn9 = function (fn) {
  /* jshint maxparams: 9 */
  return function (a, b, c, d, e, f, g, h, i) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);
  };
};

exports.mkFn10 = function (fn) {
  /* jshint maxparams: 10 */
  return function (a, b, c, d, e, f, g, h, i, j) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);
  };
};

exports.runFn0 = function (fn) {
  return fn();
};

exports.runFn1 = function (fn) {
  return function (a) {
    return fn(a);
  };
};

exports.runFn2 = function (fn) {
  return function (a) {
    return function (b) {
      return fn(a, b);
    };
  };
};

exports.runFn3 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return fn(a, b, c);
      };
    };
  };
};

exports.runFn4 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return fn(a, b, c, d);
        };
      };
    };
  };
};

exports.runFn5 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return fn(a, b, c, d, e);
          };
        };
      };
    };
  };
};

exports.runFn6 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return fn(a, b, c, d, e, f);
            };
          };
        };
      };
    };
  };
};

exports.runFn7 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return fn(a, b, c, d, e, f, g);
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn8 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return fn(a, b, c, d, e, f, g, h);
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn9 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return fn(a, b, c, d, e, f, g, h, i);
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn10 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return function (j) {
                      return fn(a, b, c, d, e, f, g, h, i, j);
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

},{}],"c:\\Development\\Web\\jundo\\output\\Data.Function\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var on = function (f) {
    return function (g) {
        return function (x) {
            return function (y) {
                return f(g(x))(g(y));
            };
        };
    };
};
module.exports = {
    on: on, 
    runFn10: $foreign.runFn10, 
    runFn9: $foreign.runFn9, 
    runFn8: $foreign.runFn8, 
    runFn7: $foreign.runFn7, 
    runFn6: $foreign.runFn6, 
    runFn5: $foreign.runFn5, 
    runFn4: $foreign.runFn4, 
    runFn3: $foreign.runFn3, 
    runFn2: $foreign.runFn2, 
    runFn1: $foreign.runFn1, 
    runFn0: $foreign.runFn0, 
    mkFn10: $foreign.mkFn10, 
    mkFn9: $foreign.mkFn9, 
    mkFn8: $foreign.mkFn8, 
    mkFn7: $foreign.mkFn7, 
    mkFn6: $foreign.mkFn6, 
    mkFn5: $foreign.mkFn5, 
    mkFn4: $foreign.mkFn4, 
    mkFn3: $foreign.mkFn3, 
    mkFn2: $foreign.mkFn2, 
    mkFn1: $foreign.mkFn1, 
    mkFn0: $foreign.mkFn0
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\Data.Function\\foreign.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Functor.Coproduct\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Data_Either = require("Data.Either");
var Data_Foldable = require("Data.Foldable");
var Data_Traversable = require("Data.Traversable");
var Coproduct = function (x) {
    return x;
};
var runCoproduct = function (_526) {
    return _526;
};
var right = function (_1720) {
    return Coproduct(Data_Either.Right.create(_1720));
};
var left = function (_1721) {
    return Coproduct(Data_Either.Left.create(_1721));
};
var coproduct = function (f) {
    return function (g) {
        return function (_1722) {
            return Data_Either.either(f)(g)(runCoproduct(_1722));
        };
    };
};
var foldableCoproduct = function (__dict_Foldable_0) {
    return function (__dict_Foldable_1) {
        return new Data_Foldable.Foldable(function (__dict_Monoid_2) {
            return function (f) {
                return coproduct(Data_Foldable.foldMap(__dict_Foldable_0)(__dict_Monoid_2)(f))(Data_Foldable.foldMap(__dict_Foldable_1)(__dict_Monoid_2)(f));
            };
        }, function (f) {
            return function (z) {
                return coproduct(Data_Foldable.foldl(__dict_Foldable_0)(f)(z))(Data_Foldable.foldl(__dict_Foldable_1)(f)(z));
            };
        }, function (f) {
            return function (z) {
                return coproduct(Data_Foldable.foldr(__dict_Foldable_0)(f)(z))(Data_Foldable.foldr(__dict_Foldable_1)(f)(z));
            };
        });
    };
};
var functorCoproduct = function (__dict_Functor_3) {
    return function (__dict_Functor_4) {
        return new Prelude.Functor(function (f) {
            return function (_1723) {
                return Coproduct(coproduct(function (_1724) {
                    return Data_Either.Left.create(Prelude["<$>"](__dict_Functor_3)(f)(_1724));
                })(function (_1725) {
                    return Data_Either.Right.create(Prelude["<$>"](__dict_Functor_4)(f)(_1725));
                })(_1723));
            };
        });
    };
};
var traversableCoproduct = function (__dict_Traversable_5) {
    return function (__dict_Traversable_6) {
        return new Data_Traversable.Traversable(function () {
            return foldableCoproduct(__dict_Traversable_5["__superclass_Data.Foldable.Foldable_1"]())(__dict_Traversable_6["__superclass_Data.Foldable.Foldable_1"]());
        }, function () {
            return functorCoproduct(__dict_Traversable_5["__superclass_Prelude.Functor_0"]())(__dict_Traversable_6["__superclass_Prelude.Functor_0"]());
        }, function (__dict_Applicative_8) {
            return coproduct(function (_1726) {
                return Prelude["<$>"]((__dict_Applicative_8["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(function (_1727) {
                    return Coproduct(Data_Either.Left.create(_1727));
                })(Data_Traversable.sequence(__dict_Traversable_5)(__dict_Applicative_8)(_1726));
            })(function (_1728) {
                return Prelude["<$>"]((__dict_Applicative_8["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(function (_1729) {
                    return Coproduct(Data_Either.Right.create(_1729));
                })(Data_Traversable.sequence(__dict_Traversable_6)(__dict_Applicative_8)(_1728));
            });
        }, function (__dict_Applicative_7) {
            return function (f) {
                return coproduct(function (_1730) {
                    return Prelude["<$>"]((__dict_Applicative_7["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(function (_1731) {
                        return Coproduct(Data_Either.Left.create(_1731));
                    })(Data_Traversable.traverse(__dict_Traversable_5)(__dict_Applicative_7)(f)(_1730));
                })(function (_1732) {
                    return Prelude["<$>"]((__dict_Applicative_7["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(function (_1733) {
                        return Coproduct(Data_Either.Right.create(_1733));
                    })(Data_Traversable.traverse(__dict_Traversable_6)(__dict_Applicative_7)(f)(_1732));
                });
            };
        });
    };
};
module.exports = {
    Coproduct: Coproduct, 
    coproduct: coproduct, 
    right: right, 
    left: left, 
    runCoproduct: runCoproduct, 
    functorCoproduct: functorCoproduct, 
    foldableCoproduct: foldableCoproduct, 
    traversableCoproduct: traversableCoproduct
};

},{"Data.Either":"c:\\Development\\Web\\jundo\\output\\Data.Either\\index.js","Data.Foldable":"c:\\Development\\Web\\jundo\\output\\Data.Foldable\\index.js","Data.Traversable":"c:\\Development\\Web\\jundo\\output\\Data.Traversable\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Functor.Invariant\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Invariant = function (imap) {
    this.imap = imap;
};
var imapF = function (__dict_Functor_0) {
    return function (_1139) {
        return Prelude["const"](Prelude.map(__dict_Functor_0)(_1139));
    };
};
var invariantArray = new Invariant(imapF(Prelude.functorArray));
var invariantFn = new Invariant(imapF(Prelude.functorFn));
var imap = function (dict) {
    return dict.imap;
};
module.exports = {
    Invariant: Invariant, 
    imapF: imapF, 
    imap: imap, 
    invariantFn: invariantFn, 
    invariantArray: invariantArray
};

},{"Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Functor\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var $less$dollar = function (__dict_Functor_0) {
    return function (x) {
        return function (f) {
            return Prelude["<$>"](__dict_Functor_0)(Prelude["const"](x))(f);
        };
    };
};
var $dollar$greater = function (__dict_Functor_1) {
    return function (f) {
        return function (x) {
            return Prelude["<$>"](__dict_Functor_1)(Prelude["const"](x))(f);
        };
    };
};
module.exports = {
    "$>": $dollar$greater, 
    "<$": $less$dollar
};

},{"Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Generic\\foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Generic


//------------------------------------------------------------------------------
// Zipping ---------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.zipAll = function(f) {
    return function(xs) {
        return function(ys) {
            var l = xs.length < ys.length ? xs.length : ys.length;
            for (var i = 0; i < l; i++) {
                if (!f(xs[i])(ys[i])) {
                    return false;
                }
            }
            return true;
        };
    };
};

exports.zipCompare = function(f) {
    return function(xs) {
        return function(ys) {
            var i = 0;
            var xlen = xs.length;
            var ylen = ys.length;
            while (i < xlen && i < ylen) {
                var o = f(xs[i])(ys[i]);
                if (o !== 0) {
                    return o;
                }
                i++;
            }
            if (xlen === ylen) {
                return 0;
            } else if (xlen > ylen) {
                return -1;
            } else {
                return 1;
            }
        };
    };
};

},{}],"c:\\Development\\Web\\jundo\\output\\Data.Generic\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Either = require("Data.Either");
var Data_Maybe = require("Data.Maybe");
var Data_Tuple = require("Data.Tuple");
var Data_Traversable = require("Data.Traversable");
var Data_Foldable = require("Data.Foldable");
var Data_Array = require("Data.Array");
var Data_String = require("Data.String");
var Proxy = (function () {
    function Proxy() {

    };
    Proxy.value = new Proxy();
    return Proxy;
})();
var SProd = (function () {
    function SProd(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    SProd.create = function (value0) {
        return function (value1) {
            return new SProd(value0, value1);
        };
    };
    return SProd;
})();
var SRecord = (function () {
    function SRecord(value0) {
        this.value0 = value0;
    };
    SRecord.create = function (value0) {
        return new SRecord(value0);
    };
    return SRecord;
})();
var SNumber = (function () {
    function SNumber(value0) {
        this.value0 = value0;
    };
    SNumber.create = function (value0) {
        return new SNumber(value0);
    };
    return SNumber;
})();
var SBoolean = (function () {
    function SBoolean(value0) {
        this.value0 = value0;
    };
    SBoolean.create = function (value0) {
        return new SBoolean(value0);
    };
    return SBoolean;
})();
var SInt = (function () {
    function SInt(value0) {
        this.value0 = value0;
    };
    SInt.create = function (value0) {
        return new SInt(value0);
    };
    return SInt;
})();
var SString = (function () {
    function SString(value0) {
        this.value0 = value0;
    };
    SString.create = function (value0) {
        return new SString(value0);
    };
    return SString;
})();
var SArray = (function () {
    function SArray(value0) {
        this.value0 = value0;
    };
    SArray.create = function (value0) {
        return new SArray(value0);
    };
    return SArray;
})();
var SigProd = (function () {
    function SigProd(value0) {
        this.value0 = value0;
    };
    SigProd.create = function (value0) {
        return new SigProd(value0);
    };
    return SigProd;
})();
var SigRecord = (function () {
    function SigRecord(value0) {
        this.value0 = value0;
    };
    SigRecord.create = function (value0) {
        return new SigRecord(value0);
    };
    return SigRecord;
})();
var SigNumber = (function () {
    function SigNumber() {

    };
    SigNumber.value = new SigNumber();
    return SigNumber;
})();
var SigBoolean = (function () {
    function SigBoolean() {

    };
    SigBoolean.value = new SigBoolean();
    return SigBoolean;
})();
var SigInt = (function () {
    function SigInt() {

    };
    SigInt.value = new SigInt();
    return SigInt;
})();
var SigString = (function () {
    function SigString() {

    };
    SigString.value = new SigString();
    return SigString;
})();
var SigArray = (function () {
    function SigArray(value0) {
        this.value0 = value0;
    };
    SigArray.create = function (value0) {
        return new SigArray(value0);
    };
    return SigArray;
})();
var Generic = function (fromSpine, toSignature, toSpine) {
    this.fromSpine = fromSpine;
    this.toSignature = toSignature;
    this.toSpine = toSpine;
};
var toSpine = function (dict) {
    return dict.toSpine;
};
var toSignature = function (dict) {
    return dict.toSignature;
};
var isValidSpine = function (_667) {
    return function (_668) {
        if (_667 instanceof SigBoolean && _668 instanceof SBoolean) {
            return true;
        };
        if (_667 instanceof SigNumber && _668 instanceof SNumber) {
            return true;
        };
        if (_667 instanceof SigInt && _668 instanceof SInt) {
            return true;
        };
        if (_667 instanceof SigString && _668 instanceof SString) {
            return true;
        };
        if (_667 instanceof SigArray && _668 instanceof SArray) {
            return Data_Foldable.all(Data_Foldable.foldableArray)(Prelude.booleanAlgebraBoolean)(function (_2391) {
                return isValidSpine(_667.value0(Prelude.unit))(_2391(Prelude.unit));
            })(_668.value0);
        };
        if (_667 instanceof SigProd && _668 instanceof SProd) {
            var _2273 = Data_Foldable.find(Data_Foldable.foldableArray)(function (_2392) {
                return Prelude["=="](Prelude.eqString)(_668.value0)((function (_0) {
                    return _0.sigConstructor;
                })(_2392));
            })(_667.value0);
            if (_2273 instanceof Data_Maybe.Nothing) {
                return false;
            };
            if (_2273 instanceof Data_Maybe.Just) {
                return Data_Foldable.and(Data_Foldable.foldableArray)(Prelude.booleanAlgebraBoolean)(Data_Array.zipWith(function (sig) {
                    return function (spine) {
                        return isValidSpine(sig(Prelude.unit))(spine(Prelude.unit));
                    };
                })(_2273.value0.sigValues)(_668.value1));
            };
            throw new Error("Failed pattern match: " + [ _2273.constructor.name ]);
        };
        if (_667 instanceof SigRecord && _668 instanceof SRecord) {
            return Data_Foldable.and(Data_Foldable.foldableArray)(Prelude.booleanAlgebraBoolean)(Data_Array.zipWith(function (sig) {
                return function (val) {
                    return isValidSpine(sig.recValue(Prelude.unit))(val.recValue(Prelude.unit));
                };
            })(Data_Array.sortBy(function (a) {
                return function (b) {
                    return Prelude.compare(Prelude.ordString)(a.recLabel)(b.recLabel);
                };
            })(_667.value0))(Data_Array.sortBy(function (a) {
                return function (b) {
                    return Prelude.compare(Prelude.ordString)(a.recLabel)(b.recLabel);
                };
            })(_668.value0)));
        };
        return false;
    };
};
var genericString = new Generic(function (_675) {
    if (_675 instanceof SString) {
        return new Data_Maybe.Just(_675.value0);
    };
    return Data_Maybe.Nothing.value;
}, function (_674) {
    return SigString.value;
}, function (x) {
    return new SString(x);
});
var genericShowPrec = function (d) {
    return function (_669) {
        if (_669 instanceof SProd) {
            var showParen = function (_691) {
                return function (x) {
                    if (!_691) {
                        return x;
                    };
                    if (_691) {
                        return "(" + (x + ")");
                    };
                    throw new Error("Failed pattern match at Data.Generic line 148, column 9 - line 149, column 9: " + [ _691.constructor.name, x.constructor.name ]);
                };
            };
            var _2287 = Data_Array["null"](_669.value1);
            if (_2287) {
                return _669.value0;
            };
            if (!_2287) {
                return showParen(d > 10)(_669.value0 + (" " + Data_String.joinWith(" ")(Prelude.map(Prelude.functorArray)(function (x) {
                    return genericShowPrec(11)(x(Prelude.unit));
                })(_669.value1))));
            };
            throw new Error("Failed pattern match: " + [ _2287.constructor.name ]);
        };
        if (_669 instanceof SRecord) {
            return "{" + (Data_String.joinWith(", ")(Prelude.map(Prelude.functorArray)(function (x) {
                return x.recLabel + (": " + genericShowPrec(0)(x.recValue(Prelude.unit)));
            })(_669.value0)) + "}");
        };
        if (_669 instanceof SBoolean) {
            return Prelude.show(Prelude.showBoolean)(_669.value0);
        };
        if (_669 instanceof SInt) {
            return Prelude.show(Prelude.showInt)(_669.value0);
        };
        if (_669 instanceof SNumber) {
            return Prelude.show(Prelude.showNumber)(_669.value0);
        };
        if (_669 instanceof SString) {
            return Prelude.show(Prelude.showString)(_669.value0);
        };
        if (_669 instanceof SArray) {
            return "[" + (Data_String.joinWith(", ")(Prelude.map(Prelude.functorArray)(function (x) {
                return genericShowPrec(0)(x(Prelude.unit));
            })(_669.value0)) + "]");
        };
        throw new Error("Failed pattern match: " + [ d.constructor.name, _669.constructor.name ]);
    };
};
var genericNumber = new Generic(function (_671) {
    if (_671 instanceof SNumber) {
        return new Data_Maybe.Just(_671.value0);
    };
    return Data_Maybe.Nothing.value;
}, function (_670) {
    return SigNumber.value;
}, function (x) {
    return new SNumber(x);
});
var genericInt = new Generic(function (_673) {
    if (_673 instanceof SInt) {
        return new Data_Maybe.Just(_673.value0);
    };
    return Data_Maybe.Nothing.value;
}, function (_672) {
    return SigInt.value;
}, function (x) {
    return new SInt(x);
});
var genericBool = new Generic(function (_677) {
    if (_677 instanceof SBoolean) {
        return new Data_Maybe.Just(_677.value0);
    };
    return Data_Maybe.Nothing.value;
}, function (_676) {
    return SigBoolean.value;
}, function (b) {
    return new SBoolean(b);
});
var gShow = function (__dict_Generic_0) {
    return function (_2393) {
        return genericShowPrec(0)(toSpine(__dict_Generic_0)(_2393));
    };
};
var fromSpine = function (dict) {
    return dict.fromSpine;
};
var eqGeneric = new Prelude.Eq(function (_692) {
    return function (_693) {
        if (_692 instanceof SProd && _693 instanceof SProd) {
            return Prelude["=="](Prelude.eqString)(_692.value0)(_693.value0) && (Data_Array.length(_692.value1) === Data_Array.length(_693.value1) && $foreign.zipAll(function (x) {
                return function (y) {
                    return Prelude["=="](eqGeneric)(x(Prelude.unit))(y(Prelude.unit));
                };
            })(_692.value1)(_693.value1));
        };
        if (_692 instanceof SRecord && _693 instanceof SRecord) {
            var go = function (x) {
                return function (y) {
                    return Prelude["=="](Prelude.eqString)(x.recLabel)(y.recLabel) && Prelude["=="](eqGeneric)(x.recValue(Prelude.unit))(y.recValue(Prelude.unit));
                };
            };
            return Data_Array.length(_692.value0) === Data_Array.length(_693.value0) && $foreign.zipAll(go)(_692.value0)(_693.value0);
        };
        if (_692 instanceof SInt && _693 instanceof SInt) {
            return _692.value0 === _693.value0;
        };
        if (_692 instanceof SNumber && _693 instanceof SNumber) {
            return _692.value0 === _693.value0;
        };
        if (_692 instanceof SBoolean && _693 instanceof SBoolean) {
            return Prelude["=="](Prelude.eqBoolean)(_692.value0)(_693.value0);
        };
        if (_692 instanceof SString && _693 instanceof SString) {
            return Prelude["=="](Prelude.eqString)(_692.value0)(_693.value0);
        };
        if (_692 instanceof SArray && _693 instanceof SArray) {
            return Data_Array.length(_692.value0) === Data_Array.length(_693.value0) && $foreign.zipAll(function (x) {
                return function (y) {
                    return Prelude["=="](eqGeneric)(x(Prelude.unit))(y(Prelude.unit));
                };
            })(_692.value0)(_693.value0);
        };
        return false;
    };
});
var gEq = function (__dict_Generic_1) {
    return function (x) {
        return function (y) {
            return Prelude["=="](eqGeneric)(toSpine(__dict_Generic_1)(x))(toSpine(__dict_Generic_1)(y));
        };
    };
};
var ordGeneric = new Prelude.Ord(function () {
    return eqGeneric;
}, function (_694) {
    return function (_695) {
        if (_694 instanceof SProd && _695 instanceof SProd) {
            var _2322 = Prelude.compare(Prelude.ordString)(_694.value0)(_695.value0);
            if (_2322 instanceof Prelude.EQ) {
                return Prelude.compare(Prelude.ordInt)(0)($foreign.zipCompare(function (x) {
                    return function (y) {
                        var _2323 = Prelude.compare(ordGeneric)(x(Prelude.unit))(y(Prelude.unit));
                        if (_2323 instanceof Prelude.EQ) {
                            return 0;
                        };
                        if (_2323 instanceof Prelude.LT) {
                            return 1;
                        };
                        if (_2323 instanceof Prelude.GT) {
                            return -1;
                        };
                        throw new Error("Failed pattern match: " + [ _2323.constructor.name ]);
                    };
                })(_694.value1)(_695.value1));
            };
            return _2322;
        };
        if (_694 instanceof SProd) {
            return Prelude.LT.value;
        };
        if (_695 instanceof SProd) {
            return Prelude.GT.value;
        };
        if (_694 instanceof SRecord && _695 instanceof SRecord) {
            var go = function (x) {
                return function (y) {
                    var _2332 = Prelude.compare(Prelude.ordString)(x.recLabel)(y.recLabel);
                    if (_2332 instanceof Prelude.EQ) {
                        var _2333 = Prelude.compare(ordGeneric)(x.recValue(Prelude.unit))(y.recValue(Prelude.unit));
                        if (_2333 instanceof Prelude.EQ) {
                            return 0;
                        };
                        if (_2333 instanceof Prelude.LT) {
                            return 1;
                        };
                        if (_2333 instanceof Prelude.GT) {
                            return -1;
                        };
                        throw new Error("Failed pattern match at Data.Generic line 194, column 15 - line 201, column 5: " + [ _2333.constructor.name ]);
                    };
                    if (_2332 instanceof Prelude.LT) {
                        return 1;
                    };
                    if (_2332 instanceof Prelude.GT) {
                        return -1;
                    };
                    throw new Error("Failed pattern match at Data.Generic line 194, column 15 - line 201, column 5: " + [ _2332.constructor.name ]);
                };
            };
            return Prelude.compare(Prelude.ordInt)(0)($foreign.zipCompare(go)(_694.value0)(_695.value0));
        };
        if (_694 instanceof SRecord) {
            return Prelude.LT.value;
        };
        if (_695 instanceof SRecord) {
            return Prelude.GT.value;
        };
        if (_694 instanceof SInt && _695 instanceof SInt) {
            return Prelude.compare(Prelude.ordInt)(_694.value0)(_695.value0);
        };
        if (_694 instanceof SInt) {
            return Prelude.LT.value;
        };
        if (_695 instanceof SInt) {
            return Prelude.GT.value;
        };
        if (_694 instanceof SBoolean && _695 instanceof SBoolean) {
            return Prelude.compare(Prelude.ordBoolean)(_694.value0)(_695.value0);
        };
        if (_694 instanceof SBoolean) {
            return Prelude.LT.value;
        };
        if (_695 instanceof SBoolean) {
            return Prelude.GT.value;
        };
        if (_694 instanceof SNumber && _695 instanceof SNumber) {
            return Prelude.compare(Prelude.ordNumber)(_694.value0)(_695.value0);
        };
        if (_694 instanceof SNumber) {
            return Prelude.LT.value;
        };
        if (_695 instanceof SNumber) {
            return Prelude.GT.value;
        };
        if (_694 instanceof SString && _695 instanceof SString) {
            return Prelude.compare(Prelude.ordString)(_694.value0)(_695.value0);
        };
        if (_694 instanceof SString) {
            return Prelude.LT.value;
        };
        if (_695 instanceof SString) {
            return Prelude.GT.value;
        };
        if (_694 instanceof SArray && _695 instanceof SArray) {
            return Prelude.compare(Prelude.ordInt)(0)($foreign.zipCompare(function (x) {
                return function (y) {
                    var _2354 = Prelude.compare(ordGeneric)(x(Prelude.unit))(y(Prelude.unit));
                    if (_2354 instanceof Prelude.EQ) {
                        return 0;
                    };
                    if (_2354 instanceof Prelude.LT) {
                        return 1;
                    };
                    if (_2354 instanceof Prelude.GT) {
                        return -1;
                    };
                    throw new Error("Failed pattern match: " + [ _2354.constructor.name ]);
                };
            })(_694.value0)(_695.value0));
        };
        throw new Error("Failed pattern match: " + [ _694.constructor.name, _695.constructor.name ]);
    };
});
var gCompare = function (__dict_Generic_2) {
    return function (x) {
        return function (y) {
            return Prelude.compare(ordGeneric)(toSpine(__dict_Generic_2)(x))(toSpine(__dict_Generic_2)(y));
        };
    };
};
var anyProxy = Proxy.value;
var genericArray = function (__dict_Generic_3) {
    return new Generic(function (_678) {
        if (_678 instanceof SArray) {
            return Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(function (_2394) {
                return fromSpine(__dict_Generic_3)((function (_7) {
                    return _7(Prelude.unit);
                })(_2394));
            })(_678.value0);
        };
        return Data_Maybe.Nothing.value;
    }, function (x) {
        var lowerProxy = function (_679) {
            return anyProxy;
        };
        return new SigArray(function (unit) {
            return toSignature(__dict_Generic_3)(lowerProxy(x));
        });
    }, function (xs) {
        return new SArray(Prelude["<$>"](Prelude.functorArray)(function (x) {
            return function (y) {
                return toSpine(__dict_Generic_3)(x);
            };
        })(xs));
    });
};
var genericEither = function (__dict_Generic_4) {
    return function (__dict_Generic_5) {
        return new Generic(function (_688) {
            if (_688 instanceof SProd && (_688.value0 === "Data.Either.Left" && _688.value1.length === 1)) {
                return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Either.Left.create)(fromSpine(__dict_Generic_4)(_688.value1[0](Prelude.unit)));
            };
            if (_688 instanceof SProd && (_688.value0 === "Data.Either.Right" && _688.value1.length === 1)) {
                return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Either.Right.create)(fromSpine(__dict_Generic_5)(_688.value1[0](Prelude.unit)));
            };
            return Data_Maybe.Nothing.value;
        }, function (x) {
            var rproxy = function (_690) {
                return anyProxy;
            };
            var lproxy = function (_689) {
                return anyProxy;
            };
            return new SigProd([ {
                sigConstructor: "Data.Either.Left", 
                sigValues: [ function (u) {
                    return toSignature(__dict_Generic_4)(lproxy(x));
                } ]
            }, {
                sigConstructor: "Data.Either.Right", 
                sigValues: [ function (u) {
                    return toSignature(__dict_Generic_5)(rproxy(x));
                } ]
            } ]);
        }, function (_687) {
            if (_687 instanceof Data_Either.Left) {
                return new SProd("Data.Either.Left", [ function (u) {
                    return toSpine(__dict_Generic_4)(_687.value0);
                } ]);
            };
            if (_687 instanceof Data_Either.Right) {
                return new SProd("Data.Either.Right", [ function (u) {
                    return toSpine(__dict_Generic_5)(_687.value0);
                } ]);
            };
            throw new Error("Failed pattern match at Data.Generic line 128, column 1 - line 143, column 1: " + [ _687.constructor.name ]);
        });
    };
};
var genericMaybe = function (__dict_Generic_6) {
    return new Generic(function (_685) {
        if (_685 instanceof SProd && (_685.value0 === "Data.Maybe.Just" && _685.value1.length === 1)) {
            return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(fromSpine(__dict_Generic_6)(_685.value1[0](Prelude.unit)));
        };
        if (_685 instanceof SProd && (_685.value0 === "Data.Maybe.Nothing" && _685.value1.length === 0)) {
            return Prelude["return"](Data_Maybe.applicativeMaybe)(Data_Maybe.Nothing.value);
        };
        return Data_Maybe.Nothing.value;
    }, function (x) {
        var mbProxy = function (_686) {
            return anyProxy;
        };
        return new SigProd([ {
            sigConstructor: "Data.Maybe.Just", 
            sigValues: [ function (u) {
                return toSignature(__dict_Generic_6)(mbProxy(x));
            } ]
        }, {
            sigConstructor: "Data.Maybe.Nothing", 
            sigValues: [  ]
        } ]);
    }, function (_684) {
        if (_684 instanceof Data_Maybe.Just) {
            return new SProd("Data.Maybe.Just", [ function (u) {
                return toSpine(__dict_Generic_6)(_684.value0);
            } ]);
        };
        if (_684 instanceof Data_Maybe.Nothing) {
            return new SProd("Data.Maybe.Nothing", [  ]);
        };
        throw new Error("Failed pattern match at Data.Generic line 117, column 1 - line 128, column 1: " + [ _684.constructor.name ]);
    });
};
var genericTuple = function (__dict_Generic_7) {
    return function (__dict_Generic_8) {
        return new Generic(function (_681) {
            if (_681 instanceof SProd && (_681.value0 === "Data.Tuple.Tuple" && _681.value1.length === 2)) {
                return Prelude["<*>"](Data_Maybe.applyMaybe)(Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(fromSpine(__dict_Generic_7)(_681.value1[0](Prelude.unit))))(fromSpine(__dict_Generic_8)(_681.value1[1](Prelude.unit)));
            };
            return Data_Maybe.Nothing.value;
        }, function (x) {
            var sndProxy = function (_683) {
                return anyProxy;
            };
            var fstProxy = function (_682) {
                return anyProxy;
            };
            return new SigProd([ {
                sigConstructor: "Data.Tuple.Tuple", 
                sigValues: [ function (u) {
                    return toSignature(__dict_Generic_7)(fstProxy(x));
                }, function (u) {
                    return toSignature(__dict_Generic_8)(sndProxy(x));
                } ]
            } ]);
        }, function (_680) {
            return new SProd("Data.Tuple.Tuple", [ function (u) {
                return toSpine(__dict_Generic_7)(_680.value0);
            }, function (u) {
                return toSpine(__dict_Generic_8)(_680.value1);
            } ]);
        });
    };
};
module.exports = {
    Proxy: Proxy, 
    SigProd: SigProd, 
    SigRecord: SigRecord, 
    SigNumber: SigNumber, 
    SigBoolean: SigBoolean, 
    SigInt: SigInt, 
    SigString: SigString, 
    SigArray: SigArray, 
    SProd: SProd, 
    SRecord: SRecord, 
    SNumber: SNumber, 
    SBoolean: SBoolean, 
    SInt: SInt, 
    SString: SString, 
    SArray: SArray, 
    Generic: Generic, 
    gCompare: gCompare, 
    gEq: gEq, 
    gShow: gShow, 
    anyProxy: anyProxy, 
    isValidSpine: isValidSpine, 
    fromSpine: fromSpine, 
    toSignature: toSignature, 
    toSpine: toSpine, 
    genericNumber: genericNumber, 
    genericInt: genericInt, 
    genericString: genericString, 
    genericBool: genericBool, 
    genericArray: genericArray, 
    genericTuple: genericTuple, 
    genericMaybe: genericMaybe, 
    genericEither: genericEither, 
    eqGeneric: eqGeneric, 
    ordGeneric: ordGeneric
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\Data.Generic\\foreign.js","Data.Array":"c:\\Development\\Web\\jundo\\output\\Data.Array\\index.js","Data.Either":"c:\\Development\\Web\\jundo\\output\\Data.Either\\index.js","Data.Foldable":"c:\\Development\\Web\\jundo\\output\\Data.Foldable\\index.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js","Data.String":"c:\\Development\\Web\\jundo\\output\\Data.String\\index.js","Data.Traversable":"c:\\Development\\Web\\jundo\\output\\Data.Traversable\\index.js","Data.Tuple":"c:\\Development\\Web\\jundo\\output\\Data.Tuple\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Identity\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Foldable = require("Data.Foldable");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Monoid = require("Data.Monoid");
var Data_Traversable = require("Data.Traversable");
var Identity = function (x) {
    return x;
};
var showIdentity = function (__dict_Show_2) {
    return new Prelude.Show(function (_549) {
        return "Identity (" + (Prelude.show(__dict_Show_2)(_549) + ")");
    });
};
var semiringIdentity = function (__dict_Semiring_3) {
    return new Prelude.Semiring(function (_539) {
        return function (_540) {
            return Prelude["+"](__dict_Semiring_3)(_539)(_540);
        };
    }, function (_541) {
        return function (_542) {
            return Prelude["*"](__dict_Semiring_3)(_541)(_542);
        };
    }, Prelude.one(__dict_Semiring_3), Prelude.zero(__dict_Semiring_3));
};
var semigroupIdenity = function (__dict_Semigroup_4) {
    return new Prelude.Semigroup(function (_537) {
        return function (_538) {
            return Prelude["<>"](__dict_Semigroup_4)(_537)(_538);
        };
    });
};
var runIdentity = function (_527) {
    return _527;
};
var ringIdentity = function (__dict_Ring_5) {
    return new Prelude.Ring(function () {
        return semiringIdentity(__dict_Ring_5["__superclass_Prelude.Semiring_0"]());
    }, function (_547) {
        return function (_548) {
            return Prelude["-"](__dict_Ring_5)(_547)(_548);
        };
    });
};
var monoidIdentity = function (__dict_Monoid_8) {
    return new Data_Monoid.Monoid(function () {
        return semigroupIdenity(__dict_Monoid_8["__superclass_Prelude.Semigroup_0"]());
    }, Data_Monoid.mempty(__dict_Monoid_8));
};
var moduloSemiringIdentity = function (__dict_ModuloSemiring_9) {
    return new Prelude.ModuloSemiring(function () {
        return semiringIdentity(__dict_ModuloSemiring_9["__superclass_Prelude.Semiring_0"]());
    }, function (_545) {
        return function (_546) {
            return Prelude["/"](__dict_ModuloSemiring_9)(_545)(_546);
        };
    }, function (_543) {
        return function (_544) {
            return Prelude.mod(__dict_ModuloSemiring_9)(_543)(_544);
        };
    });
};
var functorIdentity = new Prelude.Functor(function (f) {
    return function (_550) {
        return f(_550);
    };
});
var invariantIdentity = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorIdentity));
var foldableIdentity = new Data_Foldable.Foldable(function (__dict_Monoid_10) {
    return function (f) {
        return function (_557) {
            return f(_557);
        };
    };
}, function (f) {
    return function (z) {
        return function (_556) {
            return f(z)(_556);
        };
    };
}, function (f) {
    return function (z) {
        return function (_555) {
            return f(_555)(z);
        };
    };
});
var traversableIdentity = new Data_Traversable.Traversable(function () {
    return foldableIdentity;
}, function () {
    return functorIdentity;
}, function (__dict_Applicative_1) {
    return function (_559) {
        return Prelude["<$>"]((__dict_Applicative_1["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Identity)(_559);
    };
}, function (__dict_Applicative_0) {
    return function (f) {
        return function (_558) {
            return Prelude["<$>"]((__dict_Applicative_0["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Identity)(f(_558));
        };
    };
});
var extendIdentity = new Control_Extend.Extend(function () {
    return functorIdentity;
}, function (f) {
    return function (m) {
        return f(m);
    };
});
var eqIdentity = function (__dict_Eq_11) {
    return new Prelude.Eq(function (_528) {
        return function (_529) {
            return Prelude["=="](__dict_Eq_11)(_528)(_529);
        };
    });
};
var ordIdentity = function (__dict_Ord_6) {
    return new Prelude.Ord(function () {
        return eqIdentity(__dict_Ord_6["__superclass_Prelude.Eq_0"]());
    }, function (_530) {
        return function (_531) {
            return Prelude.compare(__dict_Ord_6)(_530)(_531);
        };
    });
};
var divisionRingIdentity = function (__dict_DivisionRing_12) {
    return new Prelude.DivisionRing(function () {
        return moduloSemiringIdentity(__dict_DivisionRing_12["__superclass_Prelude.ModuloSemiring_1"]());
    }, function () {
        return ringIdentity(__dict_DivisionRing_12["__superclass_Prelude.Ring_0"]());
    });
};
var numIdentity = function (__dict_Num_7) {
    return new Prelude.Num(function () {
        return divisionRingIdentity(__dict_Num_7["__superclass_Prelude.DivisionRing_0"]());
    });
};
var comonadIdentity = new Control_Comonad.Comonad(function () {
    return extendIdentity;
}, function (_554) {
    return _554;
});
var boundedIdentity = function (__dict_Bounded_14) {
    return new Prelude.Bounded(Prelude.bottom(__dict_Bounded_14), Prelude.top(__dict_Bounded_14));
};
var boundedOrdIdentity = function (__dict_BoundedOrd_13) {
    return new Prelude.BoundedOrd(function () {
        return boundedIdentity(__dict_BoundedOrd_13["__superclass_Prelude.Bounded_0"]());
    }, function () {
        return ordIdentity(__dict_BoundedOrd_13["__superclass_Prelude.Ord_1"]());
    });
};
var booleanAlgebraIdentity = function (__dict_BooleanAlgebra_15) {
    return new Prelude.BooleanAlgebra(function () {
        return boundedIdentity(__dict_BooleanAlgebra_15["__superclass_Prelude.Bounded_0"]());
    }, function (_532) {
        return function (_533) {
            return Prelude.conj(__dict_BooleanAlgebra_15)(_532)(_533);
        };
    }, function (_534) {
        return function (_535) {
            return Prelude.disj(__dict_BooleanAlgebra_15)(_534)(_535);
        };
    }, function (_536) {
        return Prelude.not(__dict_BooleanAlgebra_15)(_536);
    });
};
var applyIdentity = new Prelude.Apply(function () {
    return functorIdentity;
}, function (_551) {
    return function (_552) {
        return _551(_552);
    };
});
var bindIdentity = new Prelude.Bind(function () {
    return applyIdentity;
}, function (_553) {
    return function (f) {
        return f(_553);
    };
});
var applicativeIdentity = new Prelude.Applicative(function () {
    return applyIdentity;
}, Identity);
var monadIdentity = new Prelude.Monad(function () {
    return applicativeIdentity;
}, function () {
    return bindIdentity;
});
module.exports = {
    Identity: Identity, 
    runIdentity: runIdentity, 
    eqIdentity: eqIdentity, 
    ordIdentity: ordIdentity, 
    boundedIdentity: boundedIdentity, 
    boundedOrdIdentity: boundedOrdIdentity, 
    booleanAlgebraIdentity: booleanAlgebraIdentity, 
    semigroupIdenity: semigroupIdenity, 
    monoidIdentity: monoidIdentity, 
    semiringIdentity: semiringIdentity, 
    moduloSemiringIdentity: moduloSemiringIdentity, 
    ringIdentity: ringIdentity, 
    divisionRingIdentity: divisionRingIdentity, 
    numIdentity: numIdentity, 
    showIdentity: showIdentity, 
    functorIdentity: functorIdentity, 
    invariantIdentity: invariantIdentity, 
    applyIdentity: applyIdentity, 
    applicativeIdentity: applicativeIdentity, 
    bindIdentity: bindIdentity, 
    monadIdentity: monadIdentity, 
    extendIdentity: extendIdentity, 
    comonadIdentity: comonadIdentity, 
    foldableIdentity: foldableIdentity, 
    traversableIdentity: traversableIdentity
};

},{"Control.Comonad":"c:\\Development\\Web\\jundo\\output\\Control.Comonad\\index.js","Control.Extend":"c:\\Development\\Web\\jundo\\output\\Control.Extend\\index.js","Data.Foldable":"c:\\Development\\Web\\jundo\\output\\Data.Foldable\\index.js","Data.Functor.Invariant":"c:\\Development\\Web\\jundo\\output\\Data.Functor.Invariant\\index.js","Data.Monoid":"c:\\Development\\Web\\jundo\\output\\Data.Monoid\\index.js","Data.Traversable":"c:\\Development\\Web\\jundo\\output\\Data.Traversable\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Inject\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Data_Either = require("Data.Either");
var Data_Functor_Coproduct = require("Data.Functor.Coproduct");
var Data_Maybe = require("Data.Maybe");
var Inject = function (inj, prj) {
    this.inj = inj;
    this.prj = prj;
};
var prj = function (dict) {
    return dict.prj;
};
var injectReflexive = new Inject(Prelude.id(Prelude.categoryFn), Data_Maybe.Just.create);
var injectLeft = new Inject(function (_1734) {
    return Data_Functor_Coproduct.Coproduct(Data_Either.Left.create(_1734));
}, Data_Functor_Coproduct.coproduct(Data_Maybe.Just.create)(Prelude["const"](Data_Maybe.Nothing.value)));
var inj = function (dict) {
    return dict.inj;
};
var injectRight = function (__dict_Inject_0) {
    return new Inject(function (_1735) {
        return Data_Functor_Coproduct.Coproduct(Data_Either.Right.create(inj(__dict_Inject_0)(_1735)));
    }, Data_Functor_Coproduct.coproduct(Prelude["const"](Data_Maybe.Nothing.value))(prj(__dict_Inject_0)));
};
module.exports = {
    Inject: Inject, 
    prj: prj, 
    inj: inj, 
    injectReflexive: injectReflexive, 
    injectLeft: injectLeft, 
    injectRight: injectRight
};

},{"Data.Either":"c:\\Development\\Web\\jundo\\output\\Data.Either\\index.js","Data.Functor.Coproduct":"c:\\Development\\Web\\jundo\\output\\Data.Functor.Coproduct\\index.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Int.Bits\\foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Int.Bits

exports.andImpl = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 & n2;
  };
};

exports.orImpl = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 | n2;
  };
};

exports.xorImpl = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 ^ n2;
  };
};

exports.shl = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 << n2;
  };
};

exports.shr = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 >> n2;
  };
};

exports.zshr = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 >>> n2;
  };
};

exports.complement = function (n) {
  /* jshint bitwise: false */
  return ~n;
};

},{}],"c:\\Development\\Web\\jundo\\output\\Data.Int.Bits\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var $dot$bar$dot = $foreign.orImpl;
var $dot$up$dot = $foreign.xorImpl;
var $dot$amp$dot = $foreign.andImpl;
module.exports = {
    ".^.": $dot$up$dot, 
    ".|.": $dot$bar$dot, 
    ".&.": $dot$amp$dot, 
    complement: $foreign.complement, 
    zshr: $foreign.zshr, 
    shr: $foreign.shr, 
    shl: $foreign.shl
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\Data.Int.Bits\\foreign.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Int\\foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Int

exports.fromNumberImpl = function (just) {
  return function (nothing) {
    return function (n) {
      /* jshint bitwise: false */
      return (n | 0) === n ? just(n) : nothing;
    };
  };
};

exports.toNumber = function (n) {
  return n;
};

exports.fromStringImpl = function (just) {
  return function (nothing) {
    return function (s) {
      /* jshint bitwise: false */
      var i = parseFloat(s);
      return (i | 0) === i ? just(i) : nothing;
    };
  };
};

},{}],"c:\\Development\\Web\\jundo\\output\\Data.Int\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Int_Bits = require("Data.Int.Bits");
var Data_Maybe = require("Data.Maybe");
var Data_Maybe_Unsafe = require("Data.Maybe.Unsafe");
var $$Math = require("Math");
var odd = function (x) {
    return (x & 1) !== 0;
};
var fromString = $foreign.fromStringImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var unsafeClamp = function (x) {
    if (x >= $foreign.toNumber(Prelude.top(Prelude.boundedInt))) {
        return Prelude.top(Prelude.boundedInt);
    };
    if (x <= $foreign.toNumber(Prelude.bottom(Prelude.boundedInt))) {
        return Prelude.bottom(Prelude.boundedInt);
    };
    if (Prelude.otherwise) {
        return Data_Maybe_Unsafe.fromJust(fromNumber(x));
    };
    throw new Error("Failed pattern match at Data.Int line 48, column 1 - line 49, column 1: " + [ x.constructor.name ]);
};
var round = function (_1510) {
    return unsafeClamp($$Math.round(_1510));
};
var floor = function (_1511) {
    return unsafeClamp($$Math.floor(_1511));
};
var even = function (x) {
    return (x & 1) === 0;
};
var ceil = function (_1512) {
    return unsafeClamp($$Math.ceil(_1512));
};
module.exports = {
    odd: odd, 
    even: even, 
    fromString: fromString, 
    round: round, 
    floor: floor, 
    ceil: ceil, 
    fromNumber: fromNumber, 
    toNumber: $foreign.toNumber
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\Data.Int\\foreign.js","Data.Int.Bits":"c:\\Development\\Web\\jundo\\output\\Data.Int.Bits\\index.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js","Data.Maybe.Unsafe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe.Unsafe\\index.js","Math":"c:\\Development\\Web\\jundo\\output\\Math\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.List\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Tuple = require("Data.Tuple");
var Data_Monoid = require("Data.Monoid");
var Data_Foldable = require("Data.Foldable");
var Data_Unfoldable = require("Data.Unfoldable");
var Data_Traversable = require("Data.Traversable");
var Control_Alt = require("Control.Alt");
var Control_Lazy = require("Control.Lazy");
var Control_Plus = require("Control.Plus");
var Control_Alternative = require("Control.Alternative");
var Control_MonadPlus = require("Control.MonadPlus");
var Nil = (function () {
    function Nil() {

    };
    Nil.value = new Nil();
    return Nil;
})();
var Cons = (function () {
    function Cons(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Cons.create = function (value0) {
        return function (value1) {
            return new Cons(value0, value1);
        };
    };
    return Cons;
})();
var $colon = Cons.create;
var updateAt = function (_872) {
    return function (x) {
        return function (_873) {
            if (_872 === 0 && _873 instanceof Cons) {
                return new Data_Maybe.Just(new Cons(x, _873.value1));
            };
            if (_873 instanceof Cons) {
                return Prelude["<$>"](Data_Maybe.functorMaybe)(Cons.create(_873.value0))(updateAt(_872 - 1)(x)(_873.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var unfoldableList = new Data_Unfoldable.Unfoldable(function (f) {
    return function (b) {
        var go = function (_915) {
            if (_915 instanceof Data_Maybe.Nothing) {
                return Nil.value;
            };
            if (_915 instanceof Data_Maybe.Just) {
                return new Cons(_915.value0.value0, go(f(_915.value0.value1)));
            };
            throw new Error("Failed pattern match at Data.List line 734, column 1 - line 740, column 1: " + [ _915.constructor.name ]);
        };
        return go(f(b));
    };
});
var uncons = function (_865) {
    if (_865 instanceof Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (_865 instanceof Cons) {
        return new Data_Maybe.Just({
            head: _865.value0, 
            tail: _865.value1
        });
    };
    throw new Error("Failed pattern match at Data.List line 266, column 1 - line 267, column 1: " + [ _865.constructor.name ]);
};
var toList = function (__dict_Foldable_2) {
    return Data_Foldable.foldr(__dict_Foldable_2)(Cons.create)(Nil.value);
};
var tail = function (_863) {
    if (_863 instanceof Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (_863 instanceof Cons) {
        return new Data_Maybe.Just(_863.value1);
    };
    throw new Error("Failed pattern match at Data.List line 248, column 1 - line 249, column 1: " + [ _863.constructor.name ]);
};
var span = function (p) {
    return function (_880) {
        if (_880 instanceof Cons && p(_880.value0)) {
            var _3159 = span(p)(_880.value1);
            return {
                init: new Cons(_880.value0, _3159.init), 
                rest: _3159.rest
            };
        };
        return {
            init: Nil.value, 
            rest: _880
        };
    };
};
var singleton = function (a) {
    return new Cons(a, Nil.value);
};
var sortBy = function (cmp) {
    var merge = function (_897) {
        return function (_898) {
            if (_897 instanceof Cons && _898 instanceof Cons) {
                if (Prelude["=="](Prelude.eqOrdering)(cmp(_897.value0)(_898.value0))(Prelude.GT.value)) {
                    return new Cons(_898.value0, merge(_897)(_898.value1));
                };
                if (Prelude.otherwise) {
                    return new Cons(_897.value0, merge(_897.value1)(_898));
                };
            };
            if (_897 instanceof Nil) {
                return _898;
            };
            if (_898 instanceof Nil) {
                return _897;
            };
            throw new Error("Failed pattern match at Data.List line 440, column 1 - line 441, column 1: " + [ _897.constructor.name, _898.constructor.name ]);
        };
    };
    var mergePairs = function (_896) {
        if (_896 instanceof Cons && _896.value1 instanceof Cons) {
            return new Cons(merge(_896.value0)(_896.value1.value0), mergePairs(_896.value1.value1));
        };
        return _896;
    };
    var mergeAll = function (__copy__895) {
        var _895 = __copy__895;
        tco: while (true) {
            if (_895 instanceof Cons && _895.value1 instanceof Nil) {
                return _895.value0;
            };
            var __tco__895 = mergePairs(_895);
            _895 = __tco__895;
            continue tco;
        };
    };
    var sequences = function (_892) {
        if (_892 instanceof Cons && _892.value1 instanceof Cons) {
            if (Prelude["=="](Prelude.eqOrdering)(cmp(_892.value0)(_892.value1.value0))(Prelude.GT.value)) {
                return descending(_892.value1.value0)(singleton(_892.value0))(_892.value1.value1);
            };
            if (Prelude.otherwise) {
                return ascending(_892.value1.value0)(Cons.create(_892.value0))(_892.value1.value1);
            };
        };
        return singleton(_892);
    };
    var descending = function (__copy_a) {
        return function (__copy_as) {
            return function (__copy__893) {
                var a = __copy_a;
                var as = __copy_as;
                var _893 = __copy__893;
                tco: while (true) {
                    var a_1 = a;
                    var as_1 = as;
                    if (_893 instanceof Cons && Prelude["=="](Prelude.eqOrdering)(cmp(a_1)(_893.value0))(Prelude.GT.value)) {
                        var __tco_a = _893.value0;
                        var __tco_as = new Cons(a_1, as_1);
                        var __tco__893 = _893.value1;
                        a = __tco_a;
                        as = __tco_as;
                        _893 = __tco__893;
                        continue tco;
                    };
                    return new Cons(new Cons(a, as), sequences(_893));
                };
            };
        };
    };
    var ascending = function (a) {
        return function (as) {
            return function (_894) {
                if (_894 instanceof Cons && Prelude["/="](Prelude.eqOrdering)(cmp(a)(_894.value0))(Prelude.GT.value)) {
                    return ascending(_894.value0)(function (ys) {
                        return as(new Cons(a, ys));
                    })(_894.value1);
                };
                return new Cons(as(singleton(a)), sequences(_894));
            };
        };
    };
    return function (_3386) {
        return mergeAll(sequences(_3386));
    };
};
var sort = function (__dict_Ord_3) {
    return function (xs) {
        return sortBy(Prelude.compare(__dict_Ord_3))(xs);
    };
};
var showList = function (__dict_Show_4) {
    return new Prelude.Show(function (_905) {
        if (_905 instanceof Nil) {
            return "Nil";
        };
        if (_905 instanceof Cons) {
            return "Cons (" + (Prelude.show(__dict_Show_4)(_905.value0) + (") (" + (Prelude.show(showList(__dict_Show_4))(_905.value1) + ")")));
        };
        throw new Error("Failed pattern match: " + [ _905.constructor.name ]);
    });
};
var semigroupList = new Prelude.Semigroup(function (_911) {
    return function (ys) {
        if (_911 instanceof Nil) {
            return ys;
        };
        if (_911 instanceof Cons) {
            return new Cons(_911.value0, Prelude["<>"](semigroupList)(_911.value1)(ys));
        };
        throw new Error("Failed pattern match: " + [ _911.constructor.name, ys.constructor.name ]);
    };
});
var reverse = (function () {
    var go = function (__copy_acc) {
        return function (__copy__889) {
            var acc = __copy_acc;
            var _889 = __copy__889;
            tco: while (true) {
                var acc_1 = acc;
                if (_889 instanceof Nil) {
                    return acc_1;
                };
                if (_889 instanceof Cons) {
                    var __tco_acc = new Cons(_889.value0, acc);
                    var __tco__889 = _889.value1;
                    acc = __tco_acc;
                    _889 = __tco__889;
                    continue tco;
                };
                throw new Error("Failed pattern match at Data.List line 364, column 1 - line 365, column 1: " + [ acc.constructor.name, _889.constructor.name ]);
            };
        };
    };
    return go(Nil.value);
})();
var snoc = function (xs) {
    return function (x) {
        return reverse(new Cons(x, reverse(xs)));
    };
};
var take = (function () {
    var go = function (__copy_acc) {
        return function (__copy__899) {
            return function (__copy__900) {
                var acc = __copy_acc;
                var _899 = __copy__899;
                var _900 = __copy__900;
                tco: while (true) {
                    var acc_1 = acc;
                    if (_899 === 0) {
                        return reverse(acc_1);
                    };
                    var acc_1 = acc;
                    if (_900 instanceof Nil) {
                        return reverse(acc_1);
                    };
                    if (_900 instanceof Cons) {
                        var __tco_acc = new Cons(_900.value0, acc);
                        var __tco__899 = _899 - 1;
                        var __tco__900 = _900.value1;
                        acc = __tco_acc;
                        _899 = __tco__899;
                        _900 = __tco__900;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at Data.List line 486, column 1 - line 487, column 1: " + [ acc.constructor.name, _899.constructor.name, _900.constructor.name ]);
                };
            };
        };
    };
    return go(Nil.value);
})();
var takeWhile = function (p) {
    var go = function (__copy_acc) {
        return function (__copy__901) {
            var acc = __copy_acc;
            var _901 = __copy__901;
            tco: while (true) {
                var acc_1 = acc;
                if (_901 instanceof Cons && p(_901.value0)) {
                    var __tco_acc = new Cons(_901.value0, acc_1);
                    var __tco__901 = _901.value1;
                    acc = __tco_acc;
                    _901 = __tco__901;
                    continue tco;
                };
                return reverse(acc);
            };
        };
    };
    return go(Nil.value);
};
var zipWith = function (f) {
    return function (xs) {
        return function (ys) {
            var go = function (__copy__903) {
                return function (__copy__904) {
                    return function (__copy_acc) {
                        var _903 = __copy__903;
                        var _904 = __copy__904;
                        var acc = __copy_acc;
                        tco: while (true) {
                            if (_903 instanceof Nil) {
                                return acc;
                            };
                            if (_904 instanceof Nil) {
                                return acc;
                            };
                            if (_903 instanceof Cons && _904 instanceof Cons) {
                                var __tco__903 = _903.value1;
                                var __tco__904 = _904.value1;
                                var __tco_acc = new Cons(f(_903.value0)(_904.value0), acc);
                                _903 = __tco__903;
                                _904 = __tco__904;
                                acc = __tco_acc;
                                continue tco;
                            };
                            throw new Error("Failed pattern match at Data.List line 650, column 1 - line 651, column 1: " + [ _903.constructor.name, _904.constructor.name, acc.constructor.name ]);
                        };
                    };
                };
            };
            return reverse(go(xs)(ys)(Nil.value));
        };
    };
};
var zip = zipWith(Data_Tuple.Tuple.create);
var replicateM = function (__dict_Monad_6) {
    return function (n) {
        return function (m) {
            if (n < 1) {
                return Prelude["return"](__dict_Monad_6["__superclass_Prelude.Applicative_0"]())(Nil.value);
            };
            if (Prelude.otherwise) {
                return Prelude.bind(__dict_Monad_6["__superclass_Prelude.Bind_1"]())(m)(function (_60) {
                    return Prelude.bind(__dict_Monad_6["__superclass_Prelude.Bind_1"]())(replicateM(__dict_Monad_6)(n - 1)(m))(function (_59) {
                        return Prelude["return"](__dict_Monad_6["__superclass_Prelude.Applicative_0"]())(new Cons(_60, _59));
                    });
                });
            };
            throw new Error("Failed pattern match: " + [ n.constructor.name, m.constructor.name ]);
        };
    };
};
var replicate = function (n) {
    return function (value) {
        var go = function (__copy_n_1) {
            return function (__copy_rest) {
                var n_1 = __copy_n_1;
                var rest = __copy_rest;
                tco: while (true) {
                    if (n_1 <= 0) {
                        return rest;
                    };
                    if (Prelude.otherwise) {
                        var __tco_n_1 = n_1 - 1;
                        var __tco_rest = new Cons(value, rest);
                        n_1 = __tco_n_1;
                        rest = __tco_rest;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at Data.List line 145, column 1 - line 146, column 1: " + [ n_1.constructor.name, rest.constructor.name ]);
                };
            };
        };
        return go(n)(Nil.value);
    };
};
var range = function (start) {
    return function (end) {
        if (start === end) {
            return singleton(start);
        };
        if (Prelude.otherwise) {
            var go = function (__copy_s) {
                return function (__copy_e) {
                    return function (__copy_step) {
                        return function (__copy_rest) {
                            var s = __copy_s;
                            var e = __copy_e;
                            var step = __copy_step;
                            var rest = __copy_rest;
                            tco: while (true) {
                                if (s === e) {
                                    return new Cons(s, rest);
                                };
                                if (Prelude.otherwise) {
                                    var __tco_s = s + step | 0;
                                    var __tco_e = e;
                                    var __tco_step = step;
                                    var __tco_rest = new Cons(s, rest);
                                    s = __tco_s;
                                    e = __tco_e;
                                    step = __tco_step;
                                    rest = __tco_rest;
                                    continue tco;
                                };
                                throw new Error("Failed pattern match at Data.List line 137, column 1 - line 138, column 1: " + [ s.constructor.name, e.constructor.name, step.constructor.name, rest.constructor.name ]);
                            };
                        };
                    };
                };
            };
            return go(end)(start)((function () {
                var _3232 = start > end;
                if (_3232) {
                    return 1;
                };
                if (!_3232) {
                    return -1;
                };
                throw new Error("Failed pattern match at Data.List line 137, column 1 - line 138, column 1: " + [ _3232.constructor.name ]);
            })())(Nil.value);
        };
        throw new Error("Failed pattern match at Data.List line 137, column 1 - line 138, column 1: " + [ start.constructor.name, end.constructor.name ]);
    };
};
var $dot$dot = range;
var $$null = function (_859) {
    if (_859 instanceof Nil) {
        return true;
    };
    return false;
};
var monoidList = new Data_Monoid.Monoid(function () {
    return semigroupList;
}, Nil.value);
var mapMaybe = function (f) {
    var go = function (__copy_acc) {
        return function (__copy__891) {
            var acc = __copy_acc;
            var _891 = __copy__891;
            tco: while (true) {
                var acc_1 = acc;
                if (_891 instanceof Nil) {
                    return reverse(acc_1);
                };
                if (_891 instanceof Cons) {
                    var _3236 = f(_891.value0);
                    if (_3236 instanceof Data_Maybe.Nothing) {
                        var __tco_acc = acc;
                        var __tco__891 = _891.value1;
                        acc = __tco_acc;
                        _891 = __tco__891;
                        continue tco;
                    };
                    if (_3236 instanceof Data_Maybe.Just) {
                        var __tco_acc = new Cons(_3236.value0, acc);
                        var __tco__891 = _891.value1;
                        acc = __tco_acc;
                        _891 = __tco__891;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at Data.List line 416, column 1 - line 417, column 1: " + [ _3236.constructor.name ]);
                };
                throw new Error("Failed pattern match at Data.List line 416, column 1 - line 417, column 1: " + [ acc.constructor.name, _891.constructor.name ]);
            };
        };
    };
    return go(Nil.value);
};
var some = function (__dict_Alternative_8) {
    return function (__dict_Lazy_9) {
        return function (v) {
            return Prelude["<*>"]((__dict_Alternative_8["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](((__dict_Alternative_8["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())(Cons.create)(v))(Control_Lazy.defer(__dict_Lazy_9)(function (_855) {
                return many(__dict_Alternative_8)(__dict_Lazy_9)(v);
            }));
        };
    };
};
var many = function (__dict_Alternative_10) {
    return function (__dict_Lazy_11) {
        return function (v) {
            return Control_Alt["<|>"]((__dict_Alternative_10["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(__dict_Alternative_10)(__dict_Lazy_11)(v))(Prelude.pure(__dict_Alternative_10["__superclass_Prelude.Applicative_0"]())(Nil.value));
        };
    };
};
var last = function (__copy__862) {
    var _862 = __copy__862;
    tco: while (true) {
        if (_862 instanceof Cons && _862.value1 instanceof Nil) {
            return new Data_Maybe.Just(_862.value0);
        };
        if (_862 instanceof Cons) {
            var __tco__862 = _862.value1;
            _862 = __tco__862;
            continue tco;
        };
        return Data_Maybe.Nothing.value;
    };
};
var insertBy = function (cmp) {
    return function (x) {
        return function (_860) {
            if (_860 instanceof Nil) {
                return new Cons(x, Nil.value);
            };
            if (_860 instanceof Cons) {
                var _3249 = cmp(x)(_860.value0);
                if (_3249 instanceof Prelude.GT) {
                    return new Cons(_860.value0, insertBy(cmp)(x)(_860.value1));
                };
                return new Cons(x, _860);
            };
            throw new Error("Failed pattern match: " + [ cmp.constructor.name, x.constructor.name, _860.constructor.name ]);
        };
    };
};
var insertAt = function (_868) {
    return function (x) {
        return function (_869) {
            if (_868 === 0) {
                return new Data_Maybe.Just(new Cons(x, _869));
            };
            if (_869 instanceof Cons) {
                return Prelude["<$>"](Data_Maybe.functorMaybe)(Cons.create(_869.value0))(insertAt(_868 - 1)(x)(_869.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var insert = function (__dict_Ord_12) {
    return insertBy(Prelude.compare(__dict_Ord_12));
};
var init = function (_864) {
    if (_864 instanceof Nil) {
        return Data_Maybe.Nothing.value;
    };
    var go = function (__copy__887) {
        return function (__copy_acc) {
            var _887 = __copy__887;
            var acc = __copy_acc;
            tco: while (true) {
                if (_887 instanceof Cons && _887.value1 instanceof Nil) {
                    return acc;
                };
                if (_887 instanceof Cons) {
                    var __tco__887 = _887.value1;
                    var __tco_acc = new Cons(_887.value0, acc);
                    _887 = __tco__887;
                    acc = __tco_acc;
                    continue tco;
                };
                throw new Error("Failed pattern match at Data.List line 255, column 1 - line 256, column 1: " + [ _887.constructor.name, acc.constructor.name ]);
            };
        };
    };
    return Data_Maybe.Just.create(reverse(go(_864)(Nil.value)));
};
var index = function (__copy__866) {
    return function (__copy__867) {
        var _866 = __copy__866;
        var _867 = __copy__867;
        tco: while (true) {
            if (_866 instanceof Nil) {
                return Data_Maybe.Nothing.value;
            };
            if (_866 instanceof Cons && _867 === 0) {
                return new Data_Maybe.Just(_866.value0);
            };
            if (_866 instanceof Cons) {
                var __tco__866 = _866.value1;
                var __tco__867 = _867 - 1;
                _866 = __tco__866;
                _867 = __tco__867;
                continue tco;
            };
            throw new Error("Failed pattern match: " + [ _866.constructor.name, _867.constructor.name ]);
        };
    };
};
var $bang$bang = index;
var head = function (_861) {
    if (_861 instanceof Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (_861 instanceof Cons) {
        return new Data_Maybe.Just(_861.value0);
    };
    throw new Error("Failed pattern match at Data.List line 233, column 1 - line 234, column 1: " + [ _861.constructor.name ]);
};
var groupBy = function (eq) {
    return function (_881) {
        if (_881 instanceof Nil) {
            return Nil.value;
        };
        if (_881 instanceof Cons) {
            var _3275 = span(eq(_881.value0))(_881.value1);
            return new Cons(new Cons(_881.value0, _3275.init), groupBy(eq)(_3275.rest));
        };
        throw new Error("Failed pattern match: " + [ eq.constructor.name, _881.constructor.name ]);
    };
};
var group = function (__dict_Eq_13) {
    return groupBy(Prelude["=="](__dict_Eq_13));
};
var group$prime = function (__dict_Ord_14) {
    return function (_3387) {
        return group(__dict_Ord_14["__superclass_Prelude.Eq_0"]())(sort(__dict_Ord_14)(_3387));
    };
};
var functorList = new Prelude.Functor(function (f) {
    return function (lst) {
        var go = function (__copy__912) {
            return function (__copy_acc) {
                var _912 = __copy__912;
                var acc = __copy_acc;
                tco: while (true) {
                    if (_912 instanceof Nil) {
                        return acc;
                    };
                    if (_912 instanceof Cons) {
                        var __tco__912 = _912.value1;
                        var __tco_acc = new Cons(f(_912.value0), acc);
                        _912 = __tco__912;
                        acc = __tco_acc;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at Data.List line 717, column 1 - line 724, column 1: " + [ _912.constructor.name, acc.constructor.name ]);
                };
            };
        };
        return reverse(go(lst)(Nil.value));
    };
});
var fromList = function (__dict_Unfoldable_15) {
    return Data_Unfoldable.unfoldr(__dict_Unfoldable_15)(function (xs) {
        return Prelude["<$>"](Data_Maybe.functorMaybe)(function (rec) {
            return new Data_Tuple.Tuple(rec.head, rec.tail);
        })(uncons(xs));
    });
};
var foldableList = new Data_Foldable.Foldable(function (__dict_Monoid_16) {
    return function (f) {
        return Data_Foldable.foldl(foldableList)(function (acc) {
            return function (_3388) {
                return Prelude.append(__dict_Monoid_16["__superclass_Prelude.Semigroup_0"]())(acc)(f(_3388));
            };
        })(Data_Monoid.mempty(__dict_Monoid_16));
    };
}, (function () {
    var go = function (__copy_o) {
        return function (__copy_b) {
            return function (__copy__914) {
                var o = __copy_o;
                var b = __copy_b;
                var _914 = __copy__914;
                tco: while (true) {
                    var b_1 = b;
                    if (_914 instanceof Nil) {
                        return b_1;
                    };
                    if (_914 instanceof Cons) {
                        var __tco_o = o;
                        var __tco_b = o(b)(_914.value0);
                        var __tco__914 = _914.value1;
                        o = __tco_o;
                        b = __tco_b;
                        _914 = __tco__914;
                        continue tco;
                    };
                    throw new Error("Failed pattern match: " + [ o.constructor.name, b.constructor.name, _914.constructor.name ]);
                };
            };
        };
    };
    return go;
})(), function (o) {
    return function (b) {
        return function (_913) {
            if (_913 instanceof Nil) {
                return b;
            };
            if (_913 instanceof Cons) {
                return o(_913.value0)(Data_Foldable.foldr(foldableList)(o)(b)(_913.value1));
            };
            throw new Error("Failed pattern match: " + [ o.constructor.name, b.constructor.name, _913.constructor.name ]);
        };
    };
});
var length = Data_Foldable.foldl(foldableList)(function (acc) {
    return function (_856) {
        return acc + 1 | 0;
    };
})(0);
var traversableList = new Data_Traversable.Traversable(function () {
    return foldableList;
}, function () {
    return functorList;
}, function (__dict_Applicative_1) {
    return function (_917) {
        if (_917 instanceof Nil) {
            return Prelude.pure(__dict_Applicative_1)(Nil.value);
        };
        if (_917 instanceof Cons) {
            return Prelude["<*>"](__dict_Applicative_1["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_1["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Cons.create)(_917.value0))(Data_Traversable.sequence(traversableList)(__dict_Applicative_1)(_917.value1));
        };
        throw new Error("Failed pattern match: " + [ _917.constructor.name ]);
    };
}, function (__dict_Applicative_0) {
    return function (f) {
        return function (_916) {
            if (_916 instanceof Nil) {
                return Prelude.pure(__dict_Applicative_0)(Nil.value);
            };
            if (_916 instanceof Cons) {
                return Prelude["<*>"](__dict_Applicative_0["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_0["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Cons.create)(f(_916.value0)))(Data_Traversable.traverse(traversableList)(__dict_Applicative_0)(f)(_916.value1));
            };
            throw new Error("Failed pattern match: " + [ f.constructor.name, _916.constructor.name ]);
        };
    };
});
var zipWithA = function (__dict_Applicative_5) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return Data_Traversable.sequence(traversableList)(__dict_Applicative_5)(zipWith(f)(xs)(ys));
            };
        };
    };
};
var unzip = Data_Foldable.foldr(foldableList)(function (_858) {
    return function (_857) {
        return new Data_Tuple.Tuple(new Cons(_858.value0, _857.value0), new Cons(_858.value1, _857.value1));
    };
})(new Data_Tuple.Tuple(Nil.value, Nil.value));
var foldM = function (__dict_Monad_17) {
    return function (f) {
        return function (a) {
            return function (_886) {
                if (_886 instanceof Nil) {
                    return Prelude["return"](__dict_Monad_17["__superclass_Prelude.Applicative_0"]())(a);
                };
                if (_886 instanceof Cons) {
                    return Prelude[">>="](__dict_Monad_17["__superclass_Prelude.Bind_1"]())(f(a)(_886.value0))(function (a$prime) {
                        return foldM(__dict_Monad_17)(f)(a$prime)(_886.value1);
                    });
                };
                throw new Error("Failed pattern match: " + [ f.constructor.name, a.constructor.name, _886.constructor.name ]);
            };
        };
    };
};
var findIndex = function (fn) {
    var go = function (__copy_n) {
        return function (__copy__888) {
            var n = __copy_n;
            var _888 = __copy__888;
            tco: while (true) {
                if (_888 instanceof Cons) {
                    if (fn(_888.value0)) {
                        return new Data_Maybe.Just(n);
                    };
                    if (Prelude.otherwise) {
                        var __tco_n = n + 1 | 0;
                        var __tco__888 = _888.value1;
                        n = __tco_n;
                        _888 = __tco__888;
                        continue tco;
                    };
                };
                if (_888 instanceof Nil) {
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match at Data.List line 297, column 1 - line 298, column 1: " + [ n.constructor.name, _888.constructor.name ]);
            };
        };
    };
    return go(0);
};
var findLastIndex = function (fn) {
    return function (xs) {
        return Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude["-"](Prelude.ringInt)(length(xs) - 1))(findIndex(fn)(reverse(xs)));
    };
};
var filterM = function (__dict_Monad_18) {
    return function (p) {
        return function (_877) {
            if (_877 instanceof Nil) {
                return Prelude["return"](__dict_Monad_18["__superclass_Prelude.Applicative_0"]())(Nil.value);
            };
            if (_877 instanceof Cons) {
                return Prelude.bind(__dict_Monad_18["__superclass_Prelude.Bind_1"]())(p(_877.value0))(function (_62) {
                    return Prelude.bind(__dict_Monad_18["__superclass_Prelude.Bind_1"]())(filterM(__dict_Monad_18)(p)(_877.value1))(function (_61) {
                        return Prelude["return"](__dict_Monad_18["__superclass_Prelude.Applicative_0"]())((function () {
                            if (_62) {
                                return new Cons(_877.value0, _61);
                            };
                            if (!_62) {
                                return _61;
                            };
                            throw new Error("Failed pattern match: " + [ _62.constructor.name ]);
                        })());
                    });
                });
            };
            throw new Error("Failed pattern match: " + [ p.constructor.name, _877.constructor.name ]);
        };
    };
};
var filter = function (p) {
    var go = function (__copy_acc) {
        return function (__copy__890) {
            var acc = __copy_acc;
            var _890 = __copy__890;
            tco: while (true) {
                var acc_1 = acc;
                if (_890 instanceof Nil) {
                    return reverse(acc_1);
                };
                if (_890 instanceof Cons) {
                    if (p(_890.value0)) {
                        var __tco_acc = new Cons(_890.value0, acc);
                        var __tco__890 = _890.value1;
                        acc = __tco_acc;
                        _890 = __tco__890;
                        continue tco;
                    };
                    if (Prelude.otherwise) {
                        var __tco_acc = acc;
                        var __tco__890 = _890.value1;
                        acc = __tco_acc;
                        _890 = __tco__890;
                        continue tco;
                    };
                };
                throw new Error("Failed pattern match at Data.List line 387, column 1 - line 388, column 1: " + [ acc.constructor.name, _890.constructor.name ]);
            };
        };
    };
    return go(Nil.value);
};
var intersectBy = function (eq) {
    return function (_884) {
        return function (_885) {
            if (_884 instanceof Nil) {
                return Nil.value;
            };
            if (_885 instanceof Nil) {
                return Nil.value;
            };
            return filter(function (x) {
                return Data_Foldable.any(foldableList)(Prelude.booleanAlgebraBoolean)(eq(x))(_885);
            })(_884);
        };
    };
};
var intersect = function (__dict_Eq_19) {
    return intersectBy(Prelude["=="](__dict_Eq_19));
};
var nubBy = function ($eq$eq) {
    return function (_882) {
        if (_882 instanceof Nil) {
            return Nil.value;
        };
        if (_882 instanceof Cons) {
            return new Cons(_882.value0, nubBy($eq$eq)(filter(function (y) {
                return !$eq$eq(_882.value0)(y);
            })(_882.value1)));
        };
        throw new Error("Failed pattern match: " + [ $eq$eq.constructor.name, _882.constructor.name ]);
    };
};
var nub = function (__dict_Eq_20) {
    return nubBy(Prelude["=="](__dict_Eq_20));
};
var eqList = function (__dict_Eq_21) {
    return new Prelude.Eq(function (xs) {
        return function (ys) {
            var go = function (__copy__906) {
                return function (__copy__907) {
                    return function (__copy__908) {
                        var _906 = __copy__906;
                        var _907 = __copy__907;
                        var _908 = __copy__908;
                        tco: while (true) {
                            if (!_908) {
                                return false;
                            };
                            if (_906 instanceof Nil && _907 instanceof Nil) {
                                return _908;
                            };
                            if (_906 instanceof Cons && _907 instanceof Cons) {
                                var __tco__906 = _906.value1;
                                var __tco__907 = _907.value1;
                                var __tco__908 = _908 && Prelude["=="](__dict_Eq_21)(_907.value0)(_906.value0);
                                _906 = __tco__906;
                                _907 = __tco__907;
                                _908 = __tco__908;
                                continue tco;
                            };
                            return false;
                        };
                    };
                };
            };
            return go(xs)(ys)(true);
        };
    });
};
var ordList = function (__dict_Ord_7) {
    return new Prelude.Ord(function () {
        return eqList(__dict_Ord_7["__superclass_Prelude.Eq_0"]());
    }, function (xs) {
        return function (ys) {
            var go = function (__copy__909) {
                return function (__copy__910) {
                    var _909 = __copy__909;
                    var _910 = __copy__910;
                    tco: while (true) {
                        if (_909 instanceof Nil && _910 instanceof Nil) {
                            return Prelude.EQ.value;
                        };
                        if (_909 instanceof Nil) {
                            return Prelude.LT.value;
                        };
                        if (_910 instanceof Nil) {
                            return Prelude.GT.value;
                        };
                        if (_909 instanceof Cons && _910 instanceof Cons) {
                            var _3344 = Prelude.compare(__dict_Ord_7)(_909.value0)(_910.value0);
                            if (_3344 instanceof Prelude.EQ) {
                                var __tco__909 = _909.value1;
                                var __tco__910 = _910.value1;
                                _909 = __tco__909;
                                _910 = __tco__910;
                                continue tco;
                            };
                            return _3344;
                        };
                        throw new Error("Failed pattern match at Data.List line 699, column 1 - line 710, column 1: " + [ _909.constructor.name, _910.constructor.name ]);
                    };
                };
            };
            return go(xs)(ys);
        };
    });
};
var elemLastIndex = function (__dict_Eq_22) {
    return function (x) {
        return findLastIndex(function (_13) {
            return Prelude["=="](__dict_Eq_22)(_13)(x);
        });
    };
};
var elemIndex = function (__dict_Eq_23) {
    return function (x) {
        return findIndex(function (_12) {
            return Prelude["=="](__dict_Eq_23)(_12)(x);
        });
    };
};
var dropWhile = function (p) {
    var go = function (__copy__902) {
        var _902 = __copy__902;
        tco: while (true) {
            if (_902 instanceof Cons && p(_902.value0)) {
                var __tco__902 = _902.value1;
                _902 = __tco__902;
                continue tco;
            };
            return _902;
        };
    };
    return go;
};
var drop = function (__copy__878) {
    return function (__copy__879) {
        var _878 = __copy__878;
        var _879 = __copy__879;
        tco: while (true) {
            if (_878 === 0) {
                return _879;
            };
            if (_879 instanceof Nil) {
                return Nil.value;
            };
            if (_879 instanceof Cons) {
                var __tco__878 = _878 - 1;
                var __tco__879 = _879.value1;
                _878 = __tco__878;
                _879 = __tco__879;
                continue tco;
            };
            throw new Error("Failed pattern match: " + [ _878.constructor.name, _879.constructor.name ]);
        };
    };
};
var slice = function (start) {
    return function (end) {
        return function (xs) {
            return take(end - start)(drop(start)(xs));
        };
    };
};
var deleteBy = function ($eq$eq) {
    return function (x) {
        return function (_883) {
            if (_883 instanceof Nil) {
                return Nil.value;
            };
            if (_883 instanceof Cons && $eq$eq(x)(_883.value0)) {
                return _883.value1;
            };
            if (_883 instanceof Cons) {
                return new Cons(_883.value0, deleteBy($eq$eq)(x)(_883.value1));
            };
            throw new Error("Failed pattern match: " + [ $eq$eq.constructor.name, x.constructor.name, _883.constructor.name ]);
        };
    };
};
var unionBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return Prelude["<>"](semigroupList)(xs)(Data_Foldable.foldl(foldableList)(Prelude.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
        };
    };
};
var union = function (__dict_Eq_24) {
    return unionBy(Prelude["=="](__dict_Eq_24));
};
var deleteAt = function (_870) {
    return function (_871) {
        if (_870 === 0 && _871 instanceof Cons) {
            return new Data_Maybe.Just(_871.value1);
        };
        if (_871 instanceof Cons) {
            return Prelude["<$>"](Data_Maybe.functorMaybe)(Cons.create(_871.value0))(deleteAt(_870 - 1)(_871.value1));
        };
        return Data_Maybe.Nothing.value;
    };
};
var $$delete = function (__dict_Eq_25) {
    return deleteBy(Prelude["=="](__dict_Eq_25));
};
var $bslash$bslash = function (__dict_Eq_26) {
    return Data_Foldable.foldl(foldableList)(Prelude.flip($$delete(__dict_Eq_26)));
};
var concatMap = function (f) {
    return function (_876) {
        if (_876 instanceof Nil) {
            return Nil.value;
        };
        if (_876 instanceof Cons) {
            return Prelude["<>"](semigroupList)(f(_876.value0))(concatMap(f)(_876.value1));
        };
        throw new Error("Failed pattern match: " + [ f.constructor.name, _876.constructor.name ]);
    };
};
var catMaybes = mapMaybe(Prelude.id(Prelude.categoryFn));
var applyList = new Prelude.Apply(function () {
    return functorList;
}, function (_918) {
    return function (xs) {
        if (_918 instanceof Nil) {
            return Nil.value;
        };
        if (_918 instanceof Cons) {
            return Prelude["<>"](semigroupList)(Prelude["<$>"](functorList)(_918.value0)(xs))(Prelude["<*>"](applyList)(_918.value1)(xs));
        };
        throw new Error("Failed pattern match: " + [ _918.constructor.name, xs.constructor.name ]);
    };
});
var bindList = new Prelude.Bind(function () {
    return applyList;
}, Prelude.flip(concatMap));
var concat = function (_14) {
    return Prelude[">>="](bindList)(_14)(Prelude.id(Prelude.categoryFn));
};
var applicativeList = new Prelude.Applicative(function () {
    return applyList;
}, function (a) {
    return new Cons(a, Nil.value);
});
var monadList = new Prelude.Monad(function () {
    return applicativeList;
}, function () {
    return bindList;
});
var alterAt = function (_874) {
    return function (f) {
        return function (_875) {
            if (_874 === 0 && _875 instanceof Cons) {
                return Data_Maybe.Just.create((function () {
                    var _3380 = f(_875.value0);
                    if (_3380 instanceof Data_Maybe.Nothing) {
                        return _875.value1;
                    };
                    if (_3380 instanceof Data_Maybe.Just) {
                        return new Cons(_3380.value0, _875.value1);
                    };
                    throw new Error("Failed pattern match: " + [ _3380.constructor.name ]);
                })());
            };
            if (_875 instanceof Cons) {
                return Prelude["<$>"](Data_Maybe.functorMaybe)(Cons.create(_875.value0))(alterAt(_874 - 1)(f)(_875.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var modifyAt = function (n) {
    return function (f) {
        return alterAt(n)(function (_3389) {
            return Data_Maybe.Just.create(f(_3389));
        });
    };
};
var altList = new Control_Alt.Alt(function () {
    return functorList;
}, Prelude.append(semigroupList));
var plusList = new Control_Plus.Plus(function () {
    return altList;
}, Nil.value);
var alternativeList = new Control_Alternative.Alternative(function () {
    return plusList;
}, function () {
    return applicativeList;
});
var monadPlusList = new Control_MonadPlus.MonadPlus(function () {
    return alternativeList;
}, function () {
    return monadList;
});
module.exports = {
    Nil: Nil, 
    Cons: Cons, 
    foldM: foldM, 
    unzip: unzip, 
    zip: zip, 
    zipWithA: zipWithA, 
    zipWith: zipWith, 
    intersectBy: intersectBy, 
    intersect: intersect, 
    "\\\\": $bslash$bslash, 
    deleteBy: deleteBy, 
    "delete": $$delete, 
    unionBy: unionBy, 
    union: union, 
    nubBy: nubBy, 
    nub: nub, 
    groupBy: groupBy, 
    "group'": group$prime, 
    group: group, 
    span: span, 
    dropWhile: dropWhile, 
    drop: drop, 
    takeWhile: takeWhile, 
    take: take, 
    slice: slice, 
    sortBy: sortBy, 
    sort: sort, 
    catMaybes: catMaybes, 
    mapMaybe: mapMaybe, 
    filterM: filterM, 
    filter: filter, 
    concatMap: concatMap, 
    concat: concat, 
    reverse: reverse, 
    alterAt: alterAt, 
    modifyAt: modifyAt, 
    updateAt: updateAt, 
    deleteAt: deleteAt, 
    insertAt: insertAt, 
    findLastIndex: findLastIndex, 
    findIndex: findIndex, 
    elemLastIndex: elemLastIndex, 
    elemIndex: elemIndex, 
    index: index, 
    "!!": $bang$bang, 
    uncons: uncons, 
    init: init, 
    tail: tail, 
    last: last, 
    head: head, 
    insertBy: insertBy, 
    insert: insert, 
    snoc: snoc, 
    ":": $colon, 
    length: length, 
    "null": $$null, 
    many: many, 
    some: some, 
    replicateM: replicateM, 
    replicate: replicate, 
    range: range, 
    "..": $dot$dot, 
    singleton: singleton, 
    toList: toList, 
    fromList: fromList, 
    showList: showList, 
    eqList: eqList, 
    ordList: ordList, 
    semigroupList: semigroupList, 
    monoidList: monoidList, 
    functorList: functorList, 
    foldableList: foldableList, 
    unfoldableList: unfoldableList, 
    traversableList: traversableList, 
    applyList: applyList, 
    applicativeList: applicativeList, 
    bindList: bindList, 
    monadList: monadList, 
    altList: altList, 
    plusList: plusList, 
    alternativeList: alternativeList, 
    monadPlusList: monadPlusList
};

},{"Control.Alt":"c:\\Development\\Web\\jundo\\output\\Control.Alt\\index.js","Control.Alternative":"c:\\Development\\Web\\jundo\\output\\Control.Alternative\\index.js","Control.Lazy":"c:\\Development\\Web\\jundo\\output\\Control.Lazy\\index.js","Control.MonadPlus":"c:\\Development\\Web\\jundo\\output\\Control.MonadPlus\\index.js","Control.Plus":"c:\\Development\\Web\\jundo\\output\\Control.Plus\\index.js","Data.Foldable":"c:\\Development\\Web\\jundo\\output\\Data.Foldable\\index.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js","Data.Monoid":"c:\\Development\\Web\\jundo\\output\\Data.Monoid\\index.js","Data.Traversable":"c:\\Development\\Web\\jundo\\output\\Data.Traversable\\index.js","Data.Tuple":"c:\\Development\\Web\\jundo\\output\\Data.Tuple\\index.js","Data.Unfoldable":"c:\\Development\\Web\\jundo\\output\\Data.Unfoldable\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Matrix4\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Data_TypeNat = require("Data.TypeNat");
var Data_Matrix = require("Data.Matrix");
var Data_Vector3 = require("Data.Vector3");
var Data_Vector4 = require("Data.Vector4");
var Data_Vector = require("Data.Vector");
var Data_Array = require("Data.Array");
var Data_Maybe = require("Data.Maybe");
var $$Math = require("Math");
var Extensions = require("Extensions");
var translate3 = function (x) {
    return function (y) {
        return function (z) {
            return function (_749) {
                if (_749.length === 16) {
                    return [ _749[0], _749[1], _749[2], _749[3], _749[4], _749[5], _749[6], _749[7], _749[8], _749[9], _749[10], _749[11], _749[0] * x + _749[4] * y + _749[8] * z + _749[12], _749[1] * x + _749[5] * y + _749[9] * z + _749[13], _749[2] * x + _749[6] * y + _749[10] * z + _749[14], _749[3] * x + _749[7] * y + _749[11] * z + _749[15] ];
                };
                return Extensions.fail("Matrix3>>translate3: Impossible!");
            };
        };
    };
};
var translate = function (_750) {
    return function (m) {
        if (_750.length === 3) {
            return translate3(_750[0])(_750[1])(_750[2])(m);
        };
        return Extensions.fail("Matrix3>>translate: Impossible!");
    };
};
var transform = function (_736) {
    return function (v) {
        if (_736.length === 16) {
            var t4 = [ _736[3], _736[7], _736[11] ];
            var w = Data_Vector.dot(v)(t4) + _736[15];
            var t3 = [ _736[2], _736[6], _736[10] ];
            var t2 = [ _736[1], _736[5], _736[9] ];
            var t1 = [ _736[0], _736[4], _736[8] ];
            return [ (Data_Vector.dot(v)(t1) + _736[12]) / w, (Data_Vector.dot(v)(t2) + _736[13]) / w, (Data_Vector.dot(v)(t3) + _736[14]) / w ];
        };
        return Extensions.fail("Matrix4>>transform: Impossible!");
    };
};
var scale3 = function (x) {
    return function (y) {
        return function (z) {
            return function (_746) {
                if (_746.length === 16) {
                    return [ _746[0] * x, _746[1] * x, _746[2] * x, _746[3] * x, _746[4] * y, _746[5] * y, _746[6] * y, _746[7] * y, _746[8] * z, _746[9] * z, _746[10] * z, _746[11] * z, _746[12], _746[13], _746[14], _746[15] ];
                };
                return Extensions.fail("Matrix4>>scale3: Impossible!");
            };
        };
    };
};
var scale = function (_747) {
    if (_747.length === 3) {
        return scale3(_747[0])(_747[1])(_747[2]);
    };
    return Extensions.fail("Matrix4>>scale: Impossible!");
};
var rotate = function (angle) {
    return function (_743) {
        return function (_744) {
            if (_743.length === 3 && _744.length === 16) {
                var s = $$Math.sin(angle);
                var l = $$Math.sqrt(_743[0] * _743[0] + _743[1] * _743[1] + _743[2] * _743[2]);
                var im = 1.0 / l;
                var x = _743[0] * im;
                var xs = x * s;
                var y = _743[1] * im;
                var ys = y * s;
                var z = _743[2] * im;
                var zs = z * s;
                var c = $$Math.cos(angle);
                var c1 = 1.0 - c;
                var xyc1 = x * y * c1;
                var t12 = xyc1 - zs;
                var t21 = xyc1 + zs;
                var xzc1 = x * z * c1;
                var t13 = xzc1 + ys;
                var t31 = xzc1 - ys;
                var yzc1 = y * z * c1;
                var t23 = yzc1 - xs;
                var t32 = yzc1 + xs;
                var t11 = x * x * c1 + c;
                var t22 = y * y * c1 + c;
                var t33 = z * z * c1 + c;
                return [ _744[0] * t11 + _744[4] * t21 + _744[8] * t31, _744[1] * t11 + _744[5] * t21 + _744[9] * t31, _744[2] * t11 + _744[6] * t21 + _744[10] * t31, _744[3] * t11 + _744[7] * t21 + _744[11] * t31, _744[0] * t12 + _744[4] * t22 + _744[8] * t32, _744[1] * t12 + _744[5] * t22 + _744[9] * t32, _744[2] * t12 + _744[6] * t22 + _744[10] * t32, _744[3] * t12 + _744[7] * t22 + _744[11] * t32, _744[0] * t13 + _744[4] * t23 + _744[8] * t33, _744[1] * t13 + _744[5] * t23 + _744[9] * t33, _744[2] * t13 + _744[6] * t23 + _744[10] * t33, _744[3] * t13 + _744[7] * t23 + _744[11] * t33, _744[12], _744[13], _744[14], _744[15] ];
            };
            return Extensions.fail("Matrix4>>rotate: Impossible!");
        };
    };
};
var project = function (_755) {
    return function (_756) {
        return function (_757) {
            return function (_758) {
                if (_755.length === 3 && (_756.length === 16 && (_757.length === 16 && _758.length === 4))) {
                    var temp1 = [ _756[0] * _755[0] + _756[4] * _755[1] + _756[8] * _755[2] + _756[12], _756[1] * _755[0] + _756[5] * _755[1] + _756[9] * _755[2] + _756[13], _756[2] * _755[0] + _756[6] * _755[1] + _756[10] * _755[2] + _756[14], _756[3] * _755[0] + _756[7] * _755[1] + _756[11] * _755[2] + _756[15] ];
                    if (temp1.length === 4) {
                        var temp2 = [ _757[0] * temp1[0] + _757[4] * temp1[1] + _757[8] * temp1[2] + _757[12] * temp1[3], _757[1] * temp1[0] + _757[5] * temp1[1] + _757[9] * temp1[2] + _757[13] * temp1[3], _757[2] * temp1[0] + _757[6] * temp1[1] + _757[10] * temp1[2] + _757[14] * temp1[3], -temp1[2] ];
                        if (temp2.length === 4) {
                            var _2576 = temp2[3] === 0.0;
                            if (_2576) {
                                return Data_Maybe.Nothing.value;
                            };
                            if (!_2576) {
                                var gt3$prime = 1.0 / temp2[3];
                                var gt2$prime = temp2[2] * gt3$prime;
                                var gt1$prime = temp2[1] * gt3$prime;
                                var gt0$prime = temp2[0] * gt3$prime;
                                return new Data_Maybe.Just([ (gt0$prime * 0.5 + 0.5) * _758[2] + _758[0], (gt1$prime * 0.5 + 0.5) * _758[3] + _758[1], (1.0 + gt2$prime) * 0.5 ]);
                            };
                            throw new Error("Failed pattern match at Data.Matrix4 line 371, column 1 - line 379, column 1: " + [ _2576.constructor.name ]);
                        };
                        return Extensions.fail("Matrix4>>project: Impossible!");
                    };
                    return Extensions.fail("Matrix4>>project: Impossible!");
                };
                return Extensions.fail("Matrix4>>project: Impossible!");
            };
        };
    };
};
var mulMatVect = function (_761) {
    return function (_762) {
        if (_761.length === 16 && _762.length === 4) {
            return [ _761[0] * _762[0] + _761[4] * _762[1] + _761[8] * _762[2] + _761[12] * _762[3], _761[1] * _762[0] + _761[5] * _762[1] + _761[9] * _762[2] + _761[13] * _762[3], _761[2] * _762[0] + _761[6] * _762[1] + _761[10] * _762[2] + _761[14] * _762[3], _761[3] * _762[0] + _761[7] * _762[1] + _761[11] * _762[2] + _761[15] * _762[3] ];
        };
        return Extensions.fail("Matrix4>>mulMatVect: Impossible!");
    };
};
var mulM = function (_739) {
    return function (_740) {
        if (_739.length === 16 && _740.length === 16) {
            return [ _739[0] * _740[0] + _739[4] * _740[1] + _739[8] * _740[2] + _739[12] * _740[3], _739[1] * _740[0] + _739[5] * _740[1] + _739[9] * _740[2] + _739[13] * _740[3], _739[2] * _740[0] + _739[6] * _740[1] + _739[10] * _740[2] + _739[14] * _740[3], _739[3] * _740[0] + _739[7] * _740[1] + _739[11] * _740[2] + _739[15] * _740[3], _739[0] * _740[4] + _739[4] * _740[5] + _739[8] * _740[6] + _739[12] * _740[7], _739[1] * _740[4] + _739[5] * _740[5] + _739[9] * _740[6] + _739[13] * _740[7], _739[2] * _740[4] + _739[6] * _740[5] + _739[10] * _740[6] + _739[14] * _740[7], _739[3] * _740[4] + _739[7] * _740[5] + _739[11] * _740[6] + _739[15] * _740[7], _739[0] * _740[8] + _739[4] * _740[9] + _739[8] * _740[10] + _739[12] * _740[11], _739[1] * _740[8] + _739[5] * _740[9] + _739[9] * _740[10] + _739[13] * _740[11], _739[2] * _740[8] + _739[6] * _740[9] + _739[10] * _740[10] + _739[14] * _740[11], _739[3] * _740[8] + _739[7] * _740[9] + _739[11] * _740[10] + _739[15] * _740[11], _739[0] * _740[12] + _739[4] * _740[13] + _739[8] * _740[14] + _739[12] * _740[15], _739[1] * _740[12] + _739[5] * _740[13] + _739[9] * _740[14] + _739[13] * _740[15], _739[2] * _740[12] + _739[6] * _740[13] + _739[10] * _740[14] + _739[14] * _740[15], _739[3] * _740[12] + _739[7] * _740[13] + _739[11] * _740[14] + _739[15] * _740[15] ];
        };
        return Extensions.fail("Matrix4>>mulM: Impossible!");
    };
};
var mulAffine = function (_741) {
    return function (_742) {
        if (_741.length === 16 && _742.length === 16) {
            return [ _741[0] * _742[0] + _741[1] * _742[4] + _741[2] * _742[8], _741[4] * _742[0] + _741[5] * _742[4] + _741[6] * _742[8], _741[8] * _742[0] + _741[9] * _742[4] + _741[10] * _742[8], 0.0, _741[0] * _742[1] + _741[1] * _742[5] + _741[2] * _742[9], _741[4] * _742[1] + _741[5] * _742[5] + _741[6] * _742[9], _741[8] * _742[1] + _741[9] * _742[5] + _741[10] * _742[9], 0.0, _741[0] * _742[2] + _741[1] * _742[6] + _741[2] * _742[10], _741[4] * _742[2] + _741[5] * _742[6] + _741[6] * _742[10], _741[8] * _742[2] + _741[9] * _742[6] + _741[10] * _742[10], 0.0, _741[0] * _742[3] + _741[1] * _742[7] + _741[2] * _742[11] + _741[3], _741[4] * _742[3] + _741[5] * _742[7] + _741[6] * _742[11] + _741[7], _741[8] * _742[3] + _741[9] * _742[7] + _741[10] * _742[11] + _741[11], 1.0 ];
        };
        return Extensions.fail("Matrix4>>mulAffine: Impossible!");
    };
};
var mat4 = Data_Matrix.fromArray(Data_TypeNat.ss(Data_TypeNat.ss(Data_TypeNat.ss(Data_TypeNat.ss(Data_TypeNat.sz)))));
var makeTranslate3 = function (x) {
    return function (y) {
        return function (z) {
            return [ 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, x, y, z, 1.0 ];
        };
    };
};
var makeTranslate = function (_748) {
    if (_748.length === 3) {
        return makeTranslate3(_748[0])(_748[1])(_748[2]);
    };
    return Extensions.fail("Matrix4>>makeTranslate: Impossible!");
};
var makeScale3 = function (x) {
    return function (y) {
        return function (z) {
            return [ x, 0.0, 0.0, 0.0, 0.0, y, 0.0, 0.0, 0.0, 0.0, z, 0.0, 0.0, 0.0, 0.0, 1.0 ];
        };
    };
};
var makeScale = function (_745) {
    if (_745.length === 3) {
        return makeScale3(_745[0])(_745[1])(_745[2]);
    };
    return Extensions.fail("Matrix4>>makeScale: Impossible!");
};
var makeRotate = function (angle) {
    return function (axis) {
        var _2722 = Data_Vector.normalize(axis);
        if (_2722.length === 3) {
            var s = $$Math.sin(angle);
            var c = $$Math.cos(angle);
            var c1 = 1.0 - c;
            return [ _2722[0] * _2722[0] * c1 + c, _2722[1] * _2722[0] * c1 + _2722[2] * s, _2722[2] * _2722[0] * c1 - _2722[1] * s, 0.0, _2722[0] * _2722[1] * c1 - _2722[2] * s, _2722[1] * _2722[1] * c1 + c, _2722[1] * _2722[2] * c1 + _2722[0] * s, 0.0, _2722[0] * _2722[2] * c1 + _2722[1] * s, _2722[1] * _2722[2] * c1 - _2722[0] * s, _2722[2] * _2722[2] * c1 + c, 0.0, 0.0, 0.0, 0.0, 1.0 ];
        };
        return Extensions.fail("Matrix4>>makeRotate: Impossible!");
    };
};
var makeOrtho = function (left) {
    return function (right) {
        return function (bottom) {
            return function (top) {
                return function (znear) {
                    return function (zfar) {
                        var z = -2.0 / (zfar - znear);
                        var y = 2.0 / (top - bottom);
                        var x = 2.0 / (right - left);
                        var tZ = -(zfar + znear) / (zfar - znear);
                        var tY = -(top + bottom) / (top - bottom);
                        var tX = -(right + left) / (right - left);
                        return [ x, 0.0, 0.0, 0.0, 0.0, y, 0.0, 0.0, 0.0, 0.0, z, 0.0, tX, tY, tZ, 1.0 ];
                    };
                };
            };
        };
    };
};
var makeOrtho2D = function (left) {
    return function (right) {
        return function (bottom) {
            return function (top) {
                return makeOrtho(left)(right)(bottom)(top)(-1.0)(1.0);
            };
        };
    };
};
var makeLookAt = function (_751) {
    return function (center) {
        return function (up) {
            if (_751.length === 3) {
                var _2729 = Data_Vector.direction(_751)(center);
                if (_2729.length === 3) {
                    var _2730 = Data_Vector.normalize(Data_Vector3.cross(Prelude.numNumber)(up)(_2729));
                    if (_2730.length === 3) {
                        var _2731 = Data_Vector.normalize(Data_Vector3.cross(Prelude.numNumber)(_2729)(_2730));
                        if (_2731.length === 3) {
                            var m2 = [ 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -_751[0], -_751[1], -_751[2], 1.0 ];
                            var m1 = [ _2730[0], _2731[0], _2729[0], 0.0, _2730[1], _2731[1], _2729[1], 0.0, _2730[2], _2731[2], _2729[2], 0.0, 0.0, 0.0, 0.0, 1.0 ];
                            return mulM(m1)(m2);
                        };
                        return Extensions.fail("Matrix4>>makeRotate: Impossible!");
                    };
                    return Extensions.fail("Matrix4>>makeRotate: Impossible!");
                };
                return Extensions.fail("Matrix4>>makeRotate: Impossible!");
            };
            return Extensions.fail("Matrix4>>makeLookAt: Impossible!");
        };
    };
};
var makeFrustum = function (left) {
    return function (right) {
        return function (bottom) {
            return function (top) {
                return function (znear) {
                    return function (zfar) {
                        var z = (right + left) / (right - left);
                        var y = (2.0 * znear) / (top - bottom);
                        var x = (2.0 * znear) / (right - left);
                        var d = (-2.0 * zfar * znear) / (zfar - znear);
                        var c = -(zfar + znear) / (zfar - znear);
                        var b = (top + bottom) / (top - bottom);
                        return [ (2.0 * znear) / (right - left), 0.0, 0.0, 0.0, 0.0, (2.0 * znear) / (top - bottom), 0.0, 0.0, (right + left) / (right - left), (top + bottom) / (top - bottom), -(zfar + znear) / (zfar - znear), -1.0, 0.0, 0.0, (-2.0 * zfar * znear) / (zfar - znear), 0.0 ];
                    };
                };
            };
        };
    };
};
var makePerspective = function (fovy) {
    return function (aspect) {
        return function (znear) {
            return function (zfar) {
                var ymax = znear * $$Math.tan((fovy * $$Math.pi) / 360.0);
                var ymin = -ymax;
                var xmin = ymin * aspect;
                var xmax = ymax * aspect;
                return makeFrustum(xmin)(xmax)(ymin)(ymax)(znear)(zfar);
            };
        };
    };
};
var makeBasis = function (_752) {
    return function (_753) {
        return function (_754) {
            if (_752.length === 3 && (_753.length === 3 && _754.length === 3)) {
                return [ _752[0], _752[1], _752[2], 0.0, _753[0], _753[1], _753[2], 0.0, _754[0], _754[1], _754[2], 0.0, 0.0, 0.0, 0.0, 1.0 ];
            };
            return Extensions.fail("Matrix4>>makeBasis: Impossible!");
        };
    };
};
var inverseOrthonormal = function (_737) {
    if (_737.length === 16) {
        var _2757 = Data_Matrix.transpose(Data_TypeNat.ss(Data_TypeNat.ss(Data_TypeNat.ss(Data_TypeNat.ss(Data_TypeNat.sz)))))(_737);
        if (_2757.length === 16) {
            var t = [ _737[12], _737[13], _737[14] ];
            var r14 = -Data_Vector.dot([ _2757[2], _2757[6], _2757[10] ])(t);
            var r13 = -Data_Vector.dot([ _2757[1], _2757[5], _2757[9] ])(t);
            var r12 = -Data_Vector.dot([ _2757[0], _2757[4], _2757[8] ])(t);
            return [ _2757[0], _2757[1], _2757[2], 0.0, _2757[4], _2757[5], _2757[6], 0.0, _2757[8], _2757[9], _2757[10], 0.0, r12, r13, r14, _2757[15] ];
        };
        return Extensions.fail("Matrix4>>inverseOrthonormal: Impossible!");
    };
    return Extensions.fail("Matrix4>>inverseOrthonormal: Impossible!");
};
var inverse = function (_738) {
    if (_738.length === 16) {
        var b11 = _738[10] * _738[15] - _738[11] * _738[14];
        var b10 = _738[9] * _738[15] - _738[11] * _738[13];
        var b09 = _738[9] * _738[14] - _738[10] * _738[13];
        var b08 = _738[8] * _738[15] - _738[11] * _738[12];
        var b07 = _738[8] * _738[14] - _738[10] * _738[12];
        var b06 = _738[8] * _738[13] - _738[9] * _738[12];
        var b05 = _738[2] * _738[7] - _738[3] * _738[6];
        var b04 = _738[1] * _738[7] - _738[3] * _738[5];
        var b03 = _738[1] * _738[6] - _738[2] * _738[5];
        var b02 = _738[0] * _738[7] - _738[3] * _738[4];
        var b01 = _738[0] * _738[6] - _738[2] * _738[4];
        var b00 = _738[0] * _738[5] - _738[1] * _738[4];
        var d = (((b00 * b11 - b01 * b10) + b02 * b09 + b03 * b08) - b04 * b07) + b05 * b06;
        var _2791 = d === 0.0;
        if (_2791) {
            return Data_Maybe.Nothing.value;
        };
        if (!_2791) {
            var invDet = 1.0 / d;
            return Data_Maybe.Just.create([ ((_738[5] * b11 - _738[6] * b10) + _738[7] * b09) * invDet, ((-_738[1] * b11 + _738[2] * b10) - _738[3] * b09) * invDet, ((_738[13] * b05 - _738[14] * b04) + _738[15] * b03) * invDet, ((-_738[9] * b05 + _738[10] * b04) - _738[11] * b03) * invDet, ((-_738[4] * b11 + _738[6] * b08) - _738[7] * b07) * invDet, ((_738[0] * b11 - _738[2] * b08) + _738[3] * b07) * invDet, ((-_738[12] * b05 + _738[14] * b02) - _738[15] * b01) * invDet, ((_738[8] * b05 - _738[10] * b02) + _738[11] * b01) * invDet, ((_738[4] * b10 - _738[5] * b08) + _738[7] * b06) * invDet, ((-_738[0] * b10 + _738[1] * b08) - _738[3] * b06) * invDet, ((_738[12] * b04 - _738[13] * b02) + _738[15] * b00) * invDet, ((-_738[8] * b04 + _738[9] * b02) - _738[11] * b00) * invDet, ((-_738[4] * b09 + _738[5] * b07) - _738[6] * b06) * invDet, ((_738[0] * b09 - _738[1] * b07) + _738[2] * b06) * invDet, ((-_738[12] * b03 + _738[13] * b01) - _738[14] * b00) * invDet, ((_738[8] * b03 - _738[9] * b01) + _738[10] * b00) * invDet ]);
        };
        throw new Error("Failed pattern match at Data.Matrix4 line 70, column 1 - line 71, column 1: " + [ _2791.constructor.name ]);
    };
    return Extensions.fail("Matrix4>>inverse: Impossible!");
};
var unProject = function (_759) {
    return function (modelView) {
        return function (projection) {
            return function (_760) {
                if (_759.length === 3 && _760.length === 4) {
                    var mvProjMatrix = mulM(projection)(modelView);
                    var _2812 = inverse(mvProjMatrix);
                    if (_2812 instanceof Data_Maybe.Nothing) {
                        return Data_Maybe.Nothing.value;
                    };
                    if (_2812 instanceof Data_Maybe.Just) {
                        var inVect = [ ((_759[0] - _760[0]) / _760[2]) * 2.0 - 1.0, ((_759[1] - _760[1]) / _760[3]) * 2.0 - 1.0, 2.0 * _759[2] - 1.0, 1.0 ];
                        var out = mulMatVect(_2812.value0)(inVect);
                        if (out.length === 4) {
                            var _2814 = out[3] === 0.0;
                            if (_2814) {
                                return Data_Maybe.Nothing.value;
                            };
                            if (!_2814) {
                                var out3$prime = 1.0 / out[3];
                                return new Data_Maybe.Just([ out[0] * out3$prime, out[1] * out3$prime, out[2] * out3$prime ]);
                            };
                            throw new Error("Failed pattern match at Data.Matrix4 line 415, column 1 - line 423, column 1: " + [ _2814.constructor.name ]);
                        };
                        return Extensions.fail("Matrix4>>unProject: Impossible!");
                    };
                    throw new Error("Failed pattern match at Data.Matrix4 line 415, column 1 - line 423, column 1: " + [ _2812.constructor.name ]);
                };
                return Extensions.fail("Matrix4>>unProject: Impossible!");
            };
        };
    };
};
var identity = [ 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0 ];
module.exports = {
    mulMatVect: mulMatVect, 
    unProject: unProject, 
    project: project, 
    makeBasis: makeBasis, 
    makeLookAt: makeLookAt, 
    translate: translate, 
    translate3: translate3, 
    makeTranslate: makeTranslate, 
    makeTranslate3: makeTranslate3, 
    scale: scale, 
    scale3: scale3, 
    makeScale: makeScale, 
    makeScale3: makeScale3, 
    rotate: rotate, 
    makeRotate: makeRotate, 
    mulAffine: mulAffine, 
    mulM: mulM, 
    makeOrtho2D: makeOrtho2D, 
    makeOrtho: makeOrtho, 
    makePerspective: makePerspective, 
    makeFrustum: makeFrustum, 
    inverse: inverse, 
    inverseOrthonormal: inverseOrthonormal, 
    transform: transform, 
    identity: identity, 
    mat4: mat4
};

},{"Data.Array":"c:\\Development\\Web\\jundo\\output\\Data.Array\\index.js","Data.Matrix":"c:\\Development\\Web\\jundo\\output\\Data.Matrix\\index.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js","Data.TypeNat":"c:\\Development\\Web\\jundo\\output\\Data.TypeNat\\index.js","Data.Vector":"c:\\Development\\Web\\jundo\\output\\Data.Vector\\index.js","Data.Vector3":"c:\\Development\\Web\\jundo\\output\\Data.Vector3\\index.js","Data.Vector4":"c:\\Development\\Web\\jundo\\output\\Data.Vector4\\index.js","Extensions":"c:\\Development\\Web\\jundo\\output\\Extensions\\index.js","Math":"c:\\Development\\Web\\jundo\\output\\Math\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Matrix\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Data_TypeNat = require("Data.TypeNat");
var Data_Vector = require("Data.Vector");
var Data_Array = require("Data.Array");
var Data_Monoid = require("Data.Monoid");
var Data_Foldable = require("Data.Foldable");
var Data_Maybe_Unsafe = require("Data.Maybe.Unsafe");
var Control_Apply = require("Control.Apply");
var $$Math = require("Math");
var Data_Generic = require("Data.Generic");
var Extensions = require("Extensions");
var Mat = function (x) {
    return x;
};
var toArray = function (_709) {
    return _709;
};
var getElem = function (__dict_Sized_1) {
    return function (i) {
        return function (j) {
            return function (_708) {
                return Data_Maybe_Unsafe.fromJust(Data_Array["!!"](_708)((i * Data_TypeNat.sized(__dict_Sized_1)(Data_Generic.anyProxy) | 0) + j | 0));
            };
        };
    };
};
var generate = function (__dict_Sized_2) {
    return function (f) {
        var size = Data_TypeNat.sized(__dict_Sized_2)(Data_Generic.anyProxy);
        return Mat(Data_Array.concat(Prelude["<$>"](Prelude.functorArray)(function (col) {
            return Prelude["<$>"](Prelude.functorArray)(function (row) {
                return f(col)(row);
            })(Data_Array.range(0)(size - 1));
        })(Data_Array.range(0)(size - 1))));
    };
};
var identity$prime = function (__dict_Sized_3) {
    return generate(__dict_Sized_3)(function (i) {
        return function (j) {
            var _2415 = i === j;
            if (_2415) {
                return 1.0;
            };
            if (!_2415) {
                return 0.0;
            };
            throw new Error("Failed pattern match at Data.Matrix line 89, column 1 - line 90, column 1: " + [ _2415.constructor.name ]);
        };
    });
};
var transpose = function (__dict_Sized_4) {
    return function (m) {
        return generate(__dict_Sized_4)(function (i) {
            return function (j) {
                return getElem(__dict_Sized_4)(j)(i)(m);
            };
        });
    };
};
var functorMat = new Prelude.Functor(function (f) {
    return function (_712) {
        return Prelude.map(Prelude.functorArray)(f)(_712);
    };
});
var scaleMatrix = function (__dict_Num_0) {
    return function (_2424) {
        return Prelude["<$>"](functorMat)(Prelude["*"](((__dict_Num_0["__superclass_Prelude.DivisionRing_0"]())["__superclass_Prelude.ModuloSemiring_1"]())["__superclass_Prelude.Semiring_0"]())(_2424));
    };
};
var fromArray = function (__dict_Sized_5) {
    return function (l) {
        var size = Data_TypeNat.sized(__dict_Sized_5)(Data_Generic.anyProxy);
        var _2418 = size * size | 0;
        if (_2418 === Data_Array.length(l)) {
            return l;
        };
        if (Prelude.otherwise) {
            return Extensions.fail("Matrix>>fromArray: Wrong array length!");
        };
        throw new Error("Failed pattern match at Data.Matrix line 109, column 1 - line 110, column 1: " + [ _2418.constructor.name ]);
    };
};
var eqMat = function (__dict_Eq_6) {
    return new Prelude.Eq(function (_710) {
        return function (_711) {
            return Prelude["=="](Prelude.eqArray(__dict_Eq_6))(_710)(_711);
        };
    });
};
var columns = function (__dict_Sized_7) {
    return function (_707) {
        if (Data_TypeNat.sized(__dict_Sized_7)(Data_Generic.anyProxy) === 2) {
            return [ Data_Array.slice(0)(2)(_707), Data_Array.slice(2)(4)(_707) ];
        };
        if (Data_TypeNat.sized(__dict_Sized_7)(Data_Generic.anyProxy) === 3) {
            return [ Data_Array.slice(0)(3)(_707), Data_Array.slice(3)(6)(_707), Data_Array.slice(6)(9)(_707) ];
        };
        if (Data_TypeNat.sized(__dict_Sized_7)(Data_Generic.anyProxy) === 4) {
            return [ Data_Array.slice(0)(4)(_707), Data_Array.slice(4)(8)(_707), Data_Array.slice(8)(12)(_707), Data_Array.slice(12)(16)(_707) ];
        };
        if (Prelude.otherwise) {
            return Extensions.fail("Matrix>>columns: Proxy size not supprted!");
        };
        throw new Error("Failed pattern match at Data.Matrix line 54, column 1 - line 55, column 1: " + [ _707.constructor.name ]);
    };
};
var showMat2 = function (__dict_Show_8) {
    return new Prelude.Show(function (m) {
        return "Mat2x2 " + Prelude.show(Prelude.showArray(Prelude.showArray(__dict_Show_8)))(columns(Data_TypeNat.ss(Data_TypeNat.ss(Data_TypeNat.sz)))(m));
    });
};
var showMat3 = function (__dict_Show_9) {
    return new Prelude.Show(function (m) {
        return "Mat3x3 " + Prelude.show(Prelude.showArray(Prelude.showArray(__dict_Show_9)))(columns(Data_TypeNat.ss(Data_TypeNat.ss(Data_TypeNat.ss(Data_TypeNat.sz))))(m));
    });
};
var showMat4 = function (__dict_Show_10) {
    return new Prelude.Show(function (m) {
        return "Mat4x4 " + Prelude.show(Prelude.showArray(Prelude.showArray(__dict_Show_10)))(columns(Data_TypeNat.ss(Data_TypeNat.ss(Data_TypeNat.ss(Data_TypeNat.ss(Data_TypeNat.sz)))))(m));
    });
};
var applyMat = new Prelude.Apply(function () {
    return functorMat;
}, function (_713) {
    return function (_714) {
        return Data_Array.zipWith(function (f$prime) {
            return function (a$prime) {
                return f$prime(a$prime);
            };
        })(_713)(_714);
    };
});
module.exports = {
    Mat: Mat, 
    transpose: transpose, 
    toArray: toArray, 
    fromArray: fromArray, 
    scaleMatrix: scaleMatrix, 
    getElem: getElem, 
    "identity'": identity$prime, 
    columns: columns, 
    generate: generate, 
    showMat2: showMat2, 
    showMat3: showMat3, 
    showMat4: showMat4, 
    eqMat: eqMat, 
    functorMat: functorMat, 
    applyMat: applyMat
};

},{"Control.Apply":"c:\\Development\\Web\\jundo\\output\\Control.Apply\\index.js","Data.Array":"c:\\Development\\Web\\jundo\\output\\Data.Array\\index.js","Data.Foldable":"c:\\Development\\Web\\jundo\\output\\Data.Foldable\\index.js","Data.Generic":"c:\\Development\\Web\\jundo\\output\\Data.Generic\\index.js","Data.Maybe.Unsafe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe.Unsafe\\index.js","Data.Monoid":"c:\\Development\\Web\\jundo\\output\\Data.Monoid\\index.js","Data.TypeNat":"c:\\Development\\Web\\jundo\\output\\Data.TypeNat\\index.js","Data.Vector":"c:\\Development\\Web\\jundo\\output\\Data.Vector\\index.js","Extensions":"c:\\Development\\Web\\jundo\\output\\Extensions\\index.js","Math":"c:\\Development\\Web\\jundo\\output\\Math\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Maybe.First\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var First = function (x) {
    return x;
};
var showFirst = function (__dict_Show_0) {
    return new Prelude.Show(function (_435) {
        return "First (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_0))(_435) + ")");
    });
};
var semigroupFirst = new Prelude.Semigroup(function (_436) {
    return function (second) {
        if (_436 instanceof Data_Maybe.Just) {
            return _436;
        };
        return second;
    };
});
var runFirst = function (_425) {
    return _425;
};
var monoidFirst = new Data_Monoid.Monoid(function () {
    return semigroupFirst;
}, Data_Maybe.Nothing.value);
var functorFirst = new Prelude.Functor(function (f) {
    return function (_430) {
        return Prelude["<$>"](Data_Maybe.functorMaybe)(f)(_430);
    };
});
var invariantFirst = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorFirst));
var extendFirst = new Control_Extend.Extend(function () {
    return functorFirst;
}, function (f) {
    return function (_434) {
        return Control_Extend.extend(Data_Maybe.extendMaybe)(function (_1405) {
            return f(First(_1405));
        })(_434);
    };
});
var eqFirst = function (__dict_Eq_2) {
    return new Prelude.Eq(function (_426) {
        return function (_427) {
            return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_2))(_426)(_427);
        };
    });
};
var ordFirst = function (__dict_Ord_1) {
    return new Prelude.Ord(function () {
        return eqFirst(__dict_Ord_1["__superclass_Prelude.Eq_0"]());
    }, function (_428) {
        return function (_429) {
            return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_1))(_428)(_429);
        };
    });
};
var boundedFirst = function (__dict_Bounded_3) {
    return new Prelude.Bounded(Prelude.bottom(Data_Maybe.boundedMaybe(__dict_Bounded_3)), Prelude.top(Data_Maybe.boundedMaybe(__dict_Bounded_3)));
};
var applyFirst = new Prelude.Apply(function () {
    return functorFirst;
}, function (_431) {
    return function (_432) {
        return Prelude["<*>"](Data_Maybe.applyMaybe)(_431)(_432);
    };
});
var bindFirst = new Prelude.Bind(function () {
    return applyFirst;
}, function (_433) {
    return function (f) {
        return Prelude.bind(Data_Maybe.bindMaybe)(_433)(function (_1406) {
            return runFirst(f(_1406));
        });
    };
});
var applicativeFirst = new Prelude.Applicative(function () {
    return applyFirst;
}, function (_1407) {
    return First(Prelude.pure(Data_Maybe.applicativeMaybe)(_1407));
});
var monadFirst = new Prelude.Monad(function () {
    return applicativeFirst;
}, function () {
    return bindFirst;
});
module.exports = {
    First: First, 
    runFirst: runFirst, 
    eqFirst: eqFirst, 
    ordFirst: ordFirst, 
    boundedFirst: boundedFirst, 
    functorFirst: functorFirst, 
    applyFirst: applyFirst, 
    applicativeFirst: applicativeFirst, 
    bindFirst: bindFirst, 
    monadFirst: monadFirst, 
    extendFirst: extendFirst, 
    invariantFirst: invariantFirst, 
    showFirst: showFirst, 
    semigroupFirst: semigroupFirst, 
    monoidFirst: monoidFirst
};

},{"Control.Comonad":"c:\\Development\\Web\\jundo\\output\\Control.Comonad\\index.js","Control.Extend":"c:\\Development\\Web\\jundo\\output\\Control.Extend\\index.js","Data.Functor.Invariant":"c:\\Development\\Web\\jundo\\output\\Data.Functor.Invariant\\index.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js","Data.Monoid":"c:\\Development\\Web\\jundo\\output\\Data.Monoid\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Maybe.Last\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var Last = function (x) {
    return x;
};
var showLast = function (__dict_Show_0) {
    return new Prelude.Show(function (_447) {
        return "Last (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_0))(_447) + ")");
    });
};
var semigroupLast = new Prelude.Semigroup(function (last) {
    return function (_448) {
        if (_448 instanceof Data_Maybe.Just) {
            return _448;
        };
        if (_448 instanceof Data_Maybe.Nothing) {
            return last;
        };
        throw new Error("Failed pattern match at Data.Maybe.Last line 57, column 1 - line 61, column 1: " + [ last.constructor.name, _448.constructor.name ]);
    };
});
var runLast = function (_437) {
    return _437;
};
var monoidLast = new Data_Monoid.Monoid(function () {
    return semigroupLast;
}, Data_Maybe.Nothing.value);
var functorLast = new Prelude.Functor(function (f) {
    return function (_442) {
        return Prelude["<$>"](Data_Maybe.functorMaybe)(f)(_442);
    };
});
var invariantLast = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorLast));
var extendLast = new Control_Extend.Extend(function () {
    return functorLast;
}, function (f) {
    return function (_446) {
        return Control_Extend.extend(Data_Maybe.extendMaybe)(function (_1425) {
            return f(Last(_1425));
        })(_446);
    };
});
var eqLast = function (__dict_Eq_2) {
    return new Prelude.Eq(function (_438) {
        return function (_439) {
            return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_2))(_438)(_439);
        };
    });
};
var ordLast = function (__dict_Ord_1) {
    return new Prelude.Ord(function () {
        return eqLast(__dict_Ord_1["__superclass_Prelude.Eq_0"]());
    }, function (_440) {
        return function (_441) {
            return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_1))(_440)(_441);
        };
    });
};
var boundedLast = function (__dict_Bounded_3) {
    return new Prelude.Bounded(Prelude.bottom(Data_Maybe.boundedMaybe(__dict_Bounded_3)), Prelude.top(Data_Maybe.boundedMaybe(__dict_Bounded_3)));
};
var applyLast = new Prelude.Apply(function () {
    return functorLast;
}, function (_443) {
    return function (_444) {
        return Prelude["<*>"](Data_Maybe.applyMaybe)(_443)(_444);
    };
});
var bindLast = new Prelude.Bind(function () {
    return applyLast;
}, function (_445) {
    return function (f) {
        return Prelude.bind(Data_Maybe.bindMaybe)(_445)(function (_1426) {
            return runLast(f(_1426));
        });
    };
});
var applicativeLast = new Prelude.Applicative(function () {
    return applyLast;
}, function (_1427) {
    return Last(Prelude.pure(Data_Maybe.applicativeMaybe)(_1427));
});
var monadLast = new Prelude.Monad(function () {
    return applicativeLast;
}, function () {
    return bindLast;
});
module.exports = {
    Last: Last, 
    runLast: runLast, 
    eqLast: eqLast, 
    ordLast: ordLast, 
    boundedLast: boundedLast, 
    functorLast: functorLast, 
    applyLast: applyLast, 
    applicativeLast: applicativeLast, 
    bindLast: bindLast, 
    monadLast: monadLast, 
    extendLast: extendLast, 
    invariantLast: invariantLast, 
    showLast: showLast, 
    semigroupLast: semigroupLast, 
    monoidLast: monoidLast
};

},{"Control.Comonad":"c:\\Development\\Web\\jundo\\output\\Control.Comonad\\index.js","Control.Extend":"c:\\Development\\Web\\jundo\\output\\Control.Extend\\index.js","Data.Functor.Invariant":"c:\\Development\\Web\\jundo\\output\\Data.Functor.Invariant\\index.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js","Data.Monoid":"c:\\Development\\Web\\jundo\\output\\Data.Monoid\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Maybe.Unsafe\\foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Maybe.Unsafe

exports.unsafeThrow = function (msg) {
  throw new Error(msg);
};

},{}],"c:\\Development\\Web\\jundo\\output\\Data.Maybe.Unsafe\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var fromJust = function (_474) {
    if (_474 instanceof Data_Maybe.Just) {
        return _474.value0;
    };
    if (_474 instanceof Data_Maybe.Nothing) {
        return $foreign.unsafeThrow("Data.Maybe.Unsafe.fromJust called on Nothing");
    };
    throw new Error("Failed pattern match at Data.Maybe.Unsafe line 10, column 1 - line 11, column 1: " + [ _474.constructor.name ]);
};
module.exports = {
    fromJust: fromJust, 
    unsafeThrow: $foreign.unsafeThrow
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\Data.Maybe.Unsafe\\foreign.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Control_Alt = require("Control.Alt");
var Control_Alternative = require("Control.Alternative");
var Control_Extend = require("Control.Extend");
var Control_MonadPlus = require("Control.MonadPlus");
var Control_Plus = require("Control.Plus");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Monoid = require("Data.Monoid");
var Nothing = (function () {
    function Nothing() {

    };
    Nothing.value = new Nothing();
    return Nothing;
})();
var Just = (function () {
    function Just(value0) {
        this.value0 = value0;
    };
    Just.create = function (value0) {
        return new Just(value0);
    };
    return Just;
})();
var showMaybe = function (__dict_Show_0) {
    return new Prelude.Show(function (_424) {
        if (_424 instanceof Just) {
            return "Just (" + (Prelude.show(__dict_Show_0)(_424.value0) + ")");
        };
        if (_424 instanceof Nothing) {
            return "Nothing";
        };
        throw new Error("Failed pattern match at Data.Maybe line 289, column 1 - line 291, column 19: " + [ _424.constructor.name ]);
    });
};
var semigroupMaybe = function (__dict_Semigroup_2) {
    return new Prelude.Semigroup(function (_418) {
        return function (_419) {
            if (_418 instanceof Nothing) {
                return _419;
            };
            if (_419 instanceof Nothing) {
                return _418;
            };
            if (_418 instanceof Just && _419 instanceof Just) {
                return new Just(Prelude["<>"](__dict_Semigroup_2)(_418.value0)(_419.value0));
            };
            throw new Error("Failed pattern match at Data.Maybe line 231, column 1 - line 236, column 1: " + [ _418.constructor.name, _419.constructor.name ]);
        };
    });
};
var monoidMaybe = function (__dict_Semigroup_6) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMaybe(__dict_Semigroup_6);
    }, Nothing.value);
};
var maybe$prime = function (g) {
    return function (f) {
        return function (_412) {
            if (_412 instanceof Nothing) {
                return g(Prelude.unit);
            };
            if (_412 instanceof Just) {
                return f(_412.value0);
            };
            throw new Error("Failed pattern match at Data.Maybe line 39, column 1 - line 40, column 1: " + [ g.constructor.name, f.constructor.name, _412.constructor.name ]);
        };
    };
};
var maybe = function (b) {
    return function (f) {
        return function (_411) {
            if (_411 instanceof Nothing) {
                return b;
            };
            if (_411 instanceof Just) {
                return f(_411.value0);
            };
            throw new Error("Failed pattern match at Data.Maybe line 26, column 1 - line 27, column 1: " + [ b.constructor.name, f.constructor.name, _411.constructor.name ]);
        };
    };
};
var isNothing = maybe(true)(Prelude["const"](false));
var isJust = maybe(false)(Prelude["const"](true));
var functorMaybe = new Prelude.Functor(function (fn) {
    return function (_413) {
        if (_413 instanceof Just) {
            return new Just(fn(_413.value0));
        };
        return Nothing.value;
    };
});
var invariantMaybe = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorMaybe));
var fromMaybe$prime = function (a) {
    return maybe$prime(a)(Prelude.id(Prelude.categoryFn));
};
var fromMaybe = function (a) {
    return maybe(a)(Prelude.id(Prelude.categoryFn));
};
var extendMaybe = new Control_Extend.Extend(function () {
    return functorMaybe;
}, function (f) {
    return function (_417) {
        if (_417 instanceof Nothing) {
            return Nothing.value;
        };
        return new Just(f(_417));
    };
});
var eqMaybe = function (__dict_Eq_8) {
    return new Prelude.Eq(function (_420) {
        return function (_421) {
            if (_420 instanceof Nothing && _421 instanceof Nothing) {
                return true;
            };
            if (_420 instanceof Just && _421 instanceof Just) {
                return Prelude["=="](__dict_Eq_8)(_420.value0)(_421.value0);
            };
            return false;
        };
    });
};
var ordMaybe = function (__dict_Ord_4) {
    return new Prelude.Ord(function () {
        return eqMaybe(__dict_Ord_4["__superclass_Prelude.Eq_0"]());
    }, function (_422) {
        return function (_423) {
            if (_422 instanceof Just && _423 instanceof Just) {
                return Prelude.compare(__dict_Ord_4)(_422.value0)(_423.value0);
            };
            if (_422 instanceof Nothing && _423 instanceof Nothing) {
                return Prelude.EQ.value;
            };
            if (_422 instanceof Nothing) {
                return Prelude.LT.value;
            };
            if (_423 instanceof Nothing) {
                return Prelude.GT.value;
            };
            throw new Error("Failed pattern match at Data.Maybe line 269, column 1 - line 275, column 1: " + [ _422.constructor.name, _423.constructor.name ]);
        };
    });
};
var boundedMaybe = function (__dict_Bounded_11) {
    return new Prelude.Bounded(Nothing.value, new Just(Prelude.top(__dict_Bounded_11)));
};
var boundedOrdMaybe = function (__dict_BoundedOrd_10) {
    return new Prelude.BoundedOrd(function () {
        return boundedMaybe(__dict_BoundedOrd_10["__superclass_Prelude.Bounded_0"]());
    }, function () {
        return ordMaybe(__dict_BoundedOrd_10["__superclass_Prelude.Ord_1"]());
    });
};
var applyMaybe = new Prelude.Apply(function () {
    return functorMaybe;
}, function (_414) {
    return function (x) {
        if (_414 instanceof Just) {
            return Prelude["<$>"](functorMaybe)(_414.value0)(x);
        };
        if (_414 instanceof Nothing) {
            return Nothing.value;
        };
        throw new Error("Failed pattern match at Data.Maybe line 121, column 1 - line 145, column 1: " + [ _414.constructor.name, x.constructor.name ]);
    };
});
var bindMaybe = new Prelude.Bind(function () {
    return applyMaybe;
}, function (_416) {
    return function (k) {
        if (_416 instanceof Just) {
            return k(_416.value0);
        };
        if (_416 instanceof Nothing) {
            return Nothing.value;
        };
        throw new Error("Failed pattern match at Data.Maybe line 180, column 1 - line 199, column 1: " + [ _416.constructor.name, k.constructor.name ]);
    };
});
var booleanAlgebraMaybe = function (__dict_BooleanAlgebra_12) {
    return new Prelude.BooleanAlgebra(function () {
        return boundedMaybe(__dict_BooleanAlgebra_12["__superclass_Prelude.Bounded_0"]());
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.conj(__dict_BooleanAlgebra_12))(x))(y);
        };
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.disj(__dict_BooleanAlgebra_12))(x))(y);
        };
    }, Prelude.map(functorMaybe)(Prelude.not(__dict_BooleanAlgebra_12)));
};
var semiringMaybe = function (__dict_Semiring_1) {
    return new Prelude.Semiring(function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.add(__dict_Semiring_1))(x))(y);
        };
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.mul(__dict_Semiring_1))(x))(y);
        };
    }, new Just(Prelude.one(__dict_Semiring_1)), new Just(Prelude.zero(__dict_Semiring_1)));
};
var moduloSemiringMaybe = function (__dict_ModuloSemiring_7) {
    return new Prelude.ModuloSemiring(function () {
        return semiringMaybe(__dict_ModuloSemiring_7["__superclass_Prelude.Semiring_0"]());
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.div(__dict_ModuloSemiring_7))(x))(y);
        };
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.mod(__dict_ModuloSemiring_7))(x))(y);
        };
    });
};
var ringMaybe = function (__dict_Ring_3) {
    return new Prelude.Ring(function () {
        return semiringMaybe(__dict_Ring_3["__superclass_Prelude.Semiring_0"]());
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.sub(__dict_Ring_3))(x))(y);
        };
    });
};
var divisionRingMaybe = function (__dict_DivisionRing_9) {
    return new Prelude.DivisionRing(function () {
        return moduloSemiringMaybe(__dict_DivisionRing_9["__superclass_Prelude.ModuloSemiring_1"]());
    }, function () {
        return ringMaybe(__dict_DivisionRing_9["__superclass_Prelude.Ring_0"]());
    });
};
var numMaybe = function (__dict_Num_5) {
    return new Prelude.Num(function () {
        return divisionRingMaybe(__dict_Num_5["__superclass_Prelude.DivisionRing_0"]());
    });
};
var applicativeMaybe = new Prelude.Applicative(function () {
    return applyMaybe;
}, Just.create);
var monadMaybe = new Prelude.Monad(function () {
    return applicativeMaybe;
}, function () {
    return bindMaybe;
});
var altMaybe = new Control_Alt.Alt(function () {
    return functorMaybe;
}, function (_415) {
    return function (r) {
        if (_415 instanceof Nothing) {
            return r;
        };
        return _415;
    };
});
var plusMaybe = new Control_Plus.Plus(function () {
    return altMaybe;
}, Nothing.value);
var alternativeMaybe = new Control_Alternative.Alternative(function () {
    return plusMaybe;
}, function () {
    return applicativeMaybe;
});
var monadPlusMaybe = new Control_MonadPlus.MonadPlus(function () {
    return alternativeMaybe;
}, function () {
    return monadMaybe;
});
module.exports = {
    Nothing: Nothing, 
    Just: Just, 
    isNothing: isNothing, 
    isJust: isJust, 
    "fromMaybe'": fromMaybe$prime, 
    fromMaybe: fromMaybe, 
    "maybe'": maybe$prime, 
    maybe: maybe, 
    functorMaybe: functorMaybe, 
    applyMaybe: applyMaybe, 
    applicativeMaybe: applicativeMaybe, 
    altMaybe: altMaybe, 
    plusMaybe: plusMaybe, 
    alternativeMaybe: alternativeMaybe, 
    bindMaybe: bindMaybe, 
    monadMaybe: monadMaybe, 
    monadPlusMaybe: monadPlusMaybe, 
    extendMaybe: extendMaybe, 
    invariantMaybe: invariantMaybe, 
    semigroupMaybe: semigroupMaybe, 
    monoidMaybe: monoidMaybe, 
    semiringMaybe: semiringMaybe, 
    moduloSemiringMaybe: moduloSemiringMaybe, 
    ringMaybe: ringMaybe, 
    divisionRingMaybe: divisionRingMaybe, 
    numMaybe: numMaybe, 
    eqMaybe: eqMaybe, 
    ordMaybe: ordMaybe, 
    boundedMaybe: boundedMaybe, 
    boundedOrdMaybe: boundedOrdMaybe, 
    booleanAlgebraMaybe: booleanAlgebraMaybe, 
    showMaybe: showMaybe
};

},{"Control.Alt":"c:\\Development\\Web\\jundo\\output\\Control.Alt\\index.js","Control.Alternative":"c:\\Development\\Web\\jundo\\output\\Control.Alternative\\index.js","Control.Extend":"c:\\Development\\Web\\jundo\\output\\Control.Extend\\index.js","Control.MonadPlus":"c:\\Development\\Web\\jundo\\output\\Control.MonadPlus\\index.js","Control.Plus":"c:\\Development\\Web\\jundo\\output\\Control.Plus\\index.js","Data.Functor.Invariant":"c:\\Development\\Web\\jundo\\output\\Data.Functor.Invariant\\index.js","Data.Monoid":"c:\\Development\\Web\\jundo\\output\\Data.Monoid\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Monoid.Additive\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Monoid = require("Data.Monoid");
var Additive = function (x) {
    return x;
};
var showAdditive = function (__dict_Show_0) {
    return new Prelude.Show(function (_318) {
        return "Additive (" + (Prelude.show(__dict_Show_0)(_318) + ")");
    });
};
var semigroupAdditive = function (__dict_Semiring_1) {
    return new Prelude.Semigroup(function (_319) {
        return function (_320) {
            return Prelude["+"](__dict_Semiring_1)(_319)(_320);
        };
    });
};
var runAdditive = function (_307) {
    return _307;
};
var monoidAdditive = function (__dict_Semiring_3) {
    return new Data_Monoid.Monoid(function () {
        return semigroupAdditive(__dict_Semiring_3);
    }, Prelude.zero(__dict_Semiring_3));
};
var invariantAdditive = new Data_Functor_Invariant.Invariant(function (f) {
    return function (_316) {
        return function (_317) {
            return f(_317);
        };
    };
});
var functorAdditive = new Prelude.Functor(function (f) {
    return function (_312) {
        return f(_312);
    };
});
var extendAdditive = new Control_Extend.Extend(function () {
    return functorAdditive;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqAdditive = function (__dict_Eq_4) {
    return new Prelude.Eq(function (_308) {
        return function (_309) {
            return Prelude["=="](__dict_Eq_4)(_308)(_309);
        };
    });
};
var ordAdditive = function (__dict_Ord_2) {
    return new Prelude.Ord(function () {
        return eqAdditive(__dict_Ord_2["__superclass_Prelude.Eq_0"]());
    }, function (_310) {
        return function (_311) {
            return Prelude.compare(__dict_Ord_2)(_310)(_311);
        };
    });
};
var comonadAdditive = new Control_Comonad.Comonad(function () {
    return extendAdditive;
}, runAdditive);
var applyAdditive = new Prelude.Apply(function () {
    return functorAdditive;
}, function (_313) {
    return function (_314) {
        return _313(_314);
    };
});
var bindAdditive = new Prelude.Bind(function () {
    return applyAdditive;
}, function (_315) {
    return function (f) {
        return f(_315);
    };
});
var applicativeAdditive = new Prelude.Applicative(function () {
    return applyAdditive;
}, Additive);
var monadAdditive = new Prelude.Monad(function () {
    return applicativeAdditive;
}, function () {
    return bindAdditive;
});
module.exports = {
    Additive: Additive, 
    runAdditive: runAdditive, 
    eqAdditive: eqAdditive, 
    ordAdditive: ordAdditive, 
    functorAdditive: functorAdditive, 
    applyAdditive: applyAdditive, 
    applicativeAdditive: applicativeAdditive, 
    bindAdditive: bindAdditive, 
    monadAdditive: monadAdditive, 
    extendAdditive: extendAdditive, 
    comonadAdditive: comonadAdditive, 
    invariantAdditive: invariantAdditive, 
    showAdditive: showAdditive, 
    semigroupAdditive: semigroupAdditive, 
    monoidAdditive: monoidAdditive
};

},{"Control.Comonad":"c:\\Development\\Web\\jundo\\output\\Control.Comonad\\index.js","Control.Extend":"c:\\Development\\Web\\jundo\\output\\Control.Extend\\index.js","Data.Functor.Invariant":"c:\\Development\\Web\\jundo\\output\\Data.Functor.Invariant\\index.js","Data.Monoid":"c:\\Development\\Web\\jundo\\output\\Data.Monoid\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Monoid.Conj\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Monoid = require("Data.Monoid");
var Conj = function (x) {
    return x;
};
var showConj = function (__dict_Show_0) {
    return new Prelude.Show(function (_330) {
        return "Conj (" + (Prelude.show(__dict_Show_0)(_330) + ")");
    });
};
var semiringConj = function (__dict_BooleanAlgebra_1) {
    return new Prelude.Semiring(function (_333) {
        return function (_334) {
            return Prelude.conj(__dict_BooleanAlgebra_1)(_333)(_334);
        };
    }, function (_335) {
        return function (_336) {
            return Prelude.disj(__dict_BooleanAlgebra_1)(_335)(_336);
        };
    }, Prelude.bottom(__dict_BooleanAlgebra_1["__superclass_Prelude.Bounded_0"]()), Prelude.top(__dict_BooleanAlgebra_1["__superclass_Prelude.Bounded_0"]()));
};
var semigroupConj = function (__dict_BooleanAlgebra_2) {
    return new Prelude.Semigroup(function (_331) {
        return function (_332) {
            return Prelude.conj(__dict_BooleanAlgebra_2)(_331)(_332);
        };
    });
};
var runConj = function (_321) {
    return _321;
};
var monoidConj = function (__dict_BooleanAlgebra_4) {
    return new Data_Monoid.Monoid(function () {
        return semigroupConj(__dict_BooleanAlgebra_4);
    }, Prelude.top(__dict_BooleanAlgebra_4["__superclass_Prelude.Bounded_0"]()));
};
var functorConj = new Prelude.Functor(function (f) {
    return function (_326) {
        return f(_326);
    };
});
var extendConj = new Control_Extend.Extend(function () {
    return functorConj;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqConj = function (__dict_Eq_5) {
    return new Prelude.Eq(function (_322) {
        return function (_323) {
            return Prelude["=="](__dict_Eq_5)(_322)(_323);
        };
    });
};
var ordConj = function (__dict_Ord_3) {
    return new Prelude.Ord(function () {
        return eqConj(__dict_Ord_3["__superclass_Prelude.Eq_0"]());
    }, function (_324) {
        return function (_325) {
            return Prelude.compare(__dict_Ord_3)(_324)(_325);
        };
    });
};
var comonadConj = new Control_Comonad.Comonad(function () {
    return extendConj;
}, runConj);
var boundedConj = function (__dict_Bounded_6) {
    return new Prelude.Bounded(Prelude.bottom(__dict_Bounded_6), Prelude.top(__dict_Bounded_6));
};
var applyConj = new Prelude.Apply(function () {
    return functorConj;
}, function (_327) {
    return function (_328) {
        return _327(_328);
    };
});
var bindConj = new Prelude.Bind(function () {
    return applyConj;
}, function (_329) {
    return function (f) {
        return f(_329);
    };
});
var applicativeConj = new Prelude.Applicative(function () {
    return applyConj;
}, Conj);
var monadConj = new Prelude.Monad(function () {
    return applicativeConj;
}, function () {
    return bindConj;
});
module.exports = {
    Conj: Conj, 
    runConj: runConj, 
    eqConj: eqConj, 
    ordConj: ordConj, 
    boundedConj: boundedConj, 
    functorConj: functorConj, 
    applyConj: applyConj, 
    applicativeConj: applicativeConj, 
    bindConj: bindConj, 
    monadConj: monadConj, 
    extendConj: extendConj, 
    comonadConj: comonadConj, 
    showConj: showConj, 
    semigroupConj: semigroupConj, 
    monoidConj: monoidConj, 
    semiringConj: semiringConj
};

},{"Control.Comonad":"c:\\Development\\Web\\jundo\\output\\Control.Comonad\\index.js","Control.Extend":"c:\\Development\\Web\\jundo\\output\\Control.Extend\\index.js","Data.Monoid":"c:\\Development\\Web\\jundo\\output\\Data.Monoid\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Monoid.Disj\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Monoid = require("Data.Monoid");
var Disj = function (x) {
    return x;
};
var showDisj = function (__dict_Show_0) {
    return new Prelude.Show(function (_346) {
        return "Disj (" + (Prelude.show(__dict_Show_0)(_346) + ")");
    });
};
var semiringDisj = function (__dict_BooleanAlgebra_1) {
    return new Prelude.Semiring(function (_349) {
        return function (_350) {
            return Prelude.disj(__dict_BooleanAlgebra_1)(_349)(_350);
        };
    }, function (_351) {
        return function (_352) {
            return Prelude.conj(__dict_BooleanAlgebra_1)(_351)(_352);
        };
    }, Prelude.top(__dict_BooleanAlgebra_1["__superclass_Prelude.Bounded_0"]()), Prelude.bottom(__dict_BooleanAlgebra_1["__superclass_Prelude.Bounded_0"]()));
};
var semigroupDisj = function (__dict_BooleanAlgebra_2) {
    return new Prelude.Semigroup(function (_347) {
        return function (_348) {
            return Prelude.disj(__dict_BooleanAlgebra_2)(_347)(_348);
        };
    });
};
var runDisj = function (_337) {
    return _337;
};
var monoidDisj = function (__dict_BooleanAlgebra_4) {
    return new Data_Monoid.Monoid(function () {
        return semigroupDisj(__dict_BooleanAlgebra_4);
    }, Prelude.bottom(__dict_BooleanAlgebra_4["__superclass_Prelude.Bounded_0"]()));
};
var functorDisj = new Prelude.Functor(function (f) {
    return function (_342) {
        return f(_342);
    };
});
var extendDisj = new Control_Extend.Extend(function () {
    return functorDisj;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqDisj = function (__dict_Eq_5) {
    return new Prelude.Eq(function (_338) {
        return function (_339) {
            return Prelude["=="](__dict_Eq_5)(_338)(_339);
        };
    });
};
var ordDisj = function (__dict_Ord_3) {
    return new Prelude.Ord(function () {
        return eqDisj(__dict_Ord_3["__superclass_Prelude.Eq_0"]());
    }, function (_340) {
        return function (_341) {
            return Prelude.compare(__dict_Ord_3)(_340)(_341);
        };
    });
};
var comonadDisj = new Control_Comonad.Comonad(function () {
    return extendDisj;
}, runDisj);
var boundedDisj = function (__dict_Bounded_6) {
    return new Prelude.Bounded(Prelude.bottom(__dict_Bounded_6), Prelude.top(__dict_Bounded_6));
};
var applyDisj = new Prelude.Apply(function () {
    return functorDisj;
}, function (_343) {
    return function (_344) {
        return _343(_344);
    };
});
var bindDisj = new Prelude.Bind(function () {
    return applyDisj;
}, function (_345) {
    return function (f) {
        return f(_345);
    };
});
var applicativeDisj = new Prelude.Applicative(function () {
    return applyDisj;
}, Disj);
var monadDisj = new Prelude.Monad(function () {
    return applicativeDisj;
}, function () {
    return bindDisj;
});
module.exports = {
    Disj: Disj, 
    runDisj: runDisj, 
    eqDisj: eqDisj, 
    ordDisj: ordDisj, 
    boundedDisj: boundedDisj, 
    functorDisj: functorDisj, 
    applyDisj: applyDisj, 
    applicativeDisj: applicativeDisj, 
    bindDisj: bindDisj, 
    monadDisj: monadDisj, 
    extendDisj: extendDisj, 
    comonadDisj: comonadDisj, 
    showDisj: showDisj, 
    semigroupDisj: semigroupDisj, 
    monoidDisj: monoidDisj, 
    semiringDisj: semiringDisj
};

},{"Control.Comonad":"c:\\Development\\Web\\jundo\\output\\Control.Comonad\\index.js","Control.Extend":"c:\\Development\\Web\\jundo\\output\\Control.Extend\\index.js","Data.Monoid":"c:\\Development\\Web\\jundo\\output\\Data.Monoid\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Monoid.Dual\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Monoid = require("Data.Monoid");
var Dual = function (x) {
    return x;
};
var showDual = function (__dict_Show_0) {
    return new Prelude.Show(function (_364) {
        return "Dual (" + (Prelude.show(__dict_Show_0)(_364) + ")");
    });
};
var semigroupDual = function (__dict_Semigroup_1) {
    return new Prelude.Semigroup(function (_365) {
        return function (_366) {
            return Prelude["<>"](__dict_Semigroup_1)(_366)(_365);
        };
    });
};
var runDual = function (_353) {
    return _353;
};
var monoidDual = function (__dict_Monoid_3) {
    return new Data_Monoid.Monoid(function () {
        return semigroupDual(__dict_Monoid_3["__superclass_Prelude.Semigroup_0"]());
    }, Data_Monoid.mempty(__dict_Monoid_3));
};
var invariantDual = new Data_Functor_Invariant.Invariant(function (f) {
    return function (_362) {
        return function (_363) {
            return f(_363);
        };
    };
});
var functorDual = new Prelude.Functor(function (f) {
    return function (_358) {
        return f(_358);
    };
});
var extendDual = new Control_Extend.Extend(function () {
    return functorDual;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqDual = function (__dict_Eq_4) {
    return new Prelude.Eq(function (_354) {
        return function (_355) {
            return Prelude["=="](__dict_Eq_4)(_354)(_355);
        };
    });
};
var ordDual = function (__dict_Ord_2) {
    return new Prelude.Ord(function () {
        return eqDual(__dict_Ord_2["__superclass_Prelude.Eq_0"]());
    }, function (_356) {
        return function (_357) {
            return Prelude.compare(__dict_Ord_2)(_356)(_357);
        };
    });
};
var comonadDual = new Control_Comonad.Comonad(function () {
    return extendDual;
}, runDual);
var applyDual = new Prelude.Apply(function () {
    return functorDual;
}, function (_359) {
    return function (_360) {
        return _359(_360);
    };
});
var bindDual = new Prelude.Bind(function () {
    return applyDual;
}, function (_361) {
    return function (f) {
        return f(_361);
    };
});
var applicativeDual = new Prelude.Applicative(function () {
    return applyDual;
}, Dual);
var monadDual = new Prelude.Monad(function () {
    return applicativeDual;
}, function () {
    return bindDual;
});
module.exports = {
    Dual: Dual, 
    runDual: runDual, 
    eqDual: eqDual, 
    ordDual: ordDual, 
    functorDual: functorDual, 
    applyDual: applyDual, 
    applicativeDual: applicativeDual, 
    bindDual: bindDual, 
    monadDual: monadDual, 
    extendDual: extendDual, 
    comonadDual: comonadDual, 
    invariantDual: invariantDual, 
    showDual: showDual, 
    semigroupDual: semigroupDual, 
    monoidDual: monoidDual
};

},{"Control.Comonad":"c:\\Development\\Web\\jundo\\output\\Control.Comonad\\index.js","Control.Extend":"c:\\Development\\Web\\jundo\\output\\Control.Extend\\index.js","Data.Functor.Invariant":"c:\\Development\\Web\\jundo\\output\\Data.Functor.Invariant\\index.js","Data.Monoid":"c:\\Development\\Web\\jundo\\output\\Data.Monoid\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Monoid.Multiplicative\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Monoid = require("Data.Monoid");
var Multiplicative = function (x) {
    return x;
};
var showMultiplicative = function (__dict_Show_0) {
    return new Prelude.Show(function (_378) {
        return "Multiplicative (" + (Prelude.show(__dict_Show_0)(_378) + ")");
    });
};
var semigroupMultiplicative = function (__dict_Semiring_1) {
    return new Prelude.Semigroup(function (_379) {
        return function (_380) {
            return Prelude["*"](__dict_Semiring_1)(_379)(_380);
        };
    });
};
var runMultiplicative = function (_367) {
    return _367;
};
var monoidMultiplicative = function (__dict_Semiring_3) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMultiplicative(__dict_Semiring_3);
    }, Prelude.one(__dict_Semiring_3));
};
var invariantMultiplicative = new Data_Functor_Invariant.Invariant(function (f) {
    return function (_376) {
        return function (_377) {
            return f(_377);
        };
    };
});
var functorMultiplicative = new Prelude.Functor(function (f) {
    return function (_372) {
        return f(_372);
    };
});
var extendMultiplicative = new Control_Extend.Extend(function () {
    return functorMultiplicative;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqMultiplicative = function (__dict_Eq_4) {
    return new Prelude.Eq(function (_368) {
        return function (_369) {
            return Prelude["=="](__dict_Eq_4)(_368)(_369);
        };
    });
};
var ordMultiplicative = function (__dict_Ord_2) {
    return new Prelude.Ord(function () {
        return eqMultiplicative(__dict_Ord_2["__superclass_Prelude.Eq_0"]());
    }, function (_370) {
        return function (_371) {
            return Prelude.compare(__dict_Ord_2)(_370)(_371);
        };
    });
};
var comonadMultiplicative = new Control_Comonad.Comonad(function () {
    return extendMultiplicative;
}, runMultiplicative);
var applyMultiplicative = new Prelude.Apply(function () {
    return functorMultiplicative;
}, function (_373) {
    return function (_374) {
        return _373(_374);
    };
});
var bindMultiplicative = new Prelude.Bind(function () {
    return applyMultiplicative;
}, function (_375) {
    return function (f) {
        return f(_375);
    };
});
var applicativeMultiplicative = new Prelude.Applicative(function () {
    return applyMultiplicative;
}, Multiplicative);
var monadMultiplicative = new Prelude.Monad(function () {
    return applicativeMultiplicative;
}, function () {
    return bindMultiplicative;
});
module.exports = {
    Multiplicative: Multiplicative, 
    runMultiplicative: runMultiplicative, 
    eqMultiplicative: eqMultiplicative, 
    ordMultiplicative: ordMultiplicative, 
    functorMultiplicative: functorMultiplicative, 
    applyMultiplicative: applyMultiplicative, 
    applicativeMultiplicative: applicativeMultiplicative, 
    bindMultiplicative: bindMultiplicative, 
    monadMultiplicative: monadMultiplicative, 
    extendMultiplicative: extendMultiplicative, 
    comonadMultiplicative: comonadMultiplicative, 
    invariantMultiplicative: invariantMultiplicative, 
    showMultiplicative: showMultiplicative, 
    semigroupMultiplicative: semigroupMultiplicative, 
    monoidMultiplicative: monoidMultiplicative
};

},{"Control.Comonad":"c:\\Development\\Web\\jundo\\output\\Control.Comonad\\index.js","Control.Extend":"c:\\Development\\Web\\jundo\\output\\Control.Extend\\index.js","Data.Functor.Invariant":"c:\\Development\\Web\\jundo\\output\\Data.Functor.Invariant\\index.js","Data.Monoid":"c:\\Development\\Web\\jundo\\output\\Data.Monoid\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Monoid\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Monoid = function (__superclass_Prelude$dotSemigroup_0, mempty) {
    this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
    this.mempty = mempty;
};
var monoidUnit = new Monoid(function () {
    return Prelude.semigroupUnit;
}, Prelude.unit);
var monoidString = new Monoid(function () {
    return Prelude.semigroupString;
}, "");
var monoidArray = new Monoid(function () {
    return Prelude.semigroupArray;
}, [  ]);
var mempty = function (dict) {
    return dict.mempty;
};
var monoidFn = function (__dict_Monoid_0) {
    return new Monoid(function () {
        return Prelude.semigroupFn(__dict_Monoid_0["__superclass_Prelude.Semigroup_0"]());
    }, Prelude["const"](mempty(__dict_Monoid_0)));
};
module.exports = {
    Monoid: Monoid, 
    mempty: mempty, 
    monoidUnit: monoidUnit, 
    monoidFn: monoidFn, 
    monoidString: monoidString, 
    monoidArray: monoidArray
};

},{"Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.NaturalTransformation\\index.js":[function(require,module,exports){
arguments[4]["c:\\Development\\Web\\jundo\\output\\DOM\\index.js"][0].apply(exports,arguments)
},{}],"c:\\Development\\Web\\jundo\\output\\Data.Nullable\\foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Nullable

exports["null"] = null;

exports.nullable = function(a, r, f) {
    return a == null ? r : f(a);
};

exports.notNull = function(x) {
    return x;
}; 

},{}],"c:\\Development\\Web\\jundo\\output\\Data.Nullable\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Function = require("Data.Function");
var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
var toMaybe = function (n) {
    return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
};
var showNullable = function (__dict_Show_0) {
    return new Prelude.Show(function (n) {
        var _1513 = toMaybe(n);
        if (_1513 instanceof Data_Maybe.Nothing) {
            return "null";
        };
        if (_1513 instanceof Data_Maybe.Just) {
            return Prelude.show(__dict_Show_0)(_1513.value0);
        };
        throw new Error("Failed pattern match at Data.Nullable line 37, column 1 - line 42, column 1: " + [ _1513.constructor.name ]);
    });
};
var eqNullable = function (__dict_Eq_2) {
    return new Prelude.Eq(Data_Function.on(Prelude.eq(Data_Maybe.eqMaybe(__dict_Eq_2)))(toMaybe));
};
var ordNullable = function (__dict_Ord_1) {
    return new Prelude.Ord(function () {
        return eqNullable(__dict_Ord_1["__superclass_Prelude.Eq_0"]());
    }, Data_Function.on(Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_1)))(toMaybe));
};
module.exports = {
    toNullable: toNullable, 
    toMaybe: toMaybe, 
    showNullable: showNullable, 
    eqNullable: eqNullable, 
    ordNullable: ordNullable
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\Data.Nullable\\foreign.js","Data.Function":"c:\\Development\\Web\\jundo\\output\\Data.Function\\index.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.String.Unsafe\\foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.String.Unsafe

exports.charCodeAt = function (i) {
  return function (s) {
    if (i >= 0 && i < s.length) return s.charCodeAt(i);
    throw new Error("Data.String.Unsafe.charCodeAt: Invalid index.");
  };
};

exports.charAt = function (i) {
  return function (s) {
    if (i >= 0 && i < s.length) return s.charAt(i);
    throw new Error("Data.String.Unsafe.charAt: Invalid index.");
  };
};

exports.char = function (s) {
  if (s.length === 1) return s.charAt(0);
  throw new Error("Data.String.Unsafe.char: Expected string of length 1.");
};

},{}],"c:\\Development\\Web\\jundo\\output\\Data.String.Unsafe\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Data_Char = require("Data.Char");
module.exports = {
    charCodeAt: $foreign.charCodeAt, 
    charAt: $foreign.charAt, 
    "char": $foreign["char"]
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\Data.String.Unsafe\\foreign.js","Data.Char":"c:\\Development\\Web\\jundo\\output\\Data.Char\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.String\\foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.String

exports._charAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (s) {
        return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
      };
    };
  };
};

exports._charCodeAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (s) {
        return i >= 0 && i < s.length ? just(s.charCodeAt(i)) : nothing;
      };
    };
  };
};

exports._toChar = function (just) {
  return function (nothing) {
    return function (s) {
      return s.length === 1 ? just(s) : nothing;
    };
  };
};

exports.fromCharArray = function (a) {
  return a.join("");
};

exports._indexOf = function (just) {
  return function (nothing) {
    return function (x) {
      return function (s) {
        var i = s.indexOf(x);
        return i === -1 ? nothing : just(i);
      };
    };
  };
};

exports["_indexOf'"] = function (just) {
  return function (nothing) {
    return function (x) {
      return function (startAt) {
        return function (s) {
          if (startAt < 0 || startAt > s.length) return nothing;
          var i = s.indexOf(x, startAt);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };
};

exports._lastIndexOf = function (just) {
  return function (nothing) {
    return function (x) {
      return function (s) {
        var i = s.lastIndexOf(x);
        return i === -1 ? nothing : just(i);
      };
    };
  };
};

exports["_lastIndexOf'"] = function (just) {
  return function (nothing) {
    return function (x) {
      return function (startAt) {
        return function (s) {
          if (startAt < 0 || startAt > s.length) return nothing;
          var i = s.lastIndexOf(x, startAt);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };
};

exports.length = function (s) {
  return s.length;
};

exports._localeCompare = function (lt) {
  return function (eq) {
    return function (gt) {
      return function (s1) {
        return function (s2) {
          var result = s1.localeCompare(s2);
          return result < 0 ? lt : result > 0 ? gt : eq;
        };
      };
    };
  };
};

exports.replace = function (s1) {
  return function (s2) {
    return function (s3) {
      return s3.replace(s1, s2);
    };
  };
};

exports.take = function (n) {
  return function (s) {
    return s.substr(0, n);
  };
};

exports.drop = function (n) {
  return function (s) {
    return s.substr(n);
  };
};

exports.count = function (p) {
  return function (s) {
    for (var i = 0; i < s.length && p(s.charAt(i)); i++); {}
    return i;
  };
};

exports.split = function (sep) {
  return function (s) {
    return s.split(sep);
  };
};

exports.toCharArray = function (s) {
  return s.split("");
};

exports.toLower = function (s) {
  return s.toLowerCase();
};

exports.toUpper = function (s) {
  return s.toUpperCase();
};

exports.trim = function (s) {
  return s.trim();
};

exports.joinWith = function (s) {
  return function (xs) {
    return xs.join(s);
  };
};

},{}],"c:\\Development\\Web\\jundo\\output\\Data.String\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Char = require("Data.Char");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var Data_String_Unsafe = require("Data.String.Unsafe");
var uncons = function (_475) {
    if (_475 === "") {
        return Data_Maybe.Nothing.value;
    };
    return new Data_Maybe.Just({
        head: Data_String_Unsafe.charAt(0)(_475), 
        tail: $foreign.drop(1)(_475)
    });
};
var toChar = $foreign._toChar(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var takeWhile = function (p) {
    return function (s) {
        return $foreign.take($foreign.count(p)(s))(s);
    };
};
var $$null = function (s) {
    return $foreign.length(s) === 0;
};
var localeCompare = $foreign._localeCompare(Prelude.LT.value)(Prelude.EQ.value)(Prelude.GT.value);
var lastIndexOf$prime = $foreign["_lastIndexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var lastIndexOf = $foreign._lastIndexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var stripSuffix = function (suffix) {
    return function (str) {
        var _1516 = lastIndexOf(suffix)(str);
        if (_1516 instanceof Data_Maybe.Just && _1516.value0 === $foreign.length(str) - $foreign.length(suffix)) {
            return Data_Maybe.Just.create($foreign.take(_1516.value0)(str));
        };
        return Data_Maybe.Nothing.value;
    };
};
var indexOf$prime = $foreign["_indexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var indexOf = $foreign._indexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var stripPrefix = function (prefix) {
    return function (str) {
        var _1518 = indexOf(prefix)(str);
        if (_1518 instanceof Data_Maybe.Just && _1518.value0 === 0) {
            return Data_Maybe.Just.create($foreign.drop($foreign.length(prefix))(str));
        };
        return Data_Maybe.Nothing.value;
    };
};
var fromChar = Data_Char.toString;
var singleton = fromChar;
var dropWhile = function (p) {
    return function (s) {
        return $foreign.drop($foreign.count(p)(s))(s);
    };
};
var contains = function (x) {
    return function (s) {
        return Data_Maybe.isJust(indexOf(x)(s));
    };
};
var charCodeAt = $foreign._charCodeAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var charAt = $foreign._charAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
module.exports = {
    stripSuffix: stripSuffix, 
    stripPrefix: stripPrefix, 
    dropWhile: dropWhile, 
    takeWhile: takeWhile, 
    localeCompare: localeCompare, 
    singleton: singleton, 
    uncons: uncons, 
    "null": $$null, 
    "lastIndexOf'": lastIndexOf$prime, 
    lastIndexOf: lastIndexOf, 
    "indexOf'": indexOf$prime, 
    indexOf: indexOf, 
    contains: contains, 
    toChar: toChar, 
    fromChar: fromChar, 
    charCodeAt: charCodeAt, 
    charAt: charAt, 
    joinWith: $foreign.joinWith, 
    trim: $foreign.trim, 
    toUpper: $foreign.toUpper, 
    toLower: $foreign.toLower, 
    toCharArray: $foreign.toCharArray, 
    split: $foreign.split, 
    drop: $foreign.drop, 
    take: $foreign.take, 
    count: $foreign.count, 
    replace: $foreign.replace, 
    length: $foreign.length, 
    fromCharArray: $foreign.fromCharArray
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\Data.String\\foreign.js","Data.Char":"c:\\Development\\Web\\jundo\\output\\Data.Char\\index.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js","Data.Monoid":"c:\\Development\\Web\\jundo\\output\\Data.Monoid\\index.js","Data.String.Unsafe":"c:\\Development\\Web\\jundo\\output\\Data.String.Unsafe\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Time\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Seconds = function (x) {
    return x;
};
var SecondOfMinute = function (x) {
    return x;
};
var Minutes = function (x) {
    return x;
};
var MinuteOfHour = function (x) {
    return x;
};
var Milliseconds = function (x) {
    return x;
};
var MillisecondOfSecond = function (x) {
    return x;
};
var Hours = function (x) {
    return x;
};
var HourOfDay = function (x) {
    return x;
};
var TimeValue = function (fromHours, fromMilliseconds, fromMinutes, fromSeconds, toHours, toMilliseconds, toMinutes, toSeconds) {
    this.fromHours = fromHours;
    this.fromMilliseconds = fromMilliseconds;
    this.fromMinutes = fromMinutes;
    this.fromSeconds = fromSeconds;
    this.toHours = toHours;
    this.toMilliseconds = toMilliseconds;
    this.toMinutes = toMinutes;
    this.toSeconds = toSeconds;
};
var toSeconds = function (dict) {
    return dict.toSeconds;
};
var toMinutes = function (dict) {
    return dict.toMinutes;
};
var toMilliseconds = function (dict) {
    return dict.toMilliseconds;
};
var toHours = function (dict) {
    return dict.toHours;
};
var timeValueSeconds = new TimeValue(function (_258) {
    return _258 * 3600.0;
}, function (_260) {
    return _260 / 1000.0;
}, function (_259) {
    return _259 * 60.0;
}, function (n) {
    return n;
}, function (_255) {
    return _255 / 3600.0;
}, function (_257) {
    return _257 * 1000.0;
}, function (_256) {
    return _256 / 60.0;
}, function (n) {
    return n;
});
var timeValueMinutes = new TimeValue(function (_252) {
    return _252 * 60.0;
}, function (_254) {
    return _254 / 60000.0;
}, function (n) {
    return n;
}, function (_253) {
    return _253 / 60.0;
}, function (_249) {
    return _249 / 60.0;
}, function (_251) {
    return _251 * 60000.0;
}, function (n) {
    return n;
}, function (_250) {
    return _250 * 60.0;
});
var timeValueMilliseconds = new TimeValue(function (_264) {
    return _264 * 3600000.0;
}, function (n) {
    return n;
}, function (_265) {
    return _265 * 60000.0;
}, function (_266) {
    return _266 * 1000.0;
}, function (_261) {
    return _261 / 3600000.0;
}, function (n) {
    return n;
}, function (_262) {
    return _262 / 60000.0;
}, function (_263) {
    return _263 / 1000.0;
});
var timeValueHours = new TimeValue(function (n) {
    return n;
}, function (_248) {
    return _248 / 3600000.0;
}, function (_246) {
    return _246 / 60.0;
}, function (_247) {
    return _247 / 3600.0;
}, function (n) {
    return n;
}, function (_245) {
    return _245 * 3600000.0;
}, function (_243) {
    return _243 * 60.0;
}, function (_244) {
    return _244 * 3600.0;
});
var showSeconds = new Prelude.Show(function (_223) {
    return "(Seconds " + (Prelude.show(Prelude.showNumber)(_223) + ")");
});
var showMinutes = new Prelude.Show(function (_204) {
    return "(Minutes " + (Prelude.show(Prelude.showNumber)(_204) + ")");
});
var showMilliseconds = new Prelude.Show(function (_242) {
    return "(Milliseconds " + (Prelude.show(Prelude.showNumber)(_242) + ")");
});
var showHours = new Prelude.Show(function (_185) {
    return "(Hours " + (Prelude.show(Prelude.showNumber)(_185) + ")");
});
var semiringSeconds = new Prelude.Semiring(function (_213) {
    return function (_214) {
        return _213 + _214;
    };
}, function (_215) {
    return function (_216) {
        return _215 * _216;
    };
}, 1.0, 0.0);
var semiringMinutes = new Prelude.Semiring(function (_194) {
    return function (_195) {
        return _194 + _195;
    };
}, function (_196) {
    return function (_197) {
        return _196 * _197;
    };
}, 1.0, 0.0);
var semiringMilliseconds = new Prelude.Semiring(function (_232) {
    return function (_233) {
        return _232 + _233;
    };
}, function (_234) {
    return function (_235) {
        return _234 * _235;
    };
}, 1.0, 0.0);
var semiringHours = new Prelude.Semiring(function (_175) {
    return function (_176) {
        return _175 + _176;
    };
}, function (_177) {
    return function (_178) {
        return _177 * _178;
    };
}, 1.0, 0.0);
var ringSeconds = new Prelude.Ring(function () {
    return semiringSeconds;
}, function (_217) {
    return function (_218) {
        return _217 - _218;
    };
});
var ringMinutes = new Prelude.Ring(function () {
    return semiringMinutes;
}, function (_198) {
    return function (_199) {
        return _198 - _199;
    };
});
var ringMilliseconds = new Prelude.Ring(function () {
    return semiringMilliseconds;
}, function (_236) {
    return function (_237) {
        return _236 - _237;
    };
});
var ringHours = new Prelude.Ring(function () {
    return semiringHours;
}, function (_179) {
    return function (_180) {
        return _179 - _180;
    };
});
var moduloSemiringSeconds = new Prelude.ModuloSemiring(function () {
    return semiringSeconds;
}, function (_219) {
    return function (_220) {
        return _219 / _220;
    };
}, function (_221) {
    return function (_222) {
        return 0.0;
    };
});
var moduloSemiringMinutes = new Prelude.ModuloSemiring(function () {
    return semiringMinutes;
}, function (_200) {
    return function (_201) {
        return _200 / _201;
    };
}, function (_202) {
    return function (_203) {
        return 0.0;
    };
});
var moduloSemiringMilliseconds = new Prelude.ModuloSemiring(function () {
    return semiringMilliseconds;
}, function (_238) {
    return function (_239) {
        return _238 / _239;
    };
}, function (_240) {
    return function (_241) {
        return 0.0;
    };
});
var moduloSemiringHours = new Prelude.ModuloSemiring(function () {
    return semiringHours;
}, function (_181) {
    return function (_182) {
        return _181 / _182;
    };
}, function (_183) {
    return function (_184) {
        return 0.0;
    };
});
var fromSeconds = function (dict) {
    return dict.fromSeconds;
};
var fromMinutes = function (dict) {
    return dict.fromMinutes;
};
var fromMilliseconds = function (dict) {
    return dict.fromMilliseconds;
};
var fromHours = function (dict) {
    return dict.fromHours;
};
var eqSeconds = new Prelude.Eq(function (_209) {
    return function (_210) {
        return _209 === _210;
    };
});
var ordSeconds = new Prelude.Ord(function () {
    return eqSeconds;
}, function (_211) {
    return function (_212) {
        return Prelude.compare(Prelude.ordNumber)(_211)(_212);
    };
});
var eqSecondOfMinute = new Prelude.Eq(function (_205) {
    return function (_206) {
        return _205 === _206;
    };
});
var ordSecondOfMinute = new Prelude.Ord(function () {
    return eqSecondOfMinute;
}, function (_207) {
    return function (_208) {
        return Prelude.compare(Prelude.ordInt)(_207)(_208);
    };
});
var eqMinutes = new Prelude.Eq(function (_190) {
    return function (_191) {
        return _190 === _191;
    };
});
var ordMinutes = new Prelude.Ord(function () {
    return eqMinutes;
}, function (_192) {
    return function (_193) {
        return Prelude.compare(Prelude.ordNumber)(_192)(_193);
    };
});
var eqMinuteOfHour = new Prelude.Eq(function (_186) {
    return function (_187) {
        return _186 === _187;
    };
});
var ordMinuteOfHour = new Prelude.Ord(function () {
    return eqMinuteOfHour;
}, function (_188) {
    return function (_189) {
        return Prelude.compare(Prelude.ordInt)(_188)(_189);
    };
});
var eqMilliseconds = new Prelude.Eq(function (_228) {
    return function (_229) {
        return _228 === _229;
    };
});
var ordMilliseconds = new Prelude.Ord(function () {
    return eqMilliseconds;
}, function (_230) {
    return function (_231) {
        return Prelude.compare(Prelude.ordNumber)(_230)(_231);
    };
});
var eqMillisecondOfSecond = new Prelude.Eq(function (_224) {
    return function (_225) {
        return _224 === _225;
    };
});
var ordMillisecondOfSecond = new Prelude.Ord(function () {
    return eqMillisecondOfSecond;
}, function (_226) {
    return function (_227) {
        return Prelude.compare(Prelude.ordInt)(_226)(_227);
    };
});
var eqHours = new Prelude.Eq(function (_171) {
    return function (_172) {
        return _171 === _172;
    };
});
var ordHours = new Prelude.Ord(function () {
    return eqHours;
}, function (_173) {
    return function (_174) {
        return Prelude.compare(Prelude.ordNumber)(_173)(_174);
    };
});
var eqHourOfDay = new Prelude.Eq(function (_167) {
    return function (_168) {
        return _167 === _168;
    };
});
var ordHourOfDay = new Prelude.Ord(function () {
    return eqHourOfDay;
}, function (_169) {
    return function (_170) {
        return Prelude.compare(Prelude.ordInt)(_169)(_170);
    };
});
var divisionRingSeconds = new Prelude.DivisionRing(function () {
    return moduloSemiringSeconds;
}, function () {
    return ringSeconds;
});
var numSeconds = new Prelude.Num(function () {
    return divisionRingSeconds;
});
var divisionRingMinutes = new Prelude.DivisionRing(function () {
    return moduloSemiringMinutes;
}, function () {
    return ringMinutes;
});
var numMinutes = new Prelude.Num(function () {
    return divisionRingMinutes;
});
var divisionRingMilliseconds = new Prelude.DivisionRing(function () {
    return moduloSemiringMilliseconds;
}, function () {
    return ringMilliseconds;
});
var numMilliseconds = new Prelude.Num(function () {
    return divisionRingMilliseconds;
});
var divisionRingHours = new Prelude.DivisionRing(function () {
    return moduloSemiringHours;
}, function () {
    return ringHours;
});
var numHours = new Prelude.Num(function () {
    return divisionRingHours;
});
module.exports = {
    Milliseconds: Milliseconds, 
    MillisecondOfSecond: MillisecondOfSecond, 
    Seconds: Seconds, 
    SecondOfMinute: SecondOfMinute, 
    Minutes: Minutes, 
    MinuteOfHour: MinuteOfHour, 
    Hours: Hours, 
    HourOfDay: HourOfDay, 
    TimeValue: TimeValue, 
    fromMilliseconds: fromMilliseconds, 
    fromSeconds: fromSeconds, 
    fromMinutes: fromMinutes, 
    fromHours: fromHours, 
    toMilliseconds: toMilliseconds, 
    toSeconds: toSeconds, 
    toMinutes: toMinutes, 
    toHours: toHours, 
    eqHourOfDay: eqHourOfDay, 
    ordHourOfDay: ordHourOfDay, 
    eqHours: eqHours, 
    ordHours: ordHours, 
    semiringHours: semiringHours, 
    ringHours: ringHours, 
    moduloSemiringHours: moduloSemiringHours, 
    divisionRingHours: divisionRingHours, 
    numHours: numHours, 
    showHours: showHours, 
    eqMinuteOfHour: eqMinuteOfHour, 
    ordMinuteOfHour: ordMinuteOfHour, 
    eqMinutes: eqMinutes, 
    ordMinutes: ordMinutes, 
    semiringMinutes: semiringMinutes, 
    ringMinutes: ringMinutes, 
    moduloSemiringMinutes: moduloSemiringMinutes, 
    divisionRingMinutes: divisionRingMinutes, 
    numMinutes: numMinutes, 
    showMinutes: showMinutes, 
    eqSecondOfMinute: eqSecondOfMinute, 
    ordSecondOfMinute: ordSecondOfMinute, 
    eqSeconds: eqSeconds, 
    ordSeconds: ordSeconds, 
    semiringSeconds: semiringSeconds, 
    ringSeconds: ringSeconds, 
    moduloSemiringSeconds: moduloSemiringSeconds, 
    divisionRingSeconds: divisionRingSeconds, 
    numSeconds: numSeconds, 
    showSeconds: showSeconds, 
    eqMillisecondOfSecond: eqMillisecondOfSecond, 
    ordMillisecondOfSecond: ordMillisecondOfSecond, 
    eqMilliseconds: eqMilliseconds, 
    ordMilliseconds: ordMilliseconds, 
    semiringMilliseconds: semiringMilliseconds, 
    ringMilliseconds: ringMilliseconds, 
    moduloSemiringMilliseconds: moduloSemiringMilliseconds, 
    divisionRingMilliseconds: divisionRingMilliseconds, 
    numMilliseconds: numMilliseconds, 
    showMilliseconds: showMilliseconds, 
    timeValueHours: timeValueHours, 
    timeValueMinutes: timeValueMinutes, 
    timeValueSeconds: timeValueSeconds, 
    timeValueMilliseconds: timeValueMilliseconds
};

},{"Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Traversable\\foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Traversable

// jshint maxparams: 3

exports.traverseArrayImpl = function () {
  function Cont (fn) {
    this.fn = fn;
  }

  var emptyList = {};

  var ConsCell = function (head, tail) {
    this.head = head;
    this.tail = tail;
  };

  function consList (x) {
    return function (xs) {
      return new ConsCell(x, xs);
    };
  }

  function listToArray (list) {
    var arr = [];
    while (list !== emptyList) {
      arr.push(list.head);
      list = list.tail;
    }
    return arr;
  }

  return function (apply) {
    return function (map) {
      return function (pure) {
        return function (f) {
          var buildFrom = function (x, ys) {
            return apply(map(consList)(f(x)))(ys);
          };

          var go = function (acc, currentLen, xs) {
            if (currentLen === 0) {
              return acc;
            } else {
              var last = xs[currentLen - 1];
              return new Cont(function () {
                return go(buildFrom(last, acc), currentLen - 1, xs);
              });
            }
          };

          return function (array) {
            var result = go(pure(emptyList), array.length, array);
            while (result instanceof Cont) {
              result = result.fn();
            }

            return map(listToArray)(result);
          };
        };
      };
    };
  };
}();

},{}],"c:\\Development\\Web\\jundo\\output\\Data.Traversable\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Foldable = require("Data.Foldable");
var Data_Maybe = require("Data.Maybe");
var Data_Maybe_First = require("Data.Maybe.First");
var Data_Maybe_Last = require("Data.Maybe.Last");
var Data_Monoid_Additive = require("Data.Monoid.Additive");
var Data_Monoid_Dual = require("Data.Monoid.Dual");
var Data_Monoid_Multiplicative = require("Data.Monoid.Multiplicative");
var Data_Monoid_Disj = require("Data.Monoid.Disj");
var Data_Monoid_Conj = require("Data.Monoid.Conj");
var StateL = function (x) {
    return x;
};
var StateR = function (x) {
    return x;
};
var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
    this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.sequence = sequence;
    this.traverse = traverse;
};
var traverse = function (dict) {
    return dict.traverse;
};
var traversableMultiplicative = new Traversable(function () {
    return Data_Foldable.foldableMultiplicative;
}, function () {
    return Data_Monoid_Multiplicative.functorMultiplicative;
}, function (__dict_Applicative_1) {
    return function (_493) {
        return Prelude["<$>"]((__dict_Applicative_1["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Multiplicative.Multiplicative)(_493);
    };
}, function (__dict_Applicative_0) {
    return function (f) {
        return function (_492) {
            return Prelude["<$>"]((__dict_Applicative_0["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Multiplicative.Multiplicative)(f(_492));
        };
    };
});
var traversableMaybe = new Traversable(function () {
    return Data_Foldable.foldableMaybe;
}, function () {
    return Data_Maybe.functorMaybe;
}, function (__dict_Applicative_3) {
    return function (_479) {
        if (_479 instanceof Data_Maybe.Nothing) {
            return Prelude.pure(__dict_Applicative_3)(Data_Maybe.Nothing.value);
        };
        if (_479 instanceof Data_Maybe.Just) {
            return Prelude["<$>"]((__dict_Applicative_3["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_479.value0);
        };
        throw new Error("Failed pattern match at Data.Traversable line 59, column 1 - line 65, column 1: " + [ _479.constructor.name ]);
    };
}, function (__dict_Applicative_2) {
    return function (f) {
        return function (_478) {
            if (_478 instanceof Data_Maybe.Nothing) {
                return Prelude.pure(__dict_Applicative_2)(Data_Maybe.Nothing.value);
            };
            if (_478 instanceof Data_Maybe.Just) {
                return Prelude["<$>"]((__dict_Applicative_2["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(f(_478.value0));
            };
            throw new Error("Failed pattern match at Data.Traversable line 59, column 1 - line 65, column 1: " + [ f.constructor.name, _478.constructor.name ]);
        };
    };
});
var traversableDual = new Traversable(function () {
    return Data_Foldable.foldableDual;
}, function () {
    return Data_Monoid_Dual.functorDual;
}, function (__dict_Applicative_5) {
    return function (_487) {
        return Prelude["<$>"]((__dict_Applicative_5["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Dual.Dual)(_487);
    };
}, function (__dict_Applicative_4) {
    return function (f) {
        return function (_486) {
            return Prelude["<$>"]((__dict_Applicative_4["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Dual.Dual)(f(_486));
        };
    };
});
var traversableDisj = new Traversable(function () {
    return Data_Foldable.foldableDisj;
}, function () {
    return Data_Monoid_Disj.functorDisj;
}, function (__dict_Applicative_7) {
    return function (_491) {
        return Prelude["<$>"]((__dict_Applicative_7["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Disj.Disj)(_491);
    };
}, function (__dict_Applicative_6) {
    return function (f) {
        return function (_490) {
            return Prelude["<$>"]((__dict_Applicative_6["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Disj.Disj)(f(_490));
        };
    };
});
var traversableConj = new Traversable(function () {
    return Data_Foldable.foldableConj;
}, function () {
    return Data_Monoid_Conj.functorConj;
}, function (__dict_Applicative_9) {
    return function (_489) {
        return Prelude["<$>"]((__dict_Applicative_9["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Conj.Conj)(_489);
    };
}, function (__dict_Applicative_8) {
    return function (f) {
        return function (_488) {
            return Prelude["<$>"]((__dict_Applicative_8["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Conj.Conj)(f(_488));
        };
    };
});
var traversableArray = new Traversable(function () {
    return Data_Foldable.foldableArray;
}, function () {
    return Prelude.functorArray;
}, function (__dict_Applicative_11) {
    return traverse(traversableArray)(__dict_Applicative_11)(Prelude.id(Prelude.categoryFn));
}, function (__dict_Applicative_10) {
    return $foreign.traverseArrayImpl(Prelude.apply(__dict_Applicative_10["__superclass_Prelude.Apply_0"]()))(Prelude.map((__dict_Applicative_10["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]()))(Prelude.pure(__dict_Applicative_10));
});
var traversableAdditive = new Traversable(function () {
    return Data_Foldable.foldableAdditive;
}, function () {
    return Data_Monoid_Additive.functorAdditive;
}, function (__dict_Applicative_13) {
    return function (_485) {
        return Prelude["<$>"]((__dict_Applicative_13["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Additive.Additive)(_485);
    };
}, function (__dict_Applicative_12) {
    return function (f) {
        return function (_484) {
            return Prelude["<$>"]((__dict_Applicative_12["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Additive.Additive)(f(_484));
        };
    };
});
var stateR = function (_477) {
    return _477;
};
var stateL = function (_476) {
    return _476;
};
var sequence = function (dict) {
    return dict.sequence;
};
var traversableFirst = new Traversable(function () {
    return Data_Foldable.foldableFirst;
}, function () {
    return Data_Maybe_First.functorFirst;
}, function (__dict_Applicative_15) {
    return function (_481) {
        return Prelude["<$>"]((__dict_Applicative_15["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe_First.First)(sequence(traversableMaybe)(__dict_Applicative_15)(_481));
    };
}, function (__dict_Applicative_14) {
    return function (f) {
        return function (_480) {
            return Prelude["<$>"]((__dict_Applicative_14["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe_First.First)(traverse(traversableMaybe)(__dict_Applicative_14)(f)(_480));
        };
    };
});
var traversableLast = new Traversable(function () {
    return Data_Foldable.foldableLast;
}, function () {
    return Data_Maybe_Last.functorLast;
}, function (__dict_Applicative_17) {
    return function (_483) {
        return Prelude["<$>"]((__dict_Applicative_17["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe_Last.Last)(sequence(traversableMaybe)(__dict_Applicative_17)(_483));
    };
}, function (__dict_Applicative_16) {
    return function (f) {
        return function (_482) {
            return Prelude["<$>"]((__dict_Applicative_16["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe_Last.Last)(traverse(traversableMaybe)(__dict_Applicative_16)(f)(_482));
        };
    };
});
var functorStateR = new Prelude.Functor(function (f) {
    return function (k) {
        return function (s) {
            var _1553 = stateR(k)(s);
            return {
                accum: _1553.accum, 
                value: f(_1553.value)
            };
        };
    };
});
var functorStateL = new Prelude.Functor(function (f) {
    return function (k) {
        return function (s) {
            var _1556 = stateL(k)(s);
            return {
                accum: _1556.accum, 
                value: f(_1556.value)
            };
        };
    };
});
var $$for = function (__dict_Applicative_22) {
    return function (__dict_Traversable_23) {
        return function (x) {
            return function (f) {
                return traverse(__dict_Traversable_23)(__dict_Applicative_22)(f)(x);
            };
        };
    };
};
var applyStateR = new Prelude.Apply(function () {
    return functorStateR;
}, function (f) {
    return function (x) {
        return function (s) {
            var _1559 = stateR(x)(s);
            var _1560 = stateR(f)(_1559.accum);
            return {
                accum: _1560.accum, 
                value: _1560.value(_1559.value)
            };
        };
    };
});
var applyStateL = new Prelude.Apply(function () {
    return functorStateL;
}, function (f) {
    return function (x) {
        return function (s) {
            var _1565 = stateL(f)(s);
            var _1566 = stateL(x)(_1565.accum);
            return {
                accum: _1566.accum, 
                value: _1565.value(_1566.value)
            };
        };
    };
});
var applicativeStateR = new Prelude.Applicative(function () {
    return applyStateR;
}, function (a) {
    return function (s) {
        return {
            accum: s, 
            value: a
        };
    };
});
var mapAccumR = function (__dict_Traversable_18) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return stateR(traverse(__dict_Traversable_18)(applicativeStateR)(function (a) {
                    return function (s) {
                        return f(s)(a);
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanr = function (__dict_Traversable_19) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return (mapAccumR(__dict_Traversable_19)(function (b) {
                    return function (a) {
                        var b$prime = f(a)(b);
                        return {
                            accum: b$prime, 
                            value: b$prime
                        };
                    };
                })(b0)(xs)).value;
            };
        };
    };
};
var applicativeStateL = new Prelude.Applicative(function () {
    return applyStateL;
}, function (a) {
    return function (s) {
        return {
            accum: s, 
            value: a
        };
    };
});
var mapAccumL = function (__dict_Traversable_20) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return stateL(traverse(__dict_Traversable_20)(applicativeStateL)(function (a) {
                    return function (s) {
                        return f(s)(a);
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanl = function (__dict_Traversable_21) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return (mapAccumL(__dict_Traversable_21)(function (b) {
                    return function (a) {
                        var b$prime = f(b)(a);
                        return {
                            accum: b$prime, 
                            value: b$prime
                        };
                    };
                })(b0)(xs)).value;
            };
        };
    };
};
module.exports = {
    Traversable: Traversable, 
    mapAccumR: mapAccumR, 
    mapAccumL: mapAccumL, 
    scanr: scanr, 
    scanl: scanl, 
    "for": $$for, 
    sequence: sequence, 
    traverse: traverse, 
    traversableArray: traversableArray, 
    traversableMaybe: traversableMaybe, 
    traversableFirst: traversableFirst, 
    traversableLast: traversableLast, 
    traversableAdditive: traversableAdditive, 
    traversableDual: traversableDual, 
    traversableConj: traversableConj, 
    traversableDisj: traversableDisj, 
    traversableMultiplicative: traversableMultiplicative
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\Data.Traversable\\foreign.js","Data.Foldable":"c:\\Development\\Web\\jundo\\output\\Data.Foldable\\index.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js","Data.Maybe.First":"c:\\Development\\Web\\jundo\\output\\Data.Maybe.First\\index.js","Data.Maybe.Last":"c:\\Development\\Web\\jundo\\output\\Data.Maybe.Last\\index.js","Data.Monoid.Additive":"c:\\Development\\Web\\jundo\\output\\Data.Monoid.Additive\\index.js","Data.Monoid.Conj":"c:\\Development\\Web\\jundo\\output\\Data.Monoid.Conj\\index.js","Data.Monoid.Disj":"c:\\Development\\Web\\jundo\\output\\Data.Monoid.Disj\\index.js","Data.Monoid.Dual":"c:\\Development\\Web\\jundo\\output\\Data.Monoid.Dual\\index.js","Data.Monoid.Multiplicative":"c:\\Development\\Web\\jundo\\output\\Data.Monoid.Multiplicative\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Tuple\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Control_Biapplicative = require("Control.Biapplicative");
var Control_Biapply = require("Control.Biapply");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Control_Lazy = require("Control.Lazy");
var Data_Bifoldable = require("Data.Bifoldable");
var Data_Bifunctor = require("Data.Bifunctor");
var Data_Bitraversable = require("Data.Bitraversable");
var Data_Foldable = require("Data.Foldable");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Maybe = require("Data.Maybe");
var Data_Maybe_First = require("Data.Maybe.First");
var Data_Monoid = require("Data.Monoid");
var Data_Traversable = require("Data.Traversable");
var Tuple = (function () {
    function Tuple(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Tuple.create = function (value0) {
        return function (value1) {
            return new Tuple(value0, value1);
        };
    };
    return Tuple;
})();
var uncurry = function (f) {
    return function (_566) {
        return f(_566.value0)(_566.value1);
    };
};
var swap = function (_567) {
    return new Tuple(_567.value1, _567.value0);
};
var snd = function (_565) {
    return _565.value1;
};
var showTuple = function (__dict_Show_2) {
    return function (__dict_Show_3) {
        return new Prelude.Show(function (_568) {
            return "Tuple (" + (Prelude.show(__dict_Show_2)(_568.value0) + (") (" + (Prelude.show(__dict_Show_3)(_568.value1) + ")")));
        });
    };
};
var semiringTuple = function (__dict_Semiring_4) {
    return function (__dict_Semiring_5) {
        return new Prelude.Semiring(function (_577) {
            return function (_578) {
                return new Tuple(Prelude.add(__dict_Semiring_4)(_577.value0)(_578.value0), Prelude.add(__dict_Semiring_5)(_577.value1)(_578.value1));
            };
        }, function (_579) {
            return function (_580) {
                return new Tuple(Prelude.mul(__dict_Semiring_4)(_579.value0)(_580.value0), Prelude.mul(__dict_Semiring_5)(_579.value1)(_580.value1));
            };
        }, new Tuple(Prelude.one(__dict_Semiring_4), Prelude.one(__dict_Semiring_5)), new Tuple(Prelude.zero(__dict_Semiring_4), Prelude.zero(__dict_Semiring_5)));
    };
};
var semigroupoidTuple = new Prelude.Semigroupoid(function (_573) {
    return function (_574) {
        return new Tuple(_574.value0, _573.value1);
    };
});
var semigroupTuple = function (__dict_Semigroup_6) {
    return function (__dict_Semigroup_7) {
        return new Prelude.Semigroup(function (_575) {
            return function (_576) {
                return new Tuple(Prelude["<>"](__dict_Semigroup_6)(_575.value0)(_576.value0), Prelude["<>"](__dict_Semigroup_7)(_575.value1)(_576.value1));
            };
        });
    };
};
var ringTuple = function (__dict_Ring_8) {
    return function (__dict_Ring_9) {
        return new Prelude.Ring(function () {
            return semiringTuple(__dict_Ring_8["__superclass_Prelude.Semiring_0"]())(__dict_Ring_9["__superclass_Prelude.Semiring_0"]());
        }, function (_585) {
            return function (_586) {
                return new Tuple(Prelude.sub(__dict_Ring_8)(_585.value0)(_586.value0), Prelude.sub(__dict_Ring_9)(_585.value1)(_586.value1));
            };
        });
    };
};
var monoidTuple = function (__dict_Monoid_14) {
    return function (__dict_Monoid_15) {
        return new Data_Monoid.Monoid(function () {
            return semigroupTuple(__dict_Monoid_14["__superclass_Prelude.Semigroup_0"]())(__dict_Monoid_15["__superclass_Prelude.Semigroup_0"]());
        }, new Tuple(Data_Monoid.mempty(__dict_Monoid_14), Data_Monoid.mempty(__dict_Monoid_15)));
    };
};
var moduloSemiringTuple = function (__dict_ModuloSemiring_17) {
    return function (__dict_ModuloSemiring_18) {
        return new Prelude.ModuloSemiring(function () {
            return semiringTuple(__dict_ModuloSemiring_17["__superclass_Prelude.Semiring_0"]())(__dict_ModuloSemiring_18["__superclass_Prelude.Semiring_0"]());
        }, function (_581) {
            return function (_582) {
                return new Tuple(Prelude.div(__dict_ModuloSemiring_17)(_581.value0)(_582.value0), Prelude.div(__dict_ModuloSemiring_18)(_581.value1)(_582.value1));
            };
        }, function (_583) {
            return function (_584) {
                return new Tuple(Prelude.mod(__dict_ModuloSemiring_17)(_583.value0)(_584.value0), Prelude.mod(__dict_ModuloSemiring_18)(_583.value1)(_584.value1));
            };
        });
    };
};
var lookup = function (__dict_Foldable_19) {
    return function (__dict_Eq_20) {
        return function (a) {
            return function (f) {
                return Data_Maybe_First.runFirst(Data_Foldable.foldMap(__dict_Foldable_19)(Data_Maybe_First.monoidFirst)(function (_563) {
                    var _1853 = Prelude["=="](__dict_Eq_20)(a)(_563.value0);
                    if (_1853) {
                        return new Data_Maybe.Just(_563.value1);
                    };
                    if (!_1853) {
                        return Data_Maybe.Nothing.value;
                    };
                    throw new Error("Failed pattern match at Data.Tuple line 173, column 1 - line 174, column 1: " + [ _1853.constructor.name ]);
                })(f));
            };
        };
    };
};
var functorTuple = new Prelude.Functor(function (f) {
    return function (_592) {
        return new Tuple(_592.value0, f(_592.value1));
    };
});
var invariantTuple = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorTuple));
var fst = function (_564) {
    return _564.value0;
};
var lazyTuple = function (__dict_Lazy_21) {
    return function (__dict_Lazy_22) {
        return new Control_Lazy.Lazy(function (f) {
            return new Tuple(Control_Lazy.defer(__dict_Lazy_21)(function (_561) {
                return fst(f(Prelude.unit));
            }), Control_Lazy.defer(__dict_Lazy_22)(function (_562) {
                return snd(f(Prelude.unit));
            }));
        });
    };
};
var foldableTuple = new Data_Foldable.Foldable(function (__dict_Monoid_23) {
    return function (f) {
        return function (_602) {
            return f(_602.value1);
        };
    };
}, function (f) {
    return function (z) {
        return function (_601) {
            return f(z)(_601.value1);
        };
    };
}, function (f) {
    return function (z) {
        return function (_600) {
            return f(_600.value1)(z);
        };
    };
});
var traversableTuple = new Data_Traversable.Traversable(function () {
    return foldableTuple;
}, function () {
    return functorTuple;
}, function (__dict_Applicative_1) {
    return function (_607) {
        return Prelude["<$>"]((__dict_Applicative_1["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tuple.create(_607.value0))(_607.value1);
    };
}, function (__dict_Applicative_0) {
    return function (f) {
        return function (_606) {
            return Prelude["<$>"]((__dict_Applicative_0["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tuple.create(_606.value0))(f(_606.value1));
        };
    };
});
var extendTuple = new Control_Extend.Extend(function () {
    return functorTuple;
}, function (f) {
    return function (_599) {
        return new Tuple(_599.value0, f(_599));
    };
});
var eqTuple = function (__dict_Eq_24) {
    return function (__dict_Eq_25) {
        return new Prelude.Eq(function (_569) {
            return function (_570) {
                return Prelude["=="](__dict_Eq_24)(_569.value0)(_570.value0) && Prelude["=="](__dict_Eq_25)(_569.value1)(_570.value1);
            };
        });
    };
};
var ordTuple = function (__dict_Ord_10) {
    return function (__dict_Ord_11) {
        return new Prelude.Ord(function () {
            return eqTuple(__dict_Ord_10["__superclass_Prelude.Eq_0"]())(__dict_Ord_11["__superclass_Prelude.Eq_0"]());
        }, function (_571) {
            return function (_572) {
                var _1898 = Prelude.compare(__dict_Ord_10)(_571.value0)(_572.value0);
                if (_1898 instanceof Prelude.EQ) {
                    return Prelude.compare(__dict_Ord_11)(_571.value1)(_572.value1);
                };
                return _1898;
            };
        });
    };
};
var divisionRingTuple = function (__dict_DivisionRing_26) {
    return function (__dict_DivisionRing_27) {
        return new Prelude.DivisionRing(function () {
            return moduloSemiringTuple(__dict_DivisionRing_26["__superclass_Prelude.ModuloSemiring_1"]())(__dict_DivisionRing_27["__superclass_Prelude.ModuloSemiring_1"]());
        }, function () {
            return ringTuple(__dict_DivisionRing_26["__superclass_Prelude.Ring_0"]())(__dict_DivisionRing_27["__superclass_Prelude.Ring_0"]());
        });
    };
};
var numTuple = function (__dict_Num_12) {
    return function (__dict_Num_13) {
        return new Prelude.Num(function () {
            return divisionRingTuple(__dict_Num_12["__superclass_Prelude.DivisionRing_0"]())(__dict_Num_13["__superclass_Prelude.DivisionRing_0"]());
        });
    };
};
var curry = function (f) {
    return function (a) {
        return function (b) {
            return f(new Tuple(a, b));
        };
    };
};
var comonadTuple = new Control_Comonad.Comonad(function () {
    return extendTuple;
}, snd);
var boundedTuple = function (__dict_Bounded_28) {
    return function (__dict_Bounded_29) {
        return new Prelude.Bounded(new Tuple(Prelude.bottom(__dict_Bounded_28), Prelude.bottom(__dict_Bounded_29)), new Tuple(Prelude.top(__dict_Bounded_28), Prelude.top(__dict_Bounded_29)));
    };
};
var boundedOrdTuple = function (__dict_BoundedOrd_30) {
    return function (__dict_BoundedOrd_31) {
        return new Prelude.BoundedOrd(function () {
            return boundedTuple(__dict_BoundedOrd_30["__superclass_Prelude.Bounded_0"]())(__dict_BoundedOrd_31["__superclass_Prelude.Bounded_0"]());
        }, function () {
            return ordTuple(__dict_BoundedOrd_30["__superclass_Prelude.Ord_1"]())(__dict_BoundedOrd_31["__superclass_Prelude.Ord_1"]());
        });
    };
};
var booleanAlgebraTuple = function (__dict_BooleanAlgebra_32) {
    return function (__dict_BooleanAlgebra_33) {
        return new Prelude.BooleanAlgebra(function () {
            return boundedTuple(__dict_BooleanAlgebra_32["__superclass_Prelude.Bounded_0"]())(__dict_BooleanAlgebra_33["__superclass_Prelude.Bounded_0"]());
        }, function (_587) {
            return function (_588) {
                return new Tuple(Prelude.conj(__dict_BooleanAlgebra_32)(_587.value0)(_588.value0), Prelude.conj(__dict_BooleanAlgebra_33)(_587.value1)(_588.value1));
            };
        }, function (_589) {
            return function (_590) {
                return new Tuple(Prelude.disj(__dict_BooleanAlgebra_32)(_589.value0)(_590.value0), Prelude.disj(__dict_BooleanAlgebra_33)(_589.value1)(_590.value1));
            };
        }, function (_591) {
            return new Tuple(Prelude.not(__dict_BooleanAlgebra_32)(_591.value0), Prelude.not(__dict_BooleanAlgebra_33)(_591.value1));
        });
    };
};
var bifunctorTuple = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (_593) {
            return new Tuple(f(_593.value0), g(_593.value1));
        };
    };
});
var bifoldableTuple = new Data_Bifoldable.Bifoldable(function (__dict_Monoid_37) {
    return function (f) {
        return function (g) {
            return function (_603) {
                return Prelude["<>"](__dict_Monoid_37["__superclass_Prelude.Semigroup_0"]())(f(_603.value0))(g(_603.value1));
            };
        };
    };
}, function (f) {
    return function (g) {
        return function (z) {
            return function (_605) {
                return g(f(z)(_605.value0))(_605.value1);
            };
        };
    };
}, function (f) {
    return function (g) {
        return function (z) {
            return function (_604) {
                return f(_604.value0)(g(_604.value1)(z));
            };
        };
    };
});
var bitraversableTuple = new Data_Bitraversable.Bitraversable(function () {
    return bifoldableTuple;
}, function () {
    return bifunctorTuple;
}, function (__dict_Applicative_35) {
    return function (_609) {
        return Prelude["<*>"](__dict_Applicative_35["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_35["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tuple.create)(_609.value0))(_609.value1);
    };
}, function (__dict_Applicative_34) {
    return function (f) {
        return function (g) {
            return function (_608) {
                return Prelude["<*>"](__dict_Applicative_34["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_34["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tuple.create)(f(_608.value0)))(g(_608.value1));
            };
        };
    };
});
var biapplyTuple = new Control_Biapply.Biapply(function () {
    return bifunctorTuple;
}, function (_596) {
    return function (_597) {
        return new Tuple(_596.value0(_597.value0), _596.value1(_597.value1));
    };
});
var biapplicativeTuple = new Control_Biapplicative.Biapplicative(function () {
    return biapplyTuple;
}, Tuple.create);
var applyTuple = function (__dict_Semigroup_38) {
    return new Prelude.Apply(function () {
        return functorTuple;
    }, function (_594) {
        return function (_595) {
            return new Tuple(Prelude["<>"](__dict_Semigroup_38)(_594.value0)(_595.value0), _594.value1(_595.value1));
        };
    });
};
var bindTuple = function (__dict_Semigroup_36) {
    return new Prelude.Bind(function () {
        return applyTuple(__dict_Semigroup_36);
    }, function (_598) {
        return function (f) {
            var _1962 = f(_598.value1);
            return new Tuple(Prelude["<>"](__dict_Semigroup_36)(_598.value0)(_1962.value0), _1962.value1);
        };
    });
};
var applicativeTuple = function (__dict_Monoid_39) {
    return new Prelude.Applicative(function () {
        return applyTuple(__dict_Monoid_39["__superclass_Prelude.Semigroup_0"]());
    }, Tuple.create(Data_Monoid.mempty(__dict_Monoid_39)));
};
var monadTuple = function (__dict_Monoid_16) {
    return new Prelude.Monad(function () {
        return applicativeTuple(__dict_Monoid_16);
    }, function () {
        return bindTuple(__dict_Monoid_16["__superclass_Prelude.Semigroup_0"]());
    });
};
module.exports = {
    Tuple: Tuple, 
    lookup: lookup, 
    swap: swap, 
    uncurry: uncurry, 
    curry: curry, 
    snd: snd, 
    fst: fst, 
    showTuple: showTuple, 
    eqTuple: eqTuple, 
    ordTuple: ordTuple, 
    boundedTuple: boundedTuple, 
    boundedOrdTuple: boundedOrdTuple, 
    semigroupoidTuple: semigroupoidTuple, 
    semigroupTuple: semigroupTuple, 
    monoidTuple: monoidTuple, 
    semiringTuple: semiringTuple, 
    moduloSemiringTuple: moduloSemiringTuple, 
    ringTuple: ringTuple, 
    divisionRingTuple: divisionRingTuple, 
    numTuple: numTuple, 
    booleanAlgebraTuple: booleanAlgebraTuple, 
    functorTuple: functorTuple, 
    invariantTuple: invariantTuple, 
    bifunctorTuple: bifunctorTuple, 
    applyTuple: applyTuple, 
    biapplyTuple: biapplyTuple, 
    applicativeTuple: applicativeTuple, 
    biapplicativeTuple: biapplicativeTuple, 
    bindTuple: bindTuple, 
    monadTuple: monadTuple, 
    extendTuple: extendTuple, 
    comonadTuple: comonadTuple, 
    lazyTuple: lazyTuple, 
    foldableTuple: foldableTuple, 
    bifoldableTuple: bifoldableTuple, 
    traversableTuple: traversableTuple, 
    bitraversableTuple: bitraversableTuple
};

},{"Control.Biapplicative":"c:\\Development\\Web\\jundo\\output\\Control.Biapplicative\\index.js","Control.Biapply":"c:\\Development\\Web\\jundo\\output\\Control.Biapply\\index.js","Control.Comonad":"c:\\Development\\Web\\jundo\\output\\Control.Comonad\\index.js","Control.Extend":"c:\\Development\\Web\\jundo\\output\\Control.Extend\\index.js","Control.Lazy":"c:\\Development\\Web\\jundo\\output\\Control.Lazy\\index.js","Data.Bifoldable":"c:\\Development\\Web\\jundo\\output\\Data.Bifoldable\\index.js","Data.Bifunctor":"c:\\Development\\Web\\jundo\\output\\Data.Bifunctor\\index.js","Data.Bitraversable":"c:\\Development\\Web\\jundo\\output\\Data.Bitraversable\\index.js","Data.Foldable":"c:\\Development\\Web\\jundo\\output\\Data.Foldable\\index.js","Data.Functor.Invariant":"c:\\Development\\Web\\jundo\\output\\Data.Functor.Invariant\\index.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js","Data.Maybe.First":"c:\\Development\\Web\\jundo\\output\\Data.Maybe.First\\index.js","Data.Monoid":"c:\\Development\\Web\\jundo\\output\\Data.Monoid\\index.js","Data.Traversable":"c:\\Development\\Web\\jundo\\output\\Data.Traversable\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.TypeNat\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Data_Generic = require("Data.Generic");
var Sized = function (sized) {
    this.sized = sized;
};
var sz = new Sized(function (_696) {
    return 0;
});
var sized = function (dict) {
    return dict.sized;
};
var ss = function (__dict_Sized_0) {
    return new Sized(function (_697) {
        return 1 + sized(__dict_Sized_0)(Data_Generic.anyProxy) | 0;
    });
};
module.exports = {
    Sized: Sized, 
    sized: sized, 
    sz: sz, 
    ss: ss
};

},{"Data.Generic":"c:\\Development\\Web\\jundo\\output\\Data.Generic\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.TypedArray\\foreign.js":[function(require,module,exports){
/* global exports */

// module Data.TypedArray


    "use strict";

    // conversion from and to typed arrays
    exports.asInt8Array = function(array)
        {var res = new Int8Array(array);
         return res;};

    exports.asUint8Array = function (array)
        {var res = new Uint8Array(array);
         return res;};

    exports.asUint8ClampedArray = function (array)
        {var res = new Uint8ClampedArray(array);
         return res;};

    exports.asInt16Array = function (array)
        {var res = new Int16Array (array);
         return res;};

    exports.asUint16Array = function (array)
        {var res = new Uint16Array (array);
         return res;};

    exports.asInt32Array = function (array)
        {var res = new Int32Array (array);
         return res;};

    exports.asUint32Array = function (array)
        {var res = new Uint32Array (array);
         return res;};

    exports.asFloat32Array = function (array)
        {var res = new Float32Array (array);
         return res;};

    exports.asFloat64Array = function (array)
        {var res = new Float64Array (array);
         return res;};

    exports.asArray = function (arrayBuffer)
        {var res = Array.prototype.slice.call(arrayBuffer);
         return res;};

    exports.length = function (arrayBuffer)
        {return arrayBuffer.length;};

    exports.byteLength = function (arrayBuffer)
        {return arrayBuffer.byteLength;};

    exports.insertAt = function (index) {
        return function (a) {
          return function (l) {
            var l1 = l.slice();
            l1.splice(index, 0, a);
            return l1;
          };
        };
    };

    exports.unsafeIndex = function (xs) {
        return function(n) {
          return xs[n];
        };
    };

},{}],"c:\\Development\\Web\\jundo\\output\\Data.TypedArray\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Data_ArrayBuffer_Types = require("Data.ArrayBuffer.Types");
var Data_Maybe = require("Data.Maybe");
var Prelude = require("Prelude");
var $bang$bang = function (xs) {
    return function (n) {
        var _2942 = n < 0 || n >= $foreign.length(xs);
        if (_2942) {
            return Data_Maybe.Nothing.value;
        };
        if (!_2942) {
            return new Data_Maybe.Just($foreign.unsafeIndex(xs)(n));
        };
        throw new Error("Failed pattern match at Data.TypedArray line 51, column 1 - line 52, column 1: " + [ _2942.constructor.name ]);
    };
};
module.exports = {
    "!!": $bang$bang, 
    unsafeIndex: $foreign.unsafeIndex, 
    insertAt: $foreign.insertAt, 
    byteLength: $foreign.byteLength, 
    length: $foreign.length, 
    asArray: $foreign.asArray, 
    asFloat64Array: $foreign.asFloat64Array, 
    asFloat32Array: $foreign.asFloat32Array, 
    asUint32Array: $foreign.asUint32Array, 
    asInt32Array: $foreign.asInt32Array, 
    asUint16Array: $foreign.asUint16Array, 
    asInt16Array: $foreign.asInt16Array, 
    asUint8ClampedArray: $foreign.asUint8ClampedArray, 
    asUint8Array: $foreign.asUint8Array, 
    asInt8Array: $foreign.asInt8Array
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\Data.TypedArray\\foreign.js","Data.ArrayBuffer.Types":"c:\\Development\\Web\\jundo\\output\\Data.ArrayBuffer.Types\\index.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Unfoldable\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Tuple = require("Data.Tuple");
var Data_Array_ST = require("Data.Array.ST");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_ST = require("Control.Monad.ST");
var Unfoldable = function (unfoldr) {
    this.unfoldr = unfoldr;
};
var unfoldr = function (dict) {
    return dict.unfoldr;
};
var unfoldableArray = new Unfoldable(function (f) {
    return function (b) {
        return Control_Monad_Eff.runPure(Data_Array_ST.runSTArray(function __do() {
            var _55 = Data_Array_ST.emptySTArray();
            var _54 = Control_Monad_ST.newSTRef(b)();
            (function () {
                while (!(function __do() {
                    var _53 = Control_Monad_ST.readSTRef(_54)();
                    return (function () {
                        var _2946 = f(_53);
                        if (_2946 instanceof Data_Maybe.Nothing) {
                            return Prelude["return"](Control_Monad_Eff.applicativeEff)(true);
                        };
                        if (_2946 instanceof Data_Maybe.Just) {
                            return function __do() {
                                Data_Array_ST.pushSTArray(_55)(_2946.value0.value0)();
                                Control_Monad_ST.writeSTRef(_54)(_2946.value0.value1)();
                                return Prelude["return"](Control_Monad_Eff.applicativeEff)(false)();
                            };
                        };
                        throw new Error("Failed pattern match at Data.Unfoldable line 28, column 1 - line 40, column 16: " + [ _2946.constructor.name ]);
                    })()();
                })()) {

                };
                return {};
            })();
            return Prelude["return"](Control_Monad_Eff.applicativeEff)(_55)();
        }));
    };
});
module.exports = {
    Unfoldable: Unfoldable, 
    unfoldr: unfoldr, 
    unfoldableArray: unfoldableArray
};

},{"Control.Monad.Eff":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff\\index.js","Control.Monad.ST":"c:\\Development\\Web\\jundo\\output\\Control.Monad.ST\\index.js","Data.Array.ST":"c:\\Development\\Web\\jundo\\output\\Data.Array.ST\\index.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js","Data.Tuple":"c:\\Development\\Web\\jundo\\output\\Data.Tuple\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Vector3\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Data_Vector = require("Data.Vector");
var Data_TypeNat = require("Data.TypeNat");
var Data_Array = require("Data.Array");
var Data_Array_Unsafe = require("Data.Array.Unsafe");
var Data_Maybe_Unsafe = require("Data.Maybe.Unsafe");
var Extensions = require("Extensions");
var $$Math = require("Math");
var vec3$prime = function (array) {
    if (Data_Array.length(array) === 3) {
        return array;
    };
    if (Prelude.otherwise) {
        return Extensions.fail("Vector3>>vec3': wrong array length!");
    };
    throw new Error("Failed pattern match at Data.Vector3 line 32, column 1 - line 33, column 1: " + [ array.constructor.name ]);
};
var vec3 = function (x) {
    return function (y) {
        return function (z) {
            return [ x, y, z ];
        };
    };
};
var set3Z = function (n) {
    return function (_724) {
        return Data_Maybe_Unsafe.fromJust(Data_Array.insertAt(2)(n)(_724));
    };
};
var set3Y = function (n) {
    return function (_723) {
        return Data_Maybe_Unsafe.fromJust(Data_Array.insertAt(1)(n)(_723));
    };
};
var set3X = function (n) {
    return function (_722) {
        return Data_Maybe_Unsafe.fromJust(Data_Array.insertAt(0)(n)(_722));
    };
};
var k3 = [ 0.0, 0.0, 1.0 ];
var j3 = [ 0.0, 1.0, 0.0 ];
var i3 = [ 1.0, 0.0, 0.0 ];
var get3Z = function (_721) {
    return _721[2];
};
var get3Y = function (_720) {
    return _720[1];
};
var get3X = function (_719) {
    return _719[0];
};
var cross = function (__dict_Num_0) {
    return function (_725) {
        return function (_726) {
            if (_725.length === 3 && _726.length === 3) {
                return [ Prelude["-"]((__dict_Num_0["__superclass_Prelude.DivisionRing_0"]())["__superclass_Prelude.Ring_0"]())(Prelude["*"](((__dict_Num_0["__superclass_Prelude.DivisionRing_0"]())["__superclass_Prelude.ModuloSemiring_1"]())["__superclass_Prelude.Semiring_0"]())(_725[1])(_726[2]))(Prelude["*"](((__dict_Num_0["__superclass_Prelude.DivisionRing_0"]())["__superclass_Prelude.ModuloSemiring_1"]())["__superclass_Prelude.Semiring_0"]())(_725[2])(_726[1])), Prelude["-"]((__dict_Num_0["__superclass_Prelude.DivisionRing_0"]())["__superclass_Prelude.Ring_0"]())(Prelude["*"](((__dict_Num_0["__superclass_Prelude.DivisionRing_0"]())["__superclass_Prelude.ModuloSemiring_1"]())["__superclass_Prelude.Semiring_0"]())(_725[2])(_726[0]))(Prelude["*"](((__dict_Num_0["__superclass_Prelude.DivisionRing_0"]())["__superclass_Prelude.ModuloSemiring_1"]())["__superclass_Prelude.Semiring_0"]())(_725[0])(_726[2])), Prelude["-"]((__dict_Num_0["__superclass_Prelude.DivisionRing_0"]())["__superclass_Prelude.Ring_0"]())(Prelude["*"](((__dict_Num_0["__superclass_Prelude.DivisionRing_0"]())["__superclass_Prelude.ModuloSemiring_1"]())["__superclass_Prelude.Semiring_0"]())(_725[0])(_726[1]))(Prelude["*"](((__dict_Num_0["__superclass_Prelude.DivisionRing_0"]())["__superclass_Prelude.ModuloSemiring_1"]())["__superclass_Prelude.Semiring_0"]())(_725[1])(_726[0])) ];
            };
            return Extensions.fail("Vector3>>cross: impossible!");
        };
    };
};
module.exports = {
    cross: cross, 
    set3Z: set3Z, 
    set3Y: set3Y, 
    set3X: set3X, 
    get3Z: get3Z, 
    get3Y: get3Y, 
    get3X: get3X, 
    k3: k3, 
    j3: j3, 
    i3: i3, 
    "vec3'": vec3$prime, 
    vec3: vec3
};

},{"Data.Array":"c:\\Development\\Web\\jundo\\output\\Data.Array\\index.js","Data.Array.Unsafe":"c:\\Development\\Web\\jundo\\output\\Data.Array.Unsafe\\index.js","Data.Maybe.Unsafe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe.Unsafe\\index.js","Data.TypeNat":"c:\\Development\\Web\\jundo\\output\\Data.TypeNat\\index.js","Data.Vector":"c:\\Development\\Web\\jundo\\output\\Data.Vector\\index.js","Extensions":"c:\\Development\\Web\\jundo\\output\\Extensions\\index.js","Math":"c:\\Development\\Web\\jundo\\output\\Math\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Vector4\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Data_Vector = require("Data.Vector");
var Data_TypeNat = require("Data.TypeNat");
var Data_Array = require("Data.Array");
var Data_Array_Unsafe = require("Data.Array.Unsafe");
var Data_Maybe_Unsafe = require("Data.Maybe.Unsafe");
var $$Math = require("Math");
var Extensions = require("Extensions");
var vec4$prime = function (array) {
    if (Data_Array.length(array) === 4) {
        return array;
    };
    if (Prelude.otherwise) {
        return Extensions.fail("Vector4>>vec4': wrong array length!");
    };
    throw new Error("Failed pattern match at Data.Vector4 line 31, column 1 - line 32, column 1: " + [ array.constructor.name ]);
};
var vec4 = function (x) {
    return function (y) {
        return function (z) {
            return function (u) {
                return [ x, y, z, u ];
            };
        };
    };
};
var set4Z = function (n) {
    return function (_734) {
        return Data_Maybe_Unsafe.fromJust(Data_Array.insertAt(2)(n)(_734));
    };
};
var set4Y = function (n) {
    return function (_733) {
        return Data_Maybe_Unsafe.fromJust(Data_Array.insertAt(1)(n)(_733));
    };
};
var set4X = function (n) {
    return function (_732) {
        return Data_Maybe_Unsafe.fromJust(Data_Array.insertAt(0)(n)(_732));
    };
};
var set4U = function (n) {
    return function (_735) {
        return Data_Maybe_Unsafe.fromJust(Data_Array.insertAt(3)(n)(_735));
    };
};
var l4 = [ 0.0, 0.0, 0.0, 1.0 ];
var k4 = [ 0.0, 0.0, 1.0, 0.0 ];
var j4 = [ 0.0, 1.0, 0.0, 0.0 ];
var i4 = [ 1.0, 0.0, 0.0, 0.0 ];
var get4Z = function (_730) {
    return _730[2];
};
var get4Y = function (_729) {
    return _729[1];
};
var get4X = function (_728) {
    return _728[0];
};
var get4U = function (_731) {
    return _731[3];
};
module.exports = {
    set4U: set4U, 
    set4Z: set4Z, 
    set4Y: set4Y, 
    set4X: set4X, 
    get4U: get4U, 
    get4Z: get4Z, 
    get4Y: get4Y, 
    get4X: get4X, 
    l4: l4, 
    k4: k4, 
    j4: j4, 
    i4: i4, 
    "vec4'": vec4$prime, 
    vec4: vec4
};

},{"Data.Array":"c:\\Development\\Web\\jundo\\output\\Data.Array\\index.js","Data.Array.Unsafe":"c:\\Development\\Web\\jundo\\output\\Data.Array.Unsafe\\index.js","Data.Maybe.Unsafe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe.Unsafe\\index.js","Data.TypeNat":"c:\\Development\\Web\\jundo\\output\\Data.TypeNat\\index.js","Data.Vector":"c:\\Development\\Web\\jundo\\output\\Data.Vector\\index.js","Extensions":"c:\\Development\\Web\\jundo\\output\\Extensions\\index.js","Math":"c:\\Development\\Web\\jundo\\output\\Math\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Data.Vector\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Data_Array = require("Data.Array");
var Data_Monoid = require("Data.Monoid");
var Data_Foldable = require("Data.Foldable");
var Data_TypeNat = require("Data.TypeNat");
var Control_Apply = require("Control.Apply");
var $$Math = require("Math");
var Data_Generic = require("Data.Generic");
var Extensions = require("Extensions");
var Vec = function (x) {
    return x;
};
var toArray = function (_698) {
    return _698;
};
var showVec = function (__dict_Show_4) {
    return new Prelude.Show(function (_701) {
        return "Vec " + Prelude.show(Prelude.showArray(__dict_Show_4))(_701);
    });
};
var functorVec = new Prelude.Functor(function (f) {
    return function (_702) {
        return Prelude.map(Prelude.functorArray)(f)(_702);
    };
});
var scale = function (__dict_Num_5) {
    return function (s) {
        return function (v) {
            return Prelude["<$>"](functorVec)(function (e) {
                return Prelude["*"](((__dict_Num_5["__superclass_Prelude.DivisionRing_0"]())["__superclass_Prelude.ModuloSemiring_1"]())["__superclass_Prelude.Semiring_0"]())(e)(s);
            })(v);
        };
    };
};
var vNegate = function (__dict_Num_1) {
    return function (v) {
        return Prelude["<$>"](functorVec)(Prelude.negate((__dict_Num_1["__superclass_Prelude.DivisionRing_0"]())["__superclass_Prelude.Ring_0"]()))(v);
    };
};
var fromArray = function (__dict_Sized_6) {
    return function (l) {
        var _2399 = Data_TypeNat.sized(__dict_Sized_6)(Data_Generic.anyProxy);
        if (_2399 === Data_Array.length(l)) {
            return l;
        };
        if (Prelude.otherwise) {
            return Extensions.fail("Vector>>fromArray: wrong array length!");
        };
        throw new Error("Failed pattern match at Data.Vector line 32, column 1 - line 33, column 1: " + [ _2399.constructor.name ]);
    };
};
var foldableVector = new Data_Foldable.Foldable(function (__dict_Monoid_7) {
    return function (f) {
        return function (xs) {
            return Data_Foldable.foldr(foldableVector)(function (x) {
                return function (acc) {
                    return Prelude["<>"](__dict_Monoid_7["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                };
            })(Data_Monoid.mempty(__dict_Monoid_7))(xs);
        };
    };
}, function (f) {
    return function (z) {
        return function (_706) {
            return Data_Foldable.foldl(Data_Foldable.foldableArray)(f)(z)(_706);
        };
    };
}, function (f) {
    return function (z) {
        return function (_705) {
            return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(_705);
        };
    };
});
var vlengthSquared = function (v) {
    return Data_Foldable.foldl(foldableVector)(Prelude["+"](Prelude.semiringNumber))(0.0)(Prelude["<$>"](functorVec)(function (e) {
        return e * e;
    })(v));
};
var vlength = function (_2410) {
    return $$Math.sqrt(vlengthSquared(_2410));
};
var normalize = function (v) {
    var im = 1.0 / vlength(v);
    return Prelude["<$>"](functorVec)(function (e) {
        return e * im;
    })(v);
};
var fill = function (__dict_Num_8) {
    return function (__dict_Sized_9) {
        return function (a) {
            return Data_Array.replicate(Data_TypeNat.sized(__dict_Sized_9)(Data_Generic.anyProxy))(a);
        };
    };
};
var eqVec = function (__dict_Eq_11) {
    return new Prelude.Eq(function (_699) {
        return function (_700) {
            return Prelude.eq(Prelude.eqArray(__dict_Eq_11))(_699)(_700);
        };
    });
};
var applyVec = new Prelude.Apply(function () {
    return functorVec;
}, function (_703) {
    return function (_704) {
        return Data_Array.zipWith(function (f$prime) {
            return function (a$prime) {
                return f$prime(a$prime);
            };
        })(_703)(_704);
    };
});
var vAdd = function (__dict_Num_3) {
    return Control_Apply.lift2(applyVec)(Prelude["+"](((__dict_Num_3["__superclass_Prelude.DivisionRing_0"]())["__superclass_Prelude.ModuloSemiring_1"]())["__superclass_Prelude.Semiring_0"]()));
};
var vMul = function (__dict_Num_2) {
    return Control_Apply.lift2(applyVec)(Prelude["*"](((__dict_Num_2["__superclass_Prelude.DivisionRing_0"]())["__superclass_Prelude.ModuloSemiring_1"]())["__superclass_Prelude.Semiring_0"]()));
};
var dot = function (v1) {
    return function (v2) {
        return Data_Foldable.foldl(foldableVector)(Prelude["+"](Prelude.semiringNumber))(0.0)(vMul(Prelude.numNumber)(v1)(v2));
    };
};
var semiringVector = function (__dict_Sized_10) {
    return new Prelude.Semiring(vAdd(Prelude.numNumber), vMul(Prelude.numNumber), fill(Prelude.numNumber)(__dict_Sized_10)(1.0), fill(Prelude.numNumber)(__dict_Sized_10)(0.0));
};
var vSub = function (__dict_Num_0) {
    return Control_Apply.lift2(applyVec)(Prelude["-"]((__dict_Num_0["__superclass_Prelude.DivisionRing_0"]())["__superclass_Prelude.Ring_0"]()));
};
var direction = function (v1) {
    return function (v2) {
        return normalize(vSub(Prelude.numNumber)(v1)(v2));
    };
};
var distanceSquared = function (v1) {
    return function (v2) {
        return Data_Foldable.foldl(foldableVector)(Prelude["+"](Prelude.semiringNumber))(0.0)(Prelude["<$>"](functorVec)(function (e) {
            return e * e;
        })(vSub(Prelude.numNumber)(v1)(v2)));
    };
};
var distance = function (v1) {
    return function (v2) {
        return $$Math.sqrt(distanceSquared(v1)(v2));
    };
};
module.exports = {
    Vec: Vec, 
    dot: dot, 
    scale: scale, 
    distance: distance, 
    distanceSquared: distanceSquared, 
    normalize: normalize, 
    vlength: vlength, 
    vlengthSquared: vlengthSquared, 
    direction: direction, 
    vNegate: vNegate, 
    vMul: vMul, 
    vSub: vSub, 
    vAdd: vAdd, 
    toArray: toArray, 
    fromArray: fromArray, 
    fill: fill, 
    eqVec: eqVec, 
    showVec: showVec, 
    functorVec: functorVec, 
    applyVec: applyVec, 
    foldableVector: foldableVector, 
    semiringVector: semiringVector
};

},{"Control.Apply":"c:\\Development\\Web\\jundo\\output\\Control.Apply\\index.js","Data.Array":"c:\\Development\\Web\\jundo\\output\\Data.Array\\index.js","Data.Foldable":"c:\\Development\\Web\\jundo\\output\\Data.Foldable\\index.js","Data.Generic":"c:\\Development\\Web\\jundo\\output\\Data.Generic\\index.js","Data.Monoid":"c:\\Development\\Web\\jundo\\output\\Data.Monoid\\index.js","Data.TypeNat":"c:\\Development\\Web\\jundo\\output\\Data.TypeNat\\index.js","Extensions":"c:\\Development\\Web\\jundo\\output\\Extensions\\index.js","Math":"c:\\Development\\Web\\jundo\\output\\Math\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Extensions\\foreign.js":[function(require,module,exports){
/* global exports */

// module Extensions


    "use strict";

    exports.fail = function(s) {
      throw new Error(s);
    }

    exports.undef = function() {
        throw new Error("Encountered undefined");
    }

    exports.unsafeTrace = function(s) {
        return function (r) {
            console.log(s);
            return r;
        };
    }

    exports.unsafeCoerce = function(x) {
         return x;
    }

    exports.mapE = function(f) {
      return function(arr) {
        return function() {
          var res = new Array(arr.length);
          for (var i = 0; i < arr.length; i++) {
            res[i] = f(arr[i])();
          }
          return res;
        };
      };
  }

    exports.timeout = function(millis) {
        return function(action) {
            return function() {
                setTimeout(action, millis);
            };
        };
    }

},{}],"c:\\Development\\Web\\jundo\\output\\Extensions\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Traversable = require("Data.Traversable");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Maybe_Unsafe = require("Data.Maybe.Unsafe");
var minInt = function (a) {
    return function (b) {
        if (a < b) {
            return a;
        };
        if (Prelude.otherwise) {
            return b;
        };
        throw new Error("Failed pattern match at Extensions line 46, column 1 - line 47, column 1: " + [ a.constructor.name, b.constructor.name ]);
    };
};
var mapM = function (__dict_Monad_0) {
    return function (f) {
        return function (array) {
            return Data_Traversable.sequence(Data_Traversable.traversableArray)(__dict_Monad_0["__superclass_Prelude.Applicative_0"]())(Prelude.map(Prelude.functorArray)(f)(array));
        };
    };
};
module.exports = {
    minInt: minInt, 
    mapM: mapM, 
    mapE: $foreign.mapE, 
    unsafeCoerce: $foreign.unsafeCoerce, 
    unsafeTrace: $foreign.unsafeTrace, 
    undef: $foreign.undef, 
    fail: $foreign.fail, 
    timeout: $foreign.timeout
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\Extensions\\foreign.js","Control.Monad.Eff":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff\\index.js","Data.Maybe.Unsafe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe.Unsafe\\index.js","Data.Traversable":"c:\\Development\\Web\\jundo\\output\\Data.Traversable\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Global\\foreign.js":[function(require,module,exports){
/* globals exports */
"use strict";

// module Global

exports.nan = NaN;

exports.isNaN = isNaN;

exports.infinity = Infinity;

exports.isFinite = isFinite;

exports.readInt = function (radix) {
  return function (n) {
    return parseInt(n, radix);
  };
};

exports.readFloat = parseFloat;

},{}],"c:\\Development\\Web\\jundo\\output\\Global\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
module.exports = {
    readFloat: $foreign.readFloat, 
    readInt: $foreign.readInt, 
    isFinite: $foreign.isFinite, 
    infinity: $foreign.infinity, 
    isNaN: $foreign.isNaN, 
    nan: $foreign.nan
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\Global\\foreign.js"}],"c:\\Development\\Web\\jundo\\output\\Graphics.Canvas.Element\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var DOM_Node_Types = require("DOM.Node.Types");
var Graphics_Canvas = require("Graphics.Canvas");
var Unsafe_Coerce = require("Unsafe.Coerce");
var toElement = Unsafe_Coerce.unsafeCoerce;
module.exports = {
    toElement: toElement
};

},{"DOM.Node.Types":"c:\\Development\\Web\\jundo\\output\\DOM.Node.Types\\index.js","Graphics.Canvas":"c:\\Development\\Web\\jundo\\output\\Graphics.Canvas\\index.js","Unsafe.Coerce":"c:\\Development\\Web\\jundo\\output\\Unsafe.Coerce\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Graphics.Canvas\\foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Graphics.Canvas

exports.canvasElementToImageSource = function(e) {
    return e;
};

exports.getCanvasElementByIdImpl = function(id, Just, Nothing) {
    return function() {
        var el = document.getElementById(id);
        if (el && el instanceof HTMLCanvasElement) {
            return Just(el);
        } else {
            return Nothing;
        }
    };
};

exports.getContext2D = function(c) {
    return function() {
        return c.getContext('2d');
    };
};

exports.getCanvasWidth = function(canvas) {
    return function() {
        return canvas.width;
    };
};

exports.getCanvasHeight = function(canvas) {
    return function() {
        return canvas.height;
    };
};

exports.setCanvasWidth = function(width) {
    return function(canvas) {
        return function() {
            canvas.width = width;
            return canvas;
        };
    };
};

exports.setCanvasHeight = function(height) {
    return function(canvas) {
        return function() {
            canvas.height = height;
            return canvas;
        };
    };
};

exports.canvasToDataURL = function(canvas) {
    return function() {
        return canvas.toDataURL();
    };
};

exports.setLineWidth = function(width) {
    return function(ctx) {
        return function() {
            ctx.lineWidth = width;
            return ctx;
        };
    };
};

exports.setFillStyle = function(style) {
    return function(ctx) {
        return function() {
            ctx.fillStyle = style;
            return ctx;
        };
    };
};

exports.setStrokeStyle = function(style) {
    return function(ctx) {
        return function() {
            ctx.strokeStyle = style;
            return ctx;
        };
    };
};

exports.setShadowColor = function(color) {
    return function(ctx) {
        return function() {
            ctx.shadowColor = color;
            return ctx;
        };
    };
};

exports.setShadowBlur = function(blur) {
    return function(ctx) {
        return function() {
            ctx.shadowBlur = blur;
            return ctx;
        };
    };
};

exports.setShadowOffsetX = function(offsetX) {
    return function(ctx) {
        return function() {
            ctx.shadowOffsetX = offsetX;
            return ctx;
        };
    };
};

exports.setShadowOffsetY = function(offsetY) {
    return function(ctx) {
        return function() {
            ctx.shadowOffsetY = offsetY;
            return ctx;
        };
    };
};

exports.setLineCapImpl = function(cap) {
    return function(ctx) {
        return function() {
            ctx.lineCap = cap;
            return ctx;
        };
    };
};

exports.setGlobalCompositeOperationImpl = function(ctx) {
    return function(op) {
        return function() {
            ctx.globalCompositeOperation = op;
            return ctx;
        };
    };
};

exports.setGlobalAlpha = function(ctx) {
    return function(alpha) {
        return function() {
            ctx.setGlobalAlpha = alpha;
            return ctx;
        };
    };
};

exports.beginPath = function(ctx) {
    return function() {
        ctx.beginPath();
        return ctx;
    };
};

exports.stroke = function(ctx) {
    return function() {
        ctx.stroke();
        return ctx;
    };
};

exports.fill = function(ctx) {
    return function() {
        ctx.fill();
        return ctx;
    };
};

exports.clip = function(ctx) {
    return function() {
        ctx.clip();
        return ctx;
    };
};

exports.lineTo = function(ctx) {
    return function(x) {
        return function(y) {
            return function() {
                ctx.lineTo(x, y);
                return ctx;
            };
        };
    };
};

exports.moveTo = function(ctx) {
    return function(x) {
        return function(y) {
            return function() {
                ctx.moveTo(x, y);
                return ctx;
            };
        };
    };
};

exports.closePath = function(ctx) {
    return function() {
        ctx.closePath();
        return ctx;
    };
};

exports.arc = function(ctx) {
    return function(a) {
        return function() {
            ctx.arc(a.x, a.y, a.r, a.start, a.end);
            return ctx;
        };
    };
};

exports.rect = function(ctx) {
    return function(r) {
        return function() {
            ctx.rect(r.x, r.y, r.w, r.h);
            return ctx;
        };
    };
};

exports.fillRect = function(ctx) {
    return function(r) {
        return function() {
            ctx.fillRect(r.x, r.y, r.w, r.h);
            return ctx;
        };
    };
};

exports.strokeRect = function(ctx) {
    return function(r) {
        return function() {
            ctx.strokeRect(r.x, r.y, r.w, r.h);
            return ctx;
        };
    };
};

exports.scale = function(t) {
    return function(ctx) {
        return function() {
            ctx.scale(t.scaleX, t.scaleY);
            return ctx;
        };
    };
};

exports.rotate = function(angle) {
    return function(ctx) {
        return function() {
            ctx.rotate(angle);
            return ctx;
        };
    };
};

exports.translate = function(t) {
    return function(ctx) {
        return function() {
            ctx.translate(t.translateX, t.translateY);
            return ctx;
        };
    };
};

exports.transform = function(t) {
    return function(ctx) {
        return function() {
            ctx.transform(t.m11, t.m12, t.m21, t.m22, t.m31, t.m32);
            return ctx;
        };
    };
};

exports.clearRect = function(ctx) {
    return function(r) {
        return function() {
            ctx.clearRect(r.x, r.y, r.w, r.h);
            return ctx;
        };
    };
};

exports.textAlignImpl = function(ctx) {
    return function() {
        return ctx.textAlign;
    }
};

exports.setTextAlignImpl = function(ctx) {
    return function(textAlign) {
        return function() {
            ctx.textAlign = textAlign;
            return ctx;
        }
    }
};

exports.font = function(ctx) {
    return function() {
        return ctx.font;
    };
};

exports.setFont = function(fontspec) {
    return function(ctx) {
        return function() {
            ctx.font = fontspec;
            return ctx;
        };
    };
};

exports.fillText = function(ctx) {
    return function(text) {
        return function(x) {
            return function(y) {
                return function() {
                    ctx.fillText(text, x, y);
                    return ctx;
                };
            };
        };
    };
};

exports.strokeText = function(ctx) {
    return function(text) {
        return function(x) {
            return function(y) {
                return function() {
                    ctx.strokeText(text, x, y);
                    return ctx;
                };
            };
        };
    };
};

exports.measureText = function(ctx) {
    return function(text) {
        return function() {
            return ctx.measureText(text);
        };
    };
};

exports.save = function(ctx) {
    return function() {
        ctx.save();
        return ctx;
    };
};

exports.restore = function(ctx) {
    return function() {
        ctx.restore();
        return ctx;
    };
};

exports.getImageData = function(ctx) {
    return function(x) {
        return function(y) {
            return function(w) {
                return function(h) {
                    return function() {
                        return ctx.getImageData(x, y, w, h);
                    };
                };
            };
        };
    };
};

exports.putImageDataFull = function(ctx) {
    return function(image_data) {
        return function(x) {
            return function(y) {
                return function(dx) {
                    return function(dy) {
                        return function(dw) {
                            return function(dh) {
                                return function() {
                                    ctx.putImageData(image_data, x, y, dx, dy, dw, dh);
                                    return ctx;
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};

exports.putImageData = function(ctx) {
    return function(image_data) {
        return function(x) {
            return function(y) {
                return function() {
                    ctx.putImageData(image_data, x, y);
                    return ctx;
                };
            };
        };
    };
};

exports.createImageData = function(ctx) {
    return function(sw) {
        return function(sh) {
            return function() {
                return ctx.createImageData(sw, sh);
            };
        };
    };
};

exports.createImageDataCopy = function(ctx) {
    return function(image_data) {
        return function() {
            return ctx.createImageData(image_data);
        };
    };
};

exports.getImageDataWidth = function(image_data) {
    return function() {
        return image_data.width;
    };
};

exports.getImageDataHeight = function(image_data) {
    return function() {
        return image_data.height;
    };
};

exports.getImageDataPixelArray = function(image_data) {
    return function() {
        return image_data.data;
    };
};

exports.drawImage = function(ctx) {
    return function(image_source) {
        return function(dx) {
            return function(dy) {
                return function() {
                    ctx.drawImage(image_source, dx, dy);
                    return ctx;
                };
            };
        };
    };
};

exports.drawImageScale = function(ctx) {
    return function(image_source) {
        return function(dx) {
            return function(dy) {
                return function(dWidth) {
                    return function(dHeight) {
                        return function() {
                            ctx.drawImage(image_source, dx, dy, dWidth, dHeight);
                            return ctx;
                        };
                    };
                };
            };
        };
    };
};

exports.drawImageFull = function(ctx) {
    return function(image_source) {
        return function(sx) {
            return function(sy) {
                return function(sWidth) {
                    return function(sHeight) {
                        return function(dx) {
                            return function(dy) {
                                return function(dWidth) {
                                    return function(dHeight) {
                                        return function() {
                                            ctx.drawImage(image_source, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);
                                            return ctx;
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};

exports.createLinearGradient = function(linearGradient) {
    return function(ctx) {
        return function() {
            return ctx.createLinearGradient(linearGradient.x0, linearGradient.y0, linearGradient.x1, linearGradient.y1);
        };
    };
};

exports.createRadialGradient = function(radialGradient) {
    return function(ctx) {
        return function() {
            return ctx.createRadialGradient(radialGradient.x0, radialGradient.y0, radialGradient.r0, radialGradient.x1, radialGradient.y1, radialGradient.r1);
        };
    };
};

exports.addColorStop = function(stop) {
    return function(color) {
        return function(gradient) {
            return function() {
                gradient.addColorStop(stop, color);
                return gradient;
            };
        };
    };
};

exports.setGradientFillStyle = function(gradient) {
    return function(ctx) {
        return function() {
            ctx.fillStyle = gradient;
            return ctx;
        };
    };
};

exports.quadraticCurveTo = function(qCurve) {
    return function(ctx) {
        return function() {
            ctx.quadraticCurveTo(qCurve.cpx, qCurve.cpy, qCurve.x, qCurve.y);
            return ctx;
        };
    };
};

exports.bezierCurveTo = function(bCurve) {
    return function(ctx) {
        return function() {
            ctx.bezierCurveTo(bCurve.cp1x, bCurve.cp1y, bCurve.cp2x, bCurve.cp2y, bCurve.x, bCurve.y);
            return ctx;
        };
    };
};


},{}],"c:\\Development\\Web\\jundo\\output\\Graphics.Canvas\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Function = require("Data.Function");
var Data_Maybe = require("Data.Maybe");
var Control_Monad_Eff = require("Control.Monad.Eff");
var AlignLeft = (function () {
    function AlignLeft() {

    };
    AlignLeft.value = new AlignLeft();
    return AlignLeft;
})();
var AlignRight = (function () {
    function AlignRight() {

    };
    AlignRight.value = new AlignRight();
    return AlignRight;
})();
var AlignCenter = (function () {
    function AlignCenter() {

    };
    AlignCenter.value = new AlignCenter();
    return AlignCenter;
})();
var AlignStart = (function () {
    function AlignStart() {

    };
    AlignStart.value = new AlignStart();
    return AlignStart;
})();
var AlignEnd = (function () {
    function AlignEnd() {

    };
    AlignEnd.value = new AlignEnd();
    return AlignEnd;
})();
var Round = (function () {
    function Round() {

    };
    Round.value = new Round();
    return Round;
})();
var Square = (function () {
    function Square() {

    };
    Square.value = new Square();
    return Square;
})();
var Butt = (function () {
    function Butt() {

    };
    Butt.value = new Butt();
    return Butt;
})();
var SourceOver = (function () {
    function SourceOver() {

    };
    SourceOver.value = new SourceOver();
    return SourceOver;
})();
var SourceIn = (function () {
    function SourceIn() {

    };
    SourceIn.value = new SourceIn();
    return SourceIn;
})();
var SourceOut = (function () {
    function SourceOut() {

    };
    SourceOut.value = new SourceOut();
    return SourceOut;
})();
var SourceAtop = (function () {
    function SourceAtop() {

    };
    SourceAtop.value = new SourceAtop();
    return SourceAtop;
})();
var DestinationOver = (function () {
    function DestinationOver() {

    };
    DestinationOver.value = new DestinationOver();
    return DestinationOver;
})();
var DestinationIn = (function () {
    function DestinationIn() {

    };
    DestinationIn.value = new DestinationIn();
    return DestinationIn;
})();
var DestinationOut = (function () {
    function DestinationOut() {

    };
    DestinationOut.value = new DestinationOut();
    return DestinationOut;
})();
var DestinationAtop = (function () {
    function DestinationAtop() {

    };
    DestinationAtop.value = new DestinationAtop();
    return DestinationAtop;
})();
var Lighter = (function () {
    function Lighter() {

    };
    Lighter.value = new Lighter();
    return Lighter;
})();
var Copy = (function () {
    function Copy() {

    };
    Copy.value = new Copy();
    return Copy;
})();
var Xor = (function () {
    function Xor() {

    };
    Xor.value = new Xor();
    return Xor;
})();
var withContext = function (ctx) {
    return function (action) {
        return function __do() {
            $foreign.save(ctx)();
            var _67 = action();
            $foreign.restore(ctx)();
            return Prelude["return"](Control_Monad_Eff.applicativeEff)(_67)();
        };
    };
};
var textAlign = function (ctx) {
    var unsafeParseTextAlign = function (_1000) {
        if (_1000 === "left") {
            return AlignLeft.value;
        };
        if (_1000 === "right") {
            return AlignRight.value;
        };
        if (_1000 === "center") {
            return AlignCenter.value;
        };
        if (_1000 === "start") {
            return AlignStart.value;
        };
        if (_1000 === "end") {
            return AlignEnd.value;
        };
        throw new Error("Failed pattern match at Graphics.Canvas line 396, column 3 - line 397, column 3: " + [ _1000.constructor.name ]);
    };
    return Prelude["<$>"](Control_Monad_Eff.functorEff)(unsafeParseTextAlign)($foreign.textAlignImpl(ctx));
};
var strokePath = function (ctx) {
    return function (path) {
        return function __do() {
            $foreign.beginPath(ctx)();
            var _65 = path();
            $foreign.stroke(ctx)();
            return Prelude["return"](Control_Monad_Eff.applicativeEff)(_65)();
        };
    };
};
var showTextAlign = new Prelude.Show(function (_999) {
    if (_999 instanceof AlignLeft) {
        return "left";
    };
    if (_999 instanceof AlignRight) {
        return "right";
    };
    if (_999 instanceof AlignCenter) {
        return "center";
    };
    if (_999 instanceof AlignStart) {
        return "start";
    };
    if (_999 instanceof AlignEnd) {
        return "end";
    };
    throw new Error("Failed pattern match at Graphics.Canvas line 383, column 1 - line 390, column 1: " + [ _999.constructor.name ]);
});
var showComposite = new Prelude.Show(function (_998) {
    if (_998 instanceof SourceOver) {
        return "source-over";
    };
    if (_998 instanceof SourceIn) {
        return "source-in";
    };
    if (_998 instanceof SourceOut) {
        return "source-out";
    };
    if (_998 instanceof SourceAtop) {
        return "source-atop";
    };
    if (_998 instanceof DestinationOver) {
        return "destination-over";
    };
    if (_998 instanceof DestinationIn) {
        return "destination-in";
    };
    if (_998 instanceof DestinationOut) {
        return "destination-out";
    };
    if (_998 instanceof DestinationAtop) {
        return "destination-atop";
    };
    if (_998 instanceof Lighter) {
        return "lighter";
    };
    if (_998 instanceof Copy) {
        return "copy";
    };
    if (_998 instanceof Xor) {
        return "xor";
    };
    throw new Error("Failed pattern match at Graphics.Canvas line 223, column 1 - line 236, column 1: " + [ _998.constructor.name ]);
});
var setTextAlign = function (ctx) {
    return function (textAlign_1) {
        return $foreign.setTextAlignImpl(ctx)(Prelude.show(showTextAlign)(textAlign_1));
    };
};
var setLineCap = function (_997) {
    if (_997 instanceof Round) {
        return $foreign.setLineCapImpl("round");
    };
    if (_997 instanceof Square) {
        return $foreign.setLineCapImpl("square");
    };
    if (_997 instanceof Butt) {
        return $foreign.setLineCapImpl("butt");
    };
    throw new Error("Failed pattern match at Graphics.Canvas line 204, column 1 - line 205, column 1: " + [ _997.constructor.name ]);
};
var setGlobalCompositeOperation = function (ctx) {
    return function (composite) {
        return $foreign.setGlobalCompositeOperationImpl(ctx)(Prelude.show(showComposite)(composite));
    };
};
var setCanvasDimensions = function (d) {
    return function (ce) {
        return Prelude[">>="](Control_Monad_Eff.bindEff)($foreign.setCanvasHeight(d.height)(ce))($foreign.setCanvasWidth(d.width));
    };
};
var getCanvasElementById = function (elId) {
    return $foreign.getCanvasElementByIdImpl(elId, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
};
var getCanvasDimensions = function (ce) {
    return function __do() {
        var _64 = $foreign.getCanvasWidth(ce)();
        var _63 = $foreign.getCanvasHeight(ce)();
        return Prelude["return"](Control_Monad_Eff.applicativeEff)({
            width: _64, 
            height: _63
        })();
    };
};
var fillPath = function (ctx) {
    return function (path) {
        return function __do() {
            $foreign.beginPath(ctx)();
            var _66 = path();
            $foreign.fill(ctx)();
            return Prelude["return"](Control_Monad_Eff.applicativeEff)(_66)();
        };
    };
};
module.exports = {
    AlignLeft: AlignLeft, 
    AlignRight: AlignRight, 
    AlignCenter: AlignCenter, 
    AlignStart: AlignStart, 
    AlignEnd: AlignEnd, 
    Round: Round, 
    Square: Square, 
    Butt: Butt, 
    SourceOver: SourceOver, 
    SourceIn: SourceIn, 
    SourceOut: SourceOut, 
    SourceAtop: SourceAtop, 
    DestinationOver: DestinationOver, 
    DestinationIn: DestinationIn, 
    DestinationOut: DestinationOut, 
    DestinationAtop: DestinationAtop, 
    Lighter: Lighter, 
    Copy: Copy, 
    Xor: Xor, 
    withContext: withContext, 
    setTextAlign: setTextAlign, 
    textAlign: textAlign, 
    fillPath: fillPath, 
    strokePath: strokePath, 
    setGlobalCompositeOperation: setGlobalCompositeOperation, 
    setLineCap: setLineCap, 
    setCanvasDimensions: setCanvasDimensions, 
    getCanvasDimensions: getCanvasDimensions, 
    getCanvasElementById: getCanvasElementById, 
    showComposite: showComposite, 
    showTextAlign: showTextAlign, 
    bezierCurveTo: $foreign.bezierCurveTo, 
    quadraticCurveTo: $foreign.quadraticCurveTo, 
    setGradientFillStyle: $foreign.setGradientFillStyle, 
    addColorStop: $foreign.addColorStop, 
    createRadialGradient: $foreign.createRadialGradient, 
    createLinearGradient: $foreign.createLinearGradient, 
    drawImageFull: $foreign.drawImageFull, 
    drawImageScale: $foreign.drawImageScale, 
    drawImage: $foreign.drawImage, 
    canvasElementToImageSource: $foreign.canvasElementToImageSource, 
    createImageDataCopy: $foreign.createImageDataCopy, 
    createImageData: $foreign.createImageData, 
    putImageDataFull: $foreign.putImageDataFull, 
    putImageData: $foreign.putImageData, 
    getImageDataPixelArray: $foreign.getImageDataPixelArray, 
    getImageDataHeight: $foreign.getImageDataHeight, 
    getImageDataWidth: $foreign.getImageDataWidth, 
    getImageData: $foreign.getImageData, 
    restore: $foreign.restore, 
    save: $foreign.save, 
    measureText: $foreign.measureText, 
    strokeText: $foreign.strokeText, 
    fillText: $foreign.fillText, 
    setFont: $foreign.setFont, 
    font: $foreign.font, 
    transform: $foreign.transform, 
    translate: $foreign.translate, 
    rotate: $foreign.rotate, 
    scale: $foreign.scale, 
    clearRect: $foreign.clearRect, 
    strokeRect: $foreign.strokeRect, 
    fillRect: $foreign.fillRect, 
    rect: $foreign.rect, 
    arc: $foreign.arc, 
    closePath: $foreign.closePath, 
    moveTo: $foreign.moveTo, 
    lineTo: $foreign.lineTo, 
    clip: $foreign.clip, 
    fill: $foreign.fill, 
    stroke: $foreign.stroke, 
    beginPath: $foreign.beginPath, 
    setGlobalAlpha: $foreign.setGlobalAlpha, 
    setShadowColor: $foreign.setShadowColor, 
    setShadowOffsetY: $foreign.setShadowOffsetY, 
    setShadowOffsetX: $foreign.setShadowOffsetX, 
    setShadowBlur: $foreign.setShadowBlur, 
    setStrokeStyle: $foreign.setStrokeStyle, 
    setFillStyle: $foreign.setFillStyle, 
    setLineWidth: $foreign.setLineWidth, 
    canvasToDataURL: $foreign.canvasToDataURL, 
    setCanvasHeight: $foreign.setCanvasHeight, 
    getCanvasHeight: $foreign.getCanvasHeight, 
    setCanvasWidth: $foreign.setCanvasWidth, 
    getCanvasWidth: $foreign.getCanvasWidth, 
    getContext2D: $foreign.getContext2D
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\Graphics.Canvas\\foreign.js","Control.Monad.Eff":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff\\index.js","Data.Function":"c:\\Development\\Web\\jundo\\output\\Data.Function\\index.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Context\\foreign.js":[function(require,module,exports){
// module Graphics.WebGL.Context

exports.getWebGLContextWithAttrs = function(canvas) {
  return function(attrs) {
    return function() {
      return canvas.getContext('webgl', attrs);
    };
  };
};

},{}],"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Context\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Graphics_Canvas = require("Graphics.Canvas");
var Graphics_WebGL_Raw_Types = require("Graphics.WebGL.Raw.Types");
var defaultWebGLContextAttrs = {
    alpha: true, 
    depth: true, 
    stencil: false, 
    antialias: true, 
    premultipliedAlpha: true, 
    preserveDrawingBuffer: false, 
    preferLowPowerToHighPerformance: false, 
    failIfMajorPerformanceCaveat: false
};
var getWebGLContext = function (el) {
    return $foreign.getWebGLContextWithAttrs(el)(defaultWebGLContextAttrs);
};
module.exports = {
    getWebGLContext: getWebGLContext, 
    defaultWebGLContextAttrs: defaultWebGLContextAttrs, 
    getWebGLContextWithAttrs: $foreign.getWebGLContextWithAttrs
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Context\\foreign.js","Control.Monad.Eff":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff\\index.js","Graphics.Canvas":"c:\\Development\\Web\\jundo\\output\\Graphics.Canvas\\index.js","Graphics.WebGL.Raw.Types":"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Raw.Types\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Free.Shaders\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Data_Either = require("Data.Either");
var Data_Maybe = require("Data.Maybe");
var Graphics_WebGL_Free = require("Graphics.WebGL.Free");
var Graphics_WebGL_Raw_Enums = require("Graphics.WebGL.Raw.Enums");
var Graphics_WebGL_Raw_Types = require("Graphics.WebGL.Raw.Types");
var Control_Monad_Free = require("Control.Monad.Free");
var VertexShader = function (x) {
    return x;
};
var FragmentShader = function (x) {
    return x;
};
var buildShader = function (source) {
    return function (shaderType) {
        return Prelude.bind(Control_Monad_Free.freeBind)(Graphics_WebGL_Free.createShader(shaderType))(function (_86) {
            if (_86 instanceof Data_Maybe.Just) {
                return Prelude.bind(Control_Monad_Free.freeBind)(Graphics_WebGL_Free.shaderSource(_86.value0)(source))(function () {
                    return Prelude.bind(Control_Monad_Free.freeBind)(Graphics_WebGL_Free.compileShader(_86.value0))(function () {
                        return Prelude.bind(Control_Monad_Free.freeBind)(Graphics_WebGL_Free.getShaderCompileStatus(_86.value0))(function (_85) {
                            if (_85) {
                                return Prelude["return"](Control_Monad_Free.freeApplicative)(new Data_Either.Right(_86.value0));
                            };
                            if (!_85) {
                                return Prelude.bind(Control_Monad_Free.freeBind)(Graphics_WebGL_Free.getShaderInfoLog(_86.value0))(function (_84) {
                                    if (_84 instanceof Data_Maybe.Nothing) {
                                        return Prelude["return"](Control_Monad_Free.freeApplicative)(new Data_Either.Left("Shader Compile Error"));
                                    };
                                    if (_84 instanceof Data_Maybe.Just) {
                                        return Prelude["return"](Control_Monad_Free.freeApplicative)(Data_Either.Left.create("Shader Compile Error: " + _84.value0));
                                    };
                                    throw new Error("Failed pattern match: " + [ _84.constructor.name ]);
                                });
                            };
                            throw new Error("Failed pattern match at Graphics.WebGL.Free.Shaders line 24, column 1 - line 25, column 1: " + [ _85.constructor.name ]);
                        });
                    });
                });
            };
            throw new Error("Failed pattern match at Graphics.WebGL.Free.Shaders line 24, column 1 - line 25, column 1: " + [ _86.constructor.name ]);
        });
    };
};
var buildVertexShader = function (source) {
    return Prelude.bind(Control_Monad_Free.freeBind)(buildShader(source)(Graphics_WebGL_Raw_Enums.vertexShader))(function (_88) {
        return Prelude["return"](Control_Monad_Free.freeApplicative)(Prelude["<$>"](Data_Either.functorEither)(VertexShader)(_88));
    });
};
var buildProgram = function (_1003) {
    return function (_1004) {
        return Prelude.bind(Control_Monad_Free.freeBind)(Graphics_WebGL_Free.createProgram)(function (_91) {
            if (_91 instanceof Data_Maybe.Just) {
                return Prelude.bind(Control_Monad_Free.freeBind)(Graphics_WebGL_Free.attachShader(_91.value0)(_1003))(function () {
                    return Prelude.bind(Control_Monad_Free.freeBind)(Graphics_WebGL_Free.attachShader(_91.value0)(_1004))(function () {
                        return Prelude.bind(Control_Monad_Free.freeBind)(Graphics_WebGL_Free.linkProgram(_91.value0))(function () {
                            return Prelude.bind(Control_Monad_Free.freeBind)(Graphics_WebGL_Free.getProgramLinkStatus(_91.value0))(function (_90) {
                                if (_90) {
                                    return Prelude["return"](Control_Monad_Free.freeApplicative)(new Data_Either.Right(_91.value0));
                                };
                                if (!_90) {
                                    return Prelude.bind(Control_Monad_Free.freeBind)(Graphics_WebGL_Free.getProgramInfoLog(_91.value0))(function (_89) {
                                        if (_89 instanceof Data_Maybe.Nothing) {
                                            return Prelude["return"](Control_Monad_Free.freeApplicative)(new Data_Either.Left("Program Link Error"));
                                        };
                                        if (_89 instanceof Data_Maybe.Just) {
                                            return Prelude["return"](Control_Monad_Free.freeApplicative)(Data_Either.Left.create("Program Link Error: " + _89.value0));
                                        };
                                        throw new Error("Failed pattern match: " + [ _89.constructor.name ]);
                                    });
                                };
                                throw new Error("Failed pattern match at Graphics.WebGL.Free.Shaders line 52, column 1 - line 53, column 1: " + [ _90.constructor.name ]);
                            });
                        });
                    });
                });
            };
            throw new Error("Failed pattern match at Graphics.WebGL.Free.Shaders line 52, column 1 - line 53, column 1: " + [ _91.constructor.name ]);
        });
    };
};
var buildFragmentShader = function (source) {
    return Prelude.bind(Control_Monad_Free.freeBind)(buildShader(source)(Graphics_WebGL_Raw_Enums.fragmentShader))(function (_87) {
        return Prelude["return"](Control_Monad_Free.freeApplicative)(Prelude["<$>"](Data_Either.functorEither)(FragmentShader)(_87));
    });
};
var compileAndLinkProgram = function (vertexSource) {
    return function (fragmentSource) {
        return Prelude.bind(Control_Monad_Free.freeBind)(buildVertexShader(vertexSource))(function (_93) {
            if (_93 instanceof Data_Either.Left) {
                return Prelude["return"](Control_Monad_Free.freeApplicative)(new Data_Either.Left(_93.value0));
            };
            if (_93 instanceof Data_Either.Right) {
                return Prelude.bind(Control_Monad_Free.freeBind)(buildFragmentShader(fragmentSource))(function (_92) {
                    if (_92 instanceof Data_Either.Left) {
                        return Prelude["return"](Control_Monad_Free.freeApplicative)(new Data_Either.Left(_92.value0));
                    };
                    if (_92 instanceof Data_Either.Right) {
                        return buildProgram(_93.value0)(_92.value0);
                    };
                    throw new Error("Failed pattern match at Graphics.WebGL.Free.Shaders line 69, column 1 - line 70, column 1: " + [ _92.constructor.name ]);
                });
            };
            throw new Error("Failed pattern match at Graphics.WebGL.Free.Shaders line 69, column 1 - line 70, column 1: " + [ _93.constructor.name ]);
        });
    };
};
module.exports = {
    VertexShader: VertexShader, 
    FragmentShader: FragmentShader, 
    compileAndLinkProgram: compileAndLinkProgram, 
    buildProgram: buildProgram, 
    buildVertexShader: buildVertexShader, 
    buildFragmentShader: buildFragmentShader
};

},{"Control.Monad.Free":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Free\\index.js","Data.Either":"c:\\Development\\Web\\jundo\\output\\Data.Either\\index.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js","Graphics.WebGL.Free":"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Free\\index.js","Graphics.WebGL.Raw.Enums":"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Raw.Enums\\index.js","Graphics.WebGL.Raw.Types":"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Raw.Types\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Free\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_Eff_Console = require("Control.Monad.Eff.Console");
var Control_Monad_Free = require("Control.Monad.Free");
var Data_ArrayBuffer_Types = require("Data.ArrayBuffer.Types");
var Data_Maybe = require("Data.Maybe");
var Graphics_Canvas = require("Graphics.Canvas");
var Graphics_WebGL_Raw = require("Graphics.WebGL.Raw");
var Graphics_WebGL_Raw_Extra = require("Graphics.WebGL.Raw.Extra");
var Graphics_WebGL_Raw_Enums = require("Graphics.WebGL.Raw.Enums");
var Graphics_WebGL_Raw_Types = require("Graphics.WebGL.Raw.Types");
var Control_Monad_Rec_Class = require("Control.Monad.Rec.Class");
var AttributeLocation = function (x) {
    return x;
};
var AttachShader = (function () {
    function AttachShader(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    AttachShader.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new AttachShader(value0, value1, value2);
            };
        };
    };
    return AttachShader;
})();
var BindBuffer = (function () {
    function BindBuffer(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    BindBuffer.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new BindBuffer(value0, value1, value2);
            };
        };
    };
    return BindBuffer;
})();
var BufferInt8Data = (function () {
    function BufferInt8Data(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    BufferInt8Data.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new BufferInt8Data(value0, value1, value2, value3);
                };
            };
        };
    };
    return BufferInt8Data;
})();
var BufferInt16Data = (function () {
    function BufferInt16Data(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    BufferInt16Data.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new BufferInt16Data(value0, value1, value2, value3);
                };
            };
        };
    };
    return BufferInt16Data;
})();
var BufferInt32Data = (function () {
    function BufferInt32Data(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    BufferInt32Data.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new BufferInt32Data(value0, value1, value2, value3);
                };
            };
        };
    };
    return BufferInt32Data;
})();
var BufferUint8Data = (function () {
    function BufferUint8Data(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    BufferUint8Data.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new BufferUint8Data(value0, value1, value2, value3);
                };
            };
        };
    };
    return BufferUint8Data;
})();
var BufferUint16Data = (function () {
    function BufferUint16Data(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    BufferUint16Data.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new BufferUint16Data(value0, value1, value2, value3);
                };
            };
        };
    };
    return BufferUint16Data;
})();
var BufferUint32Data = (function () {
    function BufferUint32Data(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    BufferUint32Data.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new BufferUint32Data(value0, value1, value2, value3);
                };
            };
        };
    };
    return BufferUint32Data;
})();
var BufferUint8ClampedData = (function () {
    function BufferUint8ClampedData(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    BufferUint8ClampedData.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new BufferUint8ClampedData(value0, value1, value2, value3);
                };
            };
        };
    };
    return BufferUint8ClampedData;
})();
var BufferFloat32Data = (function () {
    function BufferFloat32Data(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    BufferFloat32Data.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new BufferFloat32Data(value0, value1, value2, value3);
                };
            };
        };
    };
    return BufferFloat32Data;
})();
var BufferFloat64Data = (function () {
    function BufferFloat64Data(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    BufferFloat64Data.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new BufferFloat64Data(value0, value1, value2, value3);
                };
            };
        };
    };
    return BufferFloat64Data;
})();
var Clear = (function () {
    function Clear(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Clear.create = function (value0) {
        return function (value1) {
            return new Clear(value0, value1);
        };
    };
    return Clear;
})();
var ClearColor = (function () {
    function ClearColor(value0, value1, value2, value3, value4) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
    };
    ClearColor.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return new ClearColor(value0, value1, value2, value3, value4);
                    };
                };
            };
        };
    };
    return ClearColor;
})();
var CompileShader = (function () {
    function CompileShader(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    CompileShader.create = function (value0) {
        return function (value1) {
            return new CompileShader(value0, value1);
        };
    };
    return CompileShader;
})();
var CreateBuffer = (function () {
    function CreateBuffer(value0) {
        this.value0 = value0;
    };
    CreateBuffer.create = function (value0) {
        return new CreateBuffer(value0);
    };
    return CreateBuffer;
})();
var CreateProgram = (function () {
    function CreateProgram(value0) {
        this.value0 = value0;
    };
    CreateProgram.create = function (value0) {
        return new CreateProgram(value0);
    };
    return CreateProgram;
})();
var CreateShader = (function () {
    function CreateShader(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    CreateShader.create = function (value0) {
        return function (value1) {
            return new CreateShader(value0, value1);
        };
    };
    return CreateShader;
})();
var DepthFunc = (function () {
    function DepthFunc(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    DepthFunc.create = function (value0) {
        return function (value1) {
            return new DepthFunc(value0, value1);
        };
    };
    return DepthFunc;
})();
var DrawArrays = (function () {
    function DrawArrays(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    DrawArrays.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new DrawArrays(value0, value1, value2, value3);
                };
            };
        };
    };
    return DrawArrays;
})();
var DrawElements = (function () {
    function DrawElements(value0, value1, value2, value3, value4) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
    };
    DrawElements.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return new DrawElements(value0, value1, value2, value3, value4);
                    };
                };
            };
        };
    };
    return DrawElements;
})();
var Enable = (function () {
    function Enable(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Enable.create = function (value0) {
        return function (value1) {
            return new Enable(value0, value1);
        };
    };
    return Enable;
})();
var EnableVertexAttribArray = (function () {
    function EnableVertexAttribArray(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    EnableVertexAttribArray.create = function (value0) {
        return function (value1) {
            return new EnableVertexAttribArray(value0, value1);
        };
    };
    return EnableVertexAttribArray;
})();
var GetAttribLocation = (function () {
    function GetAttribLocation(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    GetAttribLocation.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new GetAttribLocation(value0, value1, value2);
            };
        };
    };
    return GetAttribLocation;
})();
var GetCanvas = (function () {
    function GetCanvas(value0) {
        this.value0 = value0;
    };
    GetCanvas.create = function (value0) {
        return new GetCanvas(value0);
    };
    return GetCanvas;
})();
var GetDrawingBufferHeight = (function () {
    function GetDrawingBufferHeight(value0) {
        this.value0 = value0;
    };
    GetDrawingBufferHeight.create = function (value0) {
        return new GetDrawingBufferHeight(value0);
    };
    return GetDrawingBufferHeight;
})();
var GetDrawingBufferWidth = (function () {
    function GetDrawingBufferWidth(value0) {
        this.value0 = value0;
    };
    GetDrawingBufferWidth.create = function (value0) {
        return new GetDrawingBufferWidth(value0);
    };
    return GetDrawingBufferWidth;
})();
var GetProgramInfoLog = (function () {
    function GetProgramInfoLog(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    GetProgramInfoLog.create = function (value0) {
        return function (value1) {
            return new GetProgramInfoLog(value0, value1);
        };
    };
    return GetProgramInfoLog;
})();
var GetProgramLinkStatus = (function () {
    function GetProgramLinkStatus(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    GetProgramLinkStatus.create = function (value0) {
        return function (value1) {
            return new GetProgramLinkStatus(value0, value1);
        };
    };
    return GetProgramLinkStatus;
})();
var GetShaderCompileStatus = (function () {
    function GetShaderCompileStatus(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    GetShaderCompileStatus.create = function (value0) {
        return function (value1) {
            return new GetShaderCompileStatus(value0, value1);
        };
    };
    return GetShaderCompileStatus;
})();
var GetShaderInfoLog = (function () {
    function GetShaderInfoLog(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    GetShaderInfoLog.create = function (value0) {
        return function (value1) {
            return new GetShaderInfoLog(value0, value1);
        };
    };
    return GetShaderInfoLog;
})();
var GetUniformLocation = (function () {
    function GetUniformLocation(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    GetUniformLocation.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new GetUniformLocation(value0, value1, value2);
            };
        };
    };
    return GetUniformLocation;
})();
var LinkProgram = (function () {
    function LinkProgram(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    LinkProgram.create = function (value0) {
        return function (value1) {
            return new LinkProgram(value0, value1);
        };
    };
    return LinkProgram;
})();
var ShaderSource = (function () {
    function ShaderSource(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    ShaderSource.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new ShaderSource(value0, value1, value2);
            };
        };
    };
    return ShaderSource;
})();
var UniformMatrix4fv = (function () {
    function UniformMatrix4fv(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    UniformMatrix4fv.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new UniformMatrix4fv(value0, value1, value2, value3);
                };
            };
        };
    };
    return UniformMatrix4fv;
})();
var UseProgram = (function () {
    function UseProgram(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    UseProgram.create = function (value0) {
        return function (value1) {
            return new UseProgram(value0, value1);
        };
    };
    return UseProgram;
})();
var VertexAttribPointer = (function () {
    function VertexAttribPointer(value0, value1, value2, value3, value4, value5, value6) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
        this.value6 = value6;
    };
    VertexAttribPointer.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return function (value6) {
                                return new VertexAttribPointer(value0, value1, value2, value3, value4, value5, value6);
                            };
                        };
                    };
                };
            };
        };
    };
    return VertexAttribPointer;
})();
var Viewport = (function () {
    function Viewport(value0, value1, value2, value3, value4) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
    };
    Viewport.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return new Viewport(value0, value1, value2, value3, value4);
                    };
                };
            };
        };
    };
    return Viewport;
})();
var viewport = function (x) {
    return function (y) {
        return function (w) {
            return function (h) {
                return Control_Monad_Free.liftF(new Viewport(x, y, w, h, Prelude.unit));
            };
        };
    };
};
var vertexAttribPointer = function (l) {
    return function (s) {
        return function (t) {
            return function (n) {
                return function (str) {
                    return function (o) {
                        return Control_Monad_Free.liftF(new VertexAttribPointer(l, s, t, n, str, o, Prelude.unit));
                    };
                };
            };
        };
    };
};
var useProgram = function (p) {
    return Control_Monad_Free.liftF(new UseProgram(p, Prelude.unit));
};
var uniformMatrix4fv = function (location) {
    return function (transpose) {
        return function (value) {
            return Control_Monad_Free.liftF(new UniformMatrix4fv(location, transpose, value, Prelude.unit));
        };
    };
};
var shaderSource = function (sh) {
    return function (src) {
        return Control_Monad_Free.liftF(new ShaderSource(sh, src, Prelude.unit));
    };
};
var linkProgram = function (p) {
    return Control_Monad_Free.liftF(new LinkProgram(p, Prelude.unit));
};
var interpretWebGL = function (gl) {
    return function (_1001) {
        if (_1001 instanceof AttachShader) {
            return function __do() {
                Graphics_WebGL_Raw.attachShader(gl)(_1001.value0)(_1001.value1)();
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value2)();
            };
        };
        if (_1001 instanceof BindBuffer) {
            return function __do() {
                Graphics_WebGL_Raw.bindBuffer(gl)(_1001.value0)(_1001.value1)();
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value2)();
            };
        };
        if (_1001 instanceof BufferInt8Data) {
            return function __do() {
                Graphics_WebGL_Raw_Extra.bufferInt8Data(gl)(_1001.value0)(_1001.value1)(_1001.value2)();
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value3)();
            };
        };
        if (_1001 instanceof BufferInt16Data) {
            return function __do() {
                Graphics_WebGL_Raw_Extra.bufferInt16Data(gl)(_1001.value0)(_1001.value1)(_1001.value2)();
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value3)();
            };
        };
        if (_1001 instanceof BufferInt32Data) {
            return function __do() {
                Graphics_WebGL_Raw_Extra.bufferInt32Data(gl)(_1001.value0)(_1001.value1)(_1001.value2)();
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value3)();
            };
        };
        if (_1001 instanceof BufferUint8Data) {
            return function __do() {
                Graphics_WebGL_Raw_Extra.bufferUint8Data(gl)(_1001.value0)(_1001.value1)(_1001.value2)();
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value3)();
            };
        };
        if (_1001 instanceof BufferUint16Data) {
            return function __do() {
                Graphics_WebGL_Raw_Extra.bufferUint16Data(gl)(_1001.value0)(_1001.value1)(_1001.value2)();
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value3)();
            };
        };
        if (_1001 instanceof BufferUint32Data) {
            return function __do() {
                Graphics_WebGL_Raw_Extra.bufferUint32Data(gl)(_1001.value0)(_1001.value1)(_1001.value2)();
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value3)();
            };
        };
        if (_1001 instanceof BufferUint8ClampedData) {
            return function __do() {
                Graphics_WebGL_Raw_Extra.bufferUint8ClampedData(gl)(_1001.value0)(_1001.value1)(_1001.value2)();
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value3)();
            };
        };
        if (_1001 instanceof BufferFloat32Data) {
            return function __do() {
                Graphics_WebGL_Raw_Extra.bufferFloat32Data(gl)(_1001.value0)(_1001.value1)(_1001.value2)();
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value3)();
            };
        };
        if (_1001 instanceof BufferFloat64Data) {
            return function __do() {
                Graphics_WebGL_Raw_Extra.bufferFloat64Data(gl)(_1001.value0)(_1001.value1)(_1001.value2)();
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value3)();
            };
        };
        if (_1001 instanceof Clear) {
            return function __do() {
                Graphics_WebGL_Raw.clear(gl)(_1001.value0)();
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value1)();
            };
        };
        if (_1001 instanceof ClearColor) {
            return function __do() {
                Graphics_WebGL_Raw.clearColor(gl)(_1001.value0)(_1001.value1)(_1001.value2)(_1001.value3)();
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value4)();
            };
        };
        if (_1001 instanceof CompileShader) {
            return function __do() {
                Graphics_WebGL_Raw.compileShader(gl)(_1001.value0)();
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value1)();
            };
        };
        if (_1001 instanceof CreateBuffer) {
            return function __do() {
                var _68 = Graphics_WebGL_Raw.createBuffer(gl)();
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value0(_68))();
            };
        };
        if (_1001 instanceof CreateProgram) {
            return function __do() {
                var _69 = Graphics_WebGL_Raw.createProgram(gl)();
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value0(_69))();
            };
        };
        if (_1001 instanceof CreateShader) {
            return function __do() {
                var _70 = Graphics_WebGL_Raw.createShader(gl)(_1001.value0)();
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value1(_70))();
            };
        };
        if (_1001 instanceof DepthFunc) {
            return function __do() {
                Graphics_WebGL_Raw.depthFunc(gl)(_1001.value0)();
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value1)();
            };
        };
        if (_1001 instanceof DrawArrays) {
            return function __do() {
                Graphics_WebGL_Raw.drawArrays(gl)(_1001.value0)(_1001.value1)(_1001.value2)();
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value3)();
            };
        };
        if (_1001 instanceof DrawElements) {
            return function __do() {
                Graphics_WebGL_Raw.drawElements(gl)(_1001.value0)(_1001.value1)(_1001.value2)(_1001.value3)();
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value4)();
            };
        };
        if (_1001 instanceof Enable) {
            return function __do() {
                Graphics_WebGL_Raw.enable(gl)(_1001.value0)();
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value1)();
            };
        };
        if (_1001 instanceof EnableVertexAttribArray) {
            return function __do() {
                Graphics_WebGL_Raw.enableVertexAttribArray(gl)(_1001.value0)();
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value1)();
            };
        };
        if (_1001 instanceof GetAttribLocation) {
            return function __do() {
                var _71 = Graphics_WebGL_Raw.getAttribLocation(gl)(_1001.value0)(_1001.value1)();
                return (function () {
                    var _3756 = _71 === -1;
                    if (_3756) {
                        return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value2(Data_Maybe.Nothing.value));
                    };
                    if (!_3756) {
                        return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value2(new Data_Maybe.Just(_71)));
                    };
                    throw new Error("Failed pattern match at Graphics.WebGL.Free line 255, column 1 - line 256, column 1: " + [ _3756.constructor.name ]);
                })()();
            };
        };
        if (_1001 instanceof GetCanvas) {
            return function __do() {
                var _72 = Graphics_WebGL_Raw_Extra.getCanvas(gl)();
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value0(_72))();
            };
        };
        if (_1001 instanceof GetDrawingBufferHeight) {
            return function __do() {
                var _73 = Graphics_WebGL_Raw_Extra.getDrawingBufferHeight(gl)();
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value0(_73))();
            };
        };
        if (_1001 instanceof GetDrawingBufferWidth) {
            return function __do() {
                var _74 = Graphics_WebGL_Raw_Extra.getDrawingBufferWidth(gl)();
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value0(_74))();
            };
        };
        if (_1001 instanceof GetProgramInfoLog) {
            return function __do() {
                var _75 = Graphics_WebGL_Raw.getProgramInfoLog(gl)(_1001.value0)();
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value1(_75))();
            };
        };
        if (_1001 instanceof GetProgramLinkStatus) {
            return function __do() {
                var _76 = Graphics_WebGL_Raw.getProgramParameter(gl)(_1001.value0)(Graphics_WebGL_Raw_Enums.linkStatus)();
                if (_76 instanceof Data_Maybe.Just) {
                    return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value1(_76.value0))();
                };
                throw new Error("Failed pattern match at Graphics.WebGL.Free line 255, column 1 - line 256, column 1: " + [ _76.constructor.name ]);
            };
        };
        if (_1001 instanceof GetShaderCompileStatus) {
            return function __do() {
                var _77 = Graphics_WebGL_Raw.getShaderParameter(gl)(_1001.value0)(Graphics_WebGL_Raw_Enums.compileStatus)();
                if (_77 instanceof Data_Maybe.Just) {
                    return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value1(_77.value0))();
                };
                throw new Error("Failed pattern match at Graphics.WebGL.Free line 255, column 1 - line 256, column 1: " + [ _77.constructor.name ]);
            };
        };
        if (_1001 instanceof GetShaderInfoLog) {
            return function __do() {
                var _78 = Graphics_WebGL_Raw.getShaderInfoLog(gl)(_1001.value0)();
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value1(_78))();
            };
        };
        if (_1001 instanceof GetUniformLocation) {
            return function __do() {
                var _79 = Graphics_WebGL_Raw.getUniformLocation(gl)(_1001.value0)(_1001.value1)();
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value2(_79))();
            };
        };
        if (_1001 instanceof LinkProgram) {
            return function __do() {
                Graphics_WebGL_Raw.linkProgram(gl)(_1001.value0)();
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value1)();
            };
        };
        if (_1001 instanceof ShaderSource) {
            return function __do() {
                Graphics_WebGL_Raw.shaderSource(gl)(_1001.value0)(_1001.value1)();
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value2)();
            };
        };
        if (_1001 instanceof UniformMatrix4fv) {
            return function __do() {
                Graphics_WebGL_Raw.uniformMatrix4fv_(gl)(_1001.value0)(_1001.value1)(_1001.value2)();
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value3)();
            };
        };
        if (_1001 instanceof UseProgram) {
            return function __do() {
                Graphics_WebGL_Raw.useProgram(gl)(_1001.value0)();
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value1)();
            };
        };
        if (_1001 instanceof VertexAttribPointer) {
            return function __do() {
                Graphics_WebGL_Raw.vertexAttribPointer(gl)(_1001.value0)(_1001.value1)(_1001.value2)(_1001.value3)(_1001.value5)(_1001.value4)();
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value6)();
            };
        };
        if (_1001 instanceof Viewport) {
            return function __do() {
                Graphics_WebGL_Raw.viewport(gl)(_1001.value0)(_1001.value1)(_1001.value2)(_1001.value3)();
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1001.value4)();
            };
        };
        throw new Error("Failed pattern match at Graphics.WebGL.Free line 255, column 1 - line 256, column 1: " + [ gl.constructor.name, _1001.constructor.name ]);
    };
};
var getUniformLocation = function (program) {
    return function (name) {
        return Control_Monad_Free.liftF(new GetUniformLocation(program, name, Prelude.id(Prelude.categoryFn)));
    };
};
var getShaderInfoLog = function (s) {
    return Control_Monad_Free.liftF(new GetShaderInfoLog(s, Prelude.id(Prelude.categoryFn)));
};
var getShaderCompileStatus = function (s) {
    return Control_Monad_Free.liftF(new GetShaderCompileStatus(s, Prelude.id(Prelude.categoryFn)));
};
var getProgramLinkStatus = function (p) {
    return Control_Monad_Free.liftF(new GetProgramLinkStatus(p, Prelude.id(Prelude.categoryFn)));
};
var getProgramInfoLog = function (p) {
    return Control_Monad_Free.liftF(new GetProgramInfoLog(p, Prelude.id(Prelude.categoryFn)));
};
var getDrawingBufferWidth = Control_Monad_Free.liftF(new GetDrawingBufferWidth(Prelude.id(Prelude.categoryFn)));
var getDrawingBufferHeight = Control_Monad_Free.liftF(new GetDrawingBufferHeight(Prelude.id(Prelude.categoryFn)));
var getCanvas = Control_Monad_Free.liftF(new GetCanvas(Prelude.id(Prelude.categoryFn)));
var getAttribLocation = function (program) {
    return function (name) {
        return Control_Monad_Free.liftF(new GetAttribLocation(program, name, Prelude.id(Prelude.categoryFn)));
    };
};
var functorWebGLF = new Prelude.Functor(function (f) {
    return function (_1002) {
        if (_1002 instanceof AttachShader) {
            return new AttachShader(_1002.value0, _1002.value1, f(_1002.value2));
        };
        if (_1002 instanceof BindBuffer) {
            return new BindBuffer(_1002.value0, _1002.value1, f(_1002.value2));
        };
        if (_1002 instanceof BufferInt8Data) {
            return new BufferInt8Data(_1002.value0, _1002.value1, _1002.value2, f(_1002.value3));
        };
        if (_1002 instanceof BufferInt16Data) {
            return new BufferInt16Data(_1002.value0, _1002.value1, _1002.value2, f(_1002.value3));
        };
        if (_1002 instanceof BufferInt32Data) {
            return new BufferInt32Data(_1002.value0, _1002.value1, _1002.value2, f(_1002.value3));
        };
        if (_1002 instanceof BufferUint8Data) {
            return new BufferUint8Data(_1002.value0, _1002.value1, _1002.value2, f(_1002.value3));
        };
        if (_1002 instanceof BufferUint16Data) {
            return new BufferUint16Data(_1002.value0, _1002.value1, _1002.value2, f(_1002.value3));
        };
        if (_1002 instanceof BufferUint32Data) {
            return new BufferUint32Data(_1002.value0, _1002.value1, _1002.value2, f(_1002.value3));
        };
        if (_1002 instanceof BufferUint8ClampedData) {
            return new BufferUint8ClampedData(_1002.value0, _1002.value1, _1002.value2, f(_1002.value3));
        };
        if (_1002 instanceof BufferFloat32Data) {
            return new BufferFloat32Data(_1002.value0, _1002.value1, _1002.value2, f(_1002.value3));
        };
        if (_1002 instanceof BufferFloat64Data) {
            return new BufferFloat64Data(_1002.value0, _1002.value1, _1002.value2, f(_1002.value3));
        };
        if (_1002 instanceof Clear) {
            return new Clear(_1002.value0, f(_1002.value1));
        };
        if (_1002 instanceof ClearColor) {
            return new ClearColor(_1002.value0, _1002.value1, _1002.value2, _1002.value3, f(_1002.value4));
        };
        if (_1002 instanceof CompileShader) {
            return new CompileShader(_1002.value0, f(_1002.value1));
        };
        if (_1002 instanceof CreateBuffer) {
            return new CreateBuffer(function (_3922) {
                return f(_1002.value0(_3922));
            });
        };
        if (_1002 instanceof CreateProgram) {
            return new CreateProgram(function (_3923) {
                return f(_1002.value0(_3923));
            });
        };
        if (_1002 instanceof CreateShader) {
            return new CreateShader(_1002.value0, function (_3924) {
                return f(_1002.value1(_3924));
            });
        };
        if (_1002 instanceof DepthFunc) {
            return new DepthFunc(_1002.value0, f(_1002.value1));
        };
        if (_1002 instanceof DrawArrays) {
            return new DrawArrays(_1002.value0, _1002.value1, _1002.value2, f(_1002.value3));
        };
        if (_1002 instanceof DrawElements) {
            return new DrawElements(_1002.value0, _1002.value1, _1002.value2, _1002.value3, f(_1002.value4));
        };
        if (_1002 instanceof Enable) {
            return new Enable(_1002.value0, f(_1002.value1));
        };
        if (_1002 instanceof EnableVertexAttribArray) {
            return new EnableVertexAttribArray(_1002.value0, f(_1002.value1));
        };
        if (_1002 instanceof GetAttribLocation) {
            return new GetAttribLocation(_1002.value0, _1002.value1, function (_3925) {
                return f(_1002.value2(_3925));
            });
        };
        if (_1002 instanceof GetCanvas) {
            return new GetCanvas(function (_3926) {
                return f(_1002.value0(_3926));
            });
        };
        if (_1002 instanceof GetDrawingBufferHeight) {
            return new GetDrawingBufferHeight(function (_3927) {
                return f(_1002.value0(_3927));
            });
        };
        if (_1002 instanceof GetDrawingBufferWidth) {
            return new GetDrawingBufferWidth(function (_3928) {
                return f(_1002.value0(_3928));
            });
        };
        if (_1002 instanceof GetProgramInfoLog) {
            return new GetProgramInfoLog(_1002.value0, function (_3929) {
                return f(_1002.value1(_3929));
            });
        };
        if (_1002 instanceof GetProgramLinkStatus) {
            return new GetProgramLinkStatus(_1002.value0, function (_3930) {
                return f(_1002.value1(_3930));
            });
        };
        if (_1002 instanceof GetShaderCompileStatus) {
            return new GetShaderCompileStatus(_1002.value0, function (_3931) {
                return f(_1002.value1(_3931));
            });
        };
        if (_1002 instanceof GetShaderInfoLog) {
            return new GetShaderInfoLog(_1002.value0, function (_3932) {
                return f(_1002.value1(_3932));
            });
        };
        if (_1002 instanceof GetUniformLocation) {
            return new GetUniformLocation(_1002.value0, _1002.value1, function (_3933) {
                return f(_1002.value2(_3933));
            });
        };
        if (_1002 instanceof LinkProgram) {
            return new LinkProgram(_1002.value0, f(_1002.value1));
        };
        if (_1002 instanceof ShaderSource) {
            return new ShaderSource(_1002.value0, _1002.value1, f(_1002.value2));
        };
        if (_1002 instanceof UniformMatrix4fv) {
            return new UniformMatrix4fv(_1002.value0, _1002.value1, _1002.value2, f(_1002.value3));
        };
        if (_1002 instanceof UseProgram) {
            return new UseProgram(_1002.value0, f(_1002.value1));
        };
        if (_1002 instanceof VertexAttribPointer) {
            return new VertexAttribPointer(_1002.value0, _1002.value1, _1002.value2, _1002.value3, _1002.value4, _1002.value5, f(_1002.value6));
        };
        if (_1002 instanceof Viewport) {
            return new Viewport(_1002.value0, _1002.value1, _1002.value2, _1002.value3, f(_1002.value4));
        };
        throw new Error("Failed pattern match at Graphics.WebGL.Free line 101, column 1 - line 141, column 1: " + [ f.constructor.name, _1002.constructor.name ]);
    };
});
var runWebGL = function (_3934) {
    return Control_Monad_Free.runFreeM(functorWebGLF)(Control_Monad_Rec_Class.monadRecEff)(interpretWebGL(_3934));
};
var enableVertexAttribArray = function (location) {
    return Control_Monad_Free.liftF(new EnableVertexAttribArray(location, Prelude.unit));
};
var enable = function (cap) {
    return Control_Monad_Free.liftF(new Enable(cap, Prelude.unit));
};
var drawElements = function (mode) {
    return function (count) {
        return function (t) {
            return function (offset) {
                return Control_Monad_Free.liftF(new DrawElements(mode, count, t, offset, Prelude.unit));
            };
        };
    };
};
var drawArrays = function (mode) {
    return function (first) {
        return function (count) {
            return Control_Monad_Free.liftF(new DrawArrays(mode, first, count, Prelude.unit));
        };
    };
};
var depthFunc = function (func) {
    return Control_Monad_Free.liftF(new DepthFunc(func, Prelude.unit));
};
var debugWebGL = function (gl) {
    var interpretDebug = function (comp) {
        return function __do() {
            var _81 = interpretWebGL(gl)(comp)();
            var _80 = Graphics_WebGL_Raw.getError(gl)();
            return (function () {
                var _3921 = _80 === Graphics_WebGL_Raw_Enums.noError;
                if (_3921) {
                    return Prelude["return"](Control_Monad_Eff.applicativeEff)(_81);
                };
                if (!_3921) {
                    return function __do() {
                        Control_Monad_Eff_Console.error("WebGL Error: " + Prelude.show(Prelude.showInt)(_80))();
                        return Prelude["return"](Control_Monad_Eff.applicativeEff)(_81)();
                    };
                };
                throw new Error("Failed pattern match at Graphics.WebGL.Free line 378, column 3 - line 379, column 3: " + [ _3921.constructor.name ]);
            })()();
        };
    };
    return Control_Monad_Free.runFreeM(functorWebGLF)(Control_Monad_Rec_Class.monadRecEff)(interpretDebug);
};
var createShader = function (t) {
    return Control_Monad_Free.liftF(new CreateShader(t, Prelude.id(Prelude.categoryFn)));
};
var createProgram = Control_Monad_Free.liftF(new CreateProgram(Prelude.id(Prelude.categoryFn)));
var createBuffer = Control_Monad_Free.liftF(new CreateBuffer(Prelude.id(Prelude.categoryFn)));
var compileShader = function (s) {
    return Control_Monad_Free.liftF(new CompileShader(s, Prelude.unit));
};
var clearColor = function (r) {
    return function (g) {
        return function (b) {
            return function (a) {
                return Control_Monad_Free.liftF(new ClearColor(r, g, b, a, Prelude.unit));
            };
        };
    };
};
var clear = function (mask) {
    return Control_Monad_Free.liftF(new Clear(mask, Prelude.unit));
};
var bufferUint8Data = function (t) {
    return function (s) {
        return function (u) {
            return Control_Monad_Free.liftF(new BufferUint8Data(t, s, u, Prelude.unit));
        };
    };
};
var bufferUint8ClampedData = function (t) {
    return function (s) {
        return function (u) {
            return Control_Monad_Free.liftF(new BufferUint8ClampedData(t, s, u, Prelude.unit));
        };
    };
};
var bufferUint32Data = function (t) {
    return function (s) {
        return function (u) {
            return Control_Monad_Free.liftF(new BufferUint32Data(t, s, u, Prelude.unit));
        };
    };
};
var bufferUint16Data = function (t) {
    return function (s) {
        return function (u) {
            return Control_Monad_Free.liftF(new BufferUint16Data(t, s, u, Prelude.unit));
        };
    };
};
var bufferInt8Data = function (t) {
    return function (s) {
        return function (u) {
            return Control_Monad_Free.liftF(new BufferInt8Data(t, s, u, Prelude.unit));
        };
    };
};
var bufferInt32Data = function (t) {
    return function (s) {
        return function (u) {
            return Control_Monad_Free.liftF(new BufferInt32Data(t, s, u, Prelude.unit));
        };
    };
};
var bufferInt16Data = function (t) {
    return function (s) {
        return function (u) {
            return Control_Monad_Free.liftF(new BufferInt16Data(t, s, u, Prelude.unit));
        };
    };
};
var bufferFloat64Data = function (t) {
    return function (s) {
        return function (u) {
            return Control_Monad_Free.liftF(new BufferFloat64Data(t, s, u, Prelude.unit));
        };
    };
};
var bufferFloat32Data = function (t) {
    return function (s) {
        return function (u) {
            return Control_Monad_Free.liftF(new BufferFloat32Data(t, s, u, Prelude.unit));
        };
    };
};
var bindBuffer = function (t) {
    return function (b) {
        return Control_Monad_Free.liftF(new BindBuffer(t, b, Prelude.unit));
    };
};
var attachShader = function (p) {
    return function (s) {
        return Control_Monad_Free.liftF(new AttachShader(p, s, Prelude.unit));
    };
};
module.exports = {
    AttributeLocation: AttributeLocation, 
    viewport: viewport, 
    vertexAttribPointer: vertexAttribPointer, 
    useProgram: useProgram, 
    uniformMatrix4fv: uniformMatrix4fv, 
    shaderSource: shaderSource, 
    linkProgram: linkProgram, 
    getUniformLocation: getUniformLocation, 
    getShaderInfoLog: getShaderInfoLog, 
    getShaderCompileStatus: getShaderCompileStatus, 
    getProgramLinkStatus: getProgramLinkStatus, 
    getProgramInfoLog: getProgramInfoLog, 
    getDrawingBufferWidth: getDrawingBufferWidth, 
    getDrawingBufferHeight: getDrawingBufferHeight, 
    getCanvas: getCanvas, 
    getAttribLocation: getAttribLocation, 
    enableVertexAttribArray: enableVertexAttribArray, 
    enable: enable, 
    drawElements: drawElements, 
    drawArrays: drawArrays, 
    depthFunc: depthFunc, 
    createShader: createShader, 
    compileShader: compileShader, 
    createProgram: createProgram, 
    clearColor: clearColor, 
    createBuffer: createBuffer, 
    clear: clear, 
    bufferFloat64Data: bufferFloat64Data, 
    bufferFloat32Data: bufferFloat32Data, 
    bufferUint8ClampedData: bufferUint8ClampedData, 
    bufferUint32Data: bufferUint32Data, 
    bufferUint16Data: bufferUint16Data, 
    bufferUint8Data: bufferUint8Data, 
    bufferInt32Data: bufferInt32Data, 
    bufferInt16Data: bufferInt16Data, 
    bufferInt8Data: bufferInt8Data, 
    bindBuffer: bindBuffer, 
    attachShader: attachShader, 
    runWebGL: runWebGL, 
    debugWebGL: debugWebGL, 
    functorWebGLF: functorWebGLF
};

},{"Control.Monad.Eff":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff\\index.js","Control.Monad.Eff.Console":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff.Console\\index.js","Control.Monad.Free":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Free\\index.js","Control.Monad.Rec.Class":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Rec.Class\\index.js","Data.ArrayBuffer.Types":"c:\\Development\\Web\\jundo\\output\\Data.ArrayBuffer.Types\\index.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js","Graphics.Canvas":"c:\\Development\\Web\\jundo\\output\\Graphics.Canvas\\index.js","Graphics.WebGL.Raw":"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Raw\\index.js","Graphics.WebGL.Raw.Enums":"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Raw.Enums\\index.js","Graphics.WebGL.Raw.Extra":"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Raw.Extra\\index.js","Graphics.WebGL.Raw.Types":"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Raw.Types\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Raw.Enums\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Graphics_WebGL_Raw_Types = require("Graphics.WebGL.Raw.Types");
var zero = 0;
var viewport = 2978;
var vertexShader = 35633;
var vertexAttribArrayType = 34341;
var vertexAttribArrayStride = 34340;
var vertexAttribArraySize = 34339;
var vertexAttribArrayPointer = 34373;
var vertexAttribArrayNormalized = 34922;
var vertexAttribArrayEnabled = 34338;
var vertexAttribArrayBufferBinding = 34975;
var version = 7938;
var vendor = 7936;
var validateStatus = 35715;
var unsignedShort565 = 33635;
var unsignedShort5551 = 32820;
var unsignedShort4444 = 32819;
var unsignedShort = 5123;
var unsignedInt = 5125;
var unsignedByte = 5121;
var unpackPremultiplyAlphaWebgl = 37441;
var unpackFlipYWebgl = 37440;
var unpackColorspaceConversionWebgl = 37443;
var unpackAlignment = 3317;
var triangles = 4;
var triangleStrip = 5;
var triangleFan = 6;
var textureWrapT = 10243;
var textureWrapS = 10242;
var textureMinFilter = 10241;
var textureMagFilter = 10240;
var textureCubeMapPositiveZ = 34073;
var textureCubeMapPositiveY = 34071;
var textureCubeMapPositiveX = 34069;
var textureCubeMapNegativeZ = 34074;
var textureCubeMapNegativeY = 34072;
var textureCubeMapNegativeX = 34070;
var textureCubeMap = 34067;
var textureBindingCubeMap = 34068;
var textureBinding2d = 32873;
var texture9 = 33993;
var texture8 = 33992;
var texture7 = 33991;
var texture6 = 33990;
var texture5 = 33989;
var texture4 = 33988;
var texture31 = 34015;
var texture30 = 34014;
var texture3 = 33987;
var texture2d = 3553;
var texture29 = 34013;
var texture28 = 34012;
var texture27 = 34011;
var texture26 = 34010;
var texture25 = 34009;
var texture24 = 34008;
var texture23 = 34007;
var texture22 = 34006;
var texture21 = 34005;
var texture20 = 34004;
var texture2 = 33986;
var texture19 = 34003;
var texture18 = 34002;
var texture17 = 34001;
var texture16 = 34000;
var texture15 = 33999;
var texture14 = 33998;
var texture13 = 33997;
var texture12 = 33996;
var texture11 = 33995;
var texture10 = 33994;
var texture1 = 33985;
var texture0 = 33984;
var texture = 5890;
var subpixelBits = 3408;
var streamDraw = 35040;
var stencilWritemask = 2968;
var stencilValueMask = 2963;
var stencilTest = 2960;
var stencilRef = 2967;
var stencilPassDepthPass = 2966;
var stencilPassDepthFail = 2965;
var stencilIndex8 = 36168;
var stencilIndex = 6401;
var stencilFunc = 2962;
var stencilFail = 2964;
var stencilClearValue = 2961;
var stencilBufferBit = 1024;
var stencilBits = 3415;
var stencilBackWritemask = 36005;
var stencilBackValueMask = 36004;
var stencilBackRef = 36003;
var stencilBackPassDepthPass = 34819;
var stencilBackPassDepthFail = 34818;
var stencilBackFunc = 34816;
var stencilBackFail = 34817;
var stencilAttachment = 36128;
var staticDraw = 35044;
var srcColor = 768;
var srcAlphaSaturate = 776;
var srcAlpha = 770;
var $$short = 5122;
var shadingLanguageVersion = 35724;
var shaderType = 35663;
var scissorTest = 3089;
var scissorBox = 3088;
var samples = 32937;
var samplerCube = 35680;
var sampler2d = 35678;
var sampleCoverageValue = 32938;
var sampleCoverageInvert = 32939;
var sampleCoverage = 32928;
var sampleBuffers = 32936;
var sampleAlphaToCoverage = 32926;
var rgba4 = 32854;
var rgba = 6408;
var rgb5A1 = 32855;
var rgb565 = 36194;
var rgb = 6407;
var replace = 7681;
var repeat = 10497;
var renderer = 7937;
var renderbufferWidth = 36162;
var renderbufferStencilSize = 36181;
var renderbufferRedSize = 36176;
var renderbufferInternalFormat = 36164;
var renderbufferHeight = 36163;
var renderbufferGreenSize = 36177;
var renderbufferDepthSize = 36180;
var renderbufferBlueSize = 36178;
var renderbufferBinding = 36007;
var renderbufferAlphaSize = 36179;
var renderbuffer = 36161;
var redBits = 3410;
var polygonOffsetUnits = 10752;
var polygonOffsetFill = 32823;
var polygonOffsetFactor = 32824;
var points = 0;
var packAlignment = 3333;
var outOfMemory = 1285;
var oneMinusSrcColor = 769;
var oneMinusSrcAlpha = 771;
var oneMinusDstColor = 775;
var oneMinusDstAlpha = 773;
var oneMinusConstantColor = 32770;
var oneMinusConstantAlpha = 32772;
var one = 1;
var notequal = 517;
var none = 0;
var noError = 0;
var nicest = 4354;
var never = 512;
var nearestMipmapNearest = 9984;
var nearestMipmapLinear = 9986;
var nearest = 9728;
var mirroredRepeat = 33648;
var mediumInt = 36340;
var mediumFloat = 36337;
var maxViewportDims = 3386;
var maxVertexUniformVectors = 36347;
var maxVertexTextureImageUnits = 35660;
var maxVertexAttribs = 34921;
var maxVaryingVectors = 36348;
var maxTextureSize = 3379;
var maxTextureImageUnits = 34930;
var maxRenderbufferSize = 34024;
var maxFragmentUniformVectors = 36349;
var maxCubeMapTextureSize = 34076;
var maxCombinedTextureImageUnits = 35661;
var luminanceAlpha = 6410;
var luminance = 6409;
var lowInt = 36339;
var lowFloat = 36336;
var linkStatus = 35714;
var lines = 1;
var linearMipmapNearest = 9985;
var linearMipmapLinear = 9987;
var linear = 9729;
var lineWidth = 2849;
var lineStrip = 3;
var lineLoop = 2;
var less = 513;
var lequal = 515;
var keep = 7680;
var invert = 5386;
var invalidValue = 1281;
var invalidOperation = 1282;
var invalidFramebufferOperation = 1286;
var invalidEnum = 1280;
var intVec4 = 35669;
var intVec3 = 35668;
var intVec2 = 35667;
var $$int = 5124;
var incrWrap = 34055;
var incr = 7682;
var implementationColorReadType = 35738;
var implementationColorReadFormat = 35739;
var highInt = 36341;
var highFloat = 36338;
var greenBits = 3411;
var greater = 516;
var gequal = 518;
var generateMipmapHint = 33170;
var funcSubtract = 32778;
var funcReverseSubtract = 32779;
var funcAdd = 32774;
var frontFace = 2886;
var frontAndBack = 1032;
var front = 1028;
var framebufferUnsupported = 36061;
var framebufferIncompleteMissingAttachment = 36055;
var framebufferIncompleteDimensions = 36057;
var framebufferIncompleteAttachment = 36054;
var framebufferComplete = 36053;
var framebufferBinding = 36006;
var framebufferAttachmentTextureLevel = 36050;
var framebufferAttachmentTextureCubeMapFace = 36051;
var framebufferAttachmentObjectType = 36048;
var framebufferAttachmentObjectName = 36049;
var framebuffer = 36160;
var fragmentShader = 35632;
var floatVec4 = 35666;
var floatVec3 = 35665;
var floatVec2 = 35664;
var floatMat4 = 35676;
var floatMat3 = 35675;
var floatMat2 = 35674;
var $$float = 5126;
var fastest = 4353;
var equal = 514;
var elementArrayBufferBinding = 34965;
var elementArrayBuffer = 34963;
var dynamicDraw = 35048;
var dstColor = 774;
var dstAlpha = 772;
var dontCare = 4352;
var dither = 3024;
var depthWritemask = 2930;
var depthTest = 2929;
var depthStencilAttachment = 33306;
var depthStencil = 34041;
var depthRange = 2928;
var depthFunc = 2932;
var depthComponent16 = 33189;
var depthComponent = 6402;
var depthClearValue = 2931;
var depthBufferBit = 256;
var depthBits = 3414;
var depthAttachment = 36096;
var deleteStatus = 35712;
var decrWrap = 34056;
var decr = 7683;
var cw = 2304;
var currentVertexAttrib = 34342;
var currentProgram = 35725;
var cullFaceMode = 2885;
var cullFace = 2884;
var contextLostWebgl = 37442;
var constantColor = 32769;
var constantAlpha = 32771;
var compressedTextureFormats = 34467;
var compileStatus = 35713;
var colorWritemask = 3107;
var colorClearValue = 3106;
var colorBufferBit = 16384;
var colorAttachment0 = 36064;
var clampToEdge = 33071;
var ccw = 2305;
var $$byte = 5120;
var bufferUsage = 34661;
var bufferSize = 34660;
var browserDefaultWebgl = 37444;
var boolVec4 = 35673;
var boolVec3 = 35672;
var boolVec2 = 35671;
var bool = 35670;
var blueBits = 3412;
var blendSrcRgb = 32969;
var blendSrcAlpha = 32971;
var blendEquationRgb = 32777;
var blendEquationAlpha = 34877;
var blendEquation = 32777;
var blendDstRgb = 32968;
var blendDstAlpha = 32970;
var blendColor = 32773;
var blend = 3042;
var back = 1029;
var attachedShaders = 35717;
var arrayBufferBinding = 34964;
var arrayBuffer = 34962;
var always = 519;
var alphaBits = 3413;
var alpha = 6406;
var aliasedPointSizeRange = 33901;
var aliasedLineWidthRange = 33902;
var activeUniforms = 35718;
var activeTexture = 34016;
var activeAttributes = 35721;
module.exports = {
    zero: zero, 
    viewport: viewport, 
    vertexShader: vertexShader, 
    vertexAttribArrayType: vertexAttribArrayType, 
    vertexAttribArrayStride: vertexAttribArrayStride, 
    vertexAttribArraySize: vertexAttribArraySize, 
    vertexAttribArrayPointer: vertexAttribArrayPointer, 
    vertexAttribArrayNormalized: vertexAttribArrayNormalized, 
    vertexAttribArrayEnabled: vertexAttribArrayEnabled, 
    vertexAttribArrayBufferBinding: vertexAttribArrayBufferBinding, 
    version: version, 
    vendor: vendor, 
    validateStatus: validateStatus, 
    unsignedShort565: unsignedShort565, 
    unsignedShort5551: unsignedShort5551, 
    unsignedShort4444: unsignedShort4444, 
    unsignedShort: unsignedShort, 
    unsignedInt: unsignedInt, 
    unsignedByte: unsignedByte, 
    unpackPremultiplyAlphaWebgl: unpackPremultiplyAlphaWebgl, 
    unpackFlipYWebgl: unpackFlipYWebgl, 
    unpackColorspaceConversionWebgl: unpackColorspaceConversionWebgl, 
    unpackAlignment: unpackAlignment, 
    triangleStrip: triangleStrip, 
    triangleFan: triangleFan, 
    triangles: triangles, 
    textureWrapT: textureWrapT, 
    textureWrapS: textureWrapS, 
    textureMinFilter: textureMinFilter, 
    textureMagFilter: textureMagFilter, 
    textureCubeMapPositiveZ: textureCubeMapPositiveZ, 
    textureCubeMapPositiveY: textureCubeMapPositiveY, 
    textureCubeMapPositiveX: textureCubeMapPositiveX, 
    textureCubeMapNegativeZ: textureCubeMapNegativeZ, 
    textureCubeMapNegativeY: textureCubeMapNegativeY, 
    textureCubeMapNegativeX: textureCubeMapNegativeX, 
    textureCubeMap: textureCubeMap, 
    textureBindingCubeMap: textureBindingCubeMap, 
    textureBinding2d: textureBinding2d, 
    texture2d: texture2d, 
    texture9: texture9, 
    texture8: texture8, 
    texture7: texture7, 
    texture6: texture6, 
    texture5: texture5, 
    texture4: texture4, 
    texture31: texture31, 
    texture30: texture30, 
    texture3: texture3, 
    texture29: texture29, 
    texture28: texture28, 
    texture27: texture27, 
    texture26: texture26, 
    texture25: texture25, 
    texture24: texture24, 
    texture23: texture23, 
    texture22: texture22, 
    texture21: texture21, 
    texture20: texture20, 
    texture2: texture2, 
    texture19: texture19, 
    texture18: texture18, 
    texture17: texture17, 
    texture16: texture16, 
    texture15: texture15, 
    texture14: texture14, 
    texture13: texture13, 
    texture12: texture12, 
    texture11: texture11, 
    texture10: texture10, 
    texture1: texture1, 
    texture0: texture0, 
    texture: texture, 
    subpixelBits: subpixelBits, 
    streamDraw: streamDraw, 
    stencilWritemask: stencilWritemask, 
    stencilValueMask: stencilValueMask, 
    stencilTest: stencilTest, 
    stencilRef: stencilRef, 
    stencilPassDepthPass: stencilPassDepthPass, 
    stencilPassDepthFail: stencilPassDepthFail, 
    stencilIndex8: stencilIndex8, 
    stencilIndex: stencilIndex, 
    stencilFunc: stencilFunc, 
    stencilFail: stencilFail, 
    stencilClearValue: stencilClearValue, 
    stencilBufferBit: stencilBufferBit, 
    stencilBits: stencilBits, 
    stencilBackWritemask: stencilBackWritemask, 
    stencilBackValueMask: stencilBackValueMask, 
    stencilBackRef: stencilBackRef, 
    stencilBackPassDepthPass: stencilBackPassDepthPass, 
    stencilBackPassDepthFail: stencilBackPassDepthFail, 
    stencilBackFunc: stencilBackFunc, 
    stencilBackFail: stencilBackFail, 
    stencilAttachment: stencilAttachment, 
    staticDraw: staticDraw, 
    srcColor: srcColor, 
    srcAlphaSaturate: srcAlphaSaturate, 
    srcAlpha: srcAlpha, 
    "short": $$short, 
    shadingLanguageVersion: shadingLanguageVersion, 
    shaderType: shaderType, 
    scissorTest: scissorTest, 
    scissorBox: scissorBox, 
    sampleCoverageValue: sampleCoverageValue, 
    sampleCoverageInvert: sampleCoverageInvert, 
    sampleCoverage: sampleCoverage, 
    sampleBuffers: sampleBuffers, 
    sampleAlphaToCoverage: sampleAlphaToCoverage, 
    samples: samples, 
    samplerCube: samplerCube, 
    sampler2d: sampler2d, 
    rgba4: rgba4, 
    rgba: rgba, 
    rgb5A1: rgb5A1, 
    rgb565: rgb565, 
    rgb: rgb, 
    replace: replace, 
    repeat: repeat, 
    renderer: renderer, 
    renderbufferWidth: renderbufferWidth, 
    renderbufferStencilSize: renderbufferStencilSize, 
    renderbufferRedSize: renderbufferRedSize, 
    renderbufferInternalFormat: renderbufferInternalFormat, 
    renderbufferHeight: renderbufferHeight, 
    renderbufferGreenSize: renderbufferGreenSize, 
    renderbufferDepthSize: renderbufferDepthSize, 
    renderbufferBlueSize: renderbufferBlueSize, 
    renderbufferBinding: renderbufferBinding, 
    renderbufferAlphaSize: renderbufferAlphaSize, 
    renderbuffer: renderbuffer, 
    redBits: redBits, 
    polygonOffsetUnits: polygonOffsetUnits, 
    polygonOffsetFill: polygonOffsetFill, 
    polygonOffsetFactor: polygonOffsetFactor, 
    points: points, 
    packAlignment: packAlignment, 
    outOfMemory: outOfMemory, 
    oneMinusSrcColor: oneMinusSrcColor, 
    oneMinusSrcAlpha: oneMinusSrcAlpha, 
    oneMinusDstColor: oneMinusDstColor, 
    oneMinusDstAlpha: oneMinusDstAlpha, 
    oneMinusConstantColor: oneMinusConstantColor, 
    oneMinusConstantAlpha: oneMinusConstantAlpha, 
    one: one, 
    noError: noError, 
    notequal: notequal, 
    none: none, 
    nicest: nicest, 
    never: never, 
    nearestMipmapNearest: nearestMipmapNearest, 
    nearestMipmapLinear: nearestMipmapLinear, 
    nearest: nearest, 
    mirroredRepeat: mirroredRepeat, 
    mediumInt: mediumInt, 
    mediumFloat: mediumFloat, 
    maxViewportDims: maxViewportDims, 
    maxVertexUniformVectors: maxVertexUniformVectors, 
    maxVertexTextureImageUnits: maxVertexTextureImageUnits, 
    maxVertexAttribs: maxVertexAttribs, 
    maxVaryingVectors: maxVaryingVectors, 
    maxTextureSize: maxTextureSize, 
    maxTextureImageUnits: maxTextureImageUnits, 
    maxRenderbufferSize: maxRenderbufferSize, 
    maxFragmentUniformVectors: maxFragmentUniformVectors, 
    maxCubeMapTextureSize: maxCubeMapTextureSize, 
    maxCombinedTextureImageUnits: maxCombinedTextureImageUnits, 
    luminanceAlpha: luminanceAlpha, 
    luminance: luminance, 
    lowInt: lowInt, 
    lowFloat: lowFloat, 
    linkStatus: linkStatus, 
    lineWidth: lineWidth, 
    lineStrip: lineStrip, 
    lineLoop: lineLoop, 
    lines: lines, 
    linearMipmapNearest: linearMipmapNearest, 
    linearMipmapLinear: linearMipmapLinear, 
    linear: linear, 
    less: less, 
    lequal: lequal, 
    keep: keep, 
    invert: invert, 
    invalidValue: invalidValue, 
    invalidOperation: invalidOperation, 
    invalidFramebufferOperation: invalidFramebufferOperation, 
    invalidEnum: invalidEnum, 
    intVec4: intVec4, 
    intVec3: intVec3, 
    intVec2: intVec2, 
    "int": $$int, 
    incrWrap: incrWrap, 
    incr: incr, 
    implementationColorReadType: implementationColorReadType, 
    implementationColorReadFormat: implementationColorReadFormat, 
    highInt: highInt, 
    highFloat: highFloat, 
    greenBits: greenBits, 
    greater: greater, 
    gequal: gequal, 
    generateMipmapHint: generateMipmapHint, 
    funcSubtract: funcSubtract, 
    funcReverseSubtract: funcReverseSubtract, 
    funcAdd: funcAdd, 
    frontFace: frontFace, 
    frontAndBack: frontAndBack, 
    front: front, 
    framebufferUnsupported: framebufferUnsupported, 
    framebufferIncompleteMissingAttachment: framebufferIncompleteMissingAttachment, 
    framebufferIncompleteDimensions: framebufferIncompleteDimensions, 
    framebufferIncompleteAttachment: framebufferIncompleteAttachment, 
    framebufferComplete: framebufferComplete, 
    framebufferBinding: framebufferBinding, 
    framebufferAttachmentTextureLevel: framebufferAttachmentTextureLevel, 
    framebufferAttachmentTextureCubeMapFace: framebufferAttachmentTextureCubeMapFace, 
    framebufferAttachmentObjectType: framebufferAttachmentObjectType, 
    framebufferAttachmentObjectName: framebufferAttachmentObjectName, 
    framebuffer: framebuffer, 
    fragmentShader: fragmentShader, 
    floatVec4: floatVec4, 
    floatVec3: floatVec3, 
    floatVec2: floatVec2, 
    floatMat4: floatMat4, 
    floatMat3: floatMat3, 
    floatMat2: floatMat2, 
    "float": $$float, 
    fastest: fastest, 
    equal: equal, 
    elementArrayBufferBinding: elementArrayBufferBinding, 
    elementArrayBuffer: elementArrayBuffer, 
    dynamicDraw: dynamicDraw, 
    dstColor: dstColor, 
    dstAlpha: dstAlpha, 
    dontCare: dontCare, 
    dither: dither, 
    depthWritemask: depthWritemask, 
    depthTest: depthTest, 
    depthStencilAttachment: depthStencilAttachment, 
    depthStencil: depthStencil, 
    depthRange: depthRange, 
    depthFunc: depthFunc, 
    depthComponent16: depthComponent16, 
    depthComponent: depthComponent, 
    depthClearValue: depthClearValue, 
    depthBufferBit: depthBufferBit, 
    depthBits: depthBits, 
    depthAttachment: depthAttachment, 
    deleteStatus: deleteStatus, 
    decrWrap: decrWrap, 
    decr: decr, 
    cw: cw, 
    currentVertexAttrib: currentVertexAttrib, 
    currentProgram: currentProgram, 
    cullFaceMode: cullFaceMode, 
    cullFace: cullFace, 
    contextLostWebgl: contextLostWebgl, 
    constantColor: constantColor, 
    constantAlpha: constantAlpha, 
    compressedTextureFormats: compressedTextureFormats, 
    compileStatus: compileStatus, 
    colorWritemask: colorWritemask, 
    colorClearValue: colorClearValue, 
    colorBufferBit: colorBufferBit, 
    colorAttachment0: colorAttachment0, 
    clampToEdge: clampToEdge, 
    ccw: ccw, 
    "byte": $$byte, 
    bufferUsage: bufferUsage, 
    bufferSize: bufferSize, 
    browserDefaultWebgl: browserDefaultWebgl, 
    boolVec4: boolVec4, 
    boolVec3: boolVec3, 
    boolVec2: boolVec2, 
    bool: bool, 
    blueBits: blueBits, 
    blendSrcRgb: blendSrcRgb, 
    blendSrcAlpha: blendSrcAlpha, 
    blendEquationRgb: blendEquationRgb, 
    blendEquationAlpha: blendEquationAlpha, 
    blendEquation: blendEquation, 
    blendDstRgb: blendDstRgb, 
    blendDstAlpha: blendDstAlpha, 
    blendColor: blendColor, 
    blend: blend, 
    back: back, 
    attachedShaders: attachedShaders, 
    arrayBufferBinding: arrayBufferBinding, 
    arrayBuffer: arrayBuffer, 
    always: always, 
    alphaBits: alphaBits, 
    alpha: alpha, 
    aliasedPointSizeRange: aliasedPointSizeRange, 
    aliasedLineWidthRange: aliasedLineWidthRange, 
    activeUniforms: activeUniforms, 
    activeTexture: activeTexture, 
    activeAttributes: activeAttributes
};

},{"Graphics.WebGL.Raw.Types":"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Raw.Types\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Raw.Extra\\foreign.js":[function(require,module,exports){
// module Graphics.WebGL.Raw.Extra

exports.getCanvas = function(gl) {
  return function() {
    return gl.canvas;
  };
};

exports.getDrawingBufferWidth = function(gl) {
  return function() {
    return gl.drawingBufferWidth;
  };
};

exports.getDrawingBufferHeight = function(gl) {
  return function() {
    return gl.drawingBufferHeight;
  };
};

exports.bufferData = function(gl) {
  return function(target) {
    return function(data) {
      return function(usage) {
        return function() {
          gl.bufferData(target, data, usage);
        };
      };
    };
  };
};

},{}],"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Raw.Extra\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_ArrayBuffer_Types = require("Data.ArrayBuffer.Types");
var Graphics_Canvas = require("Graphics.Canvas");
var Graphics_WebGL_Raw_Types = require("Graphics.WebGL.Raw.Types");
var bufferUint8Data = $foreign.bufferData;
var bufferUint8ClampedData = $foreign.bufferData;
var bufferUint32Data = $foreign.bufferData;
var bufferUint16Data = $foreign.bufferData;
var bufferInt8Data = $foreign.bufferData;
var bufferInt32Data = $foreign.bufferData;
var bufferInt16Data = $foreign.bufferData;
var bufferFloat64Data = $foreign.bufferData;
var bufferFloat32Data = $foreign.bufferData;
module.exports = {
    bufferFloat64Data: bufferFloat64Data, 
    bufferFloat32Data: bufferFloat32Data, 
    bufferUint8ClampedData: bufferUint8ClampedData, 
    bufferUint32Data: bufferUint32Data, 
    bufferUint16Data: bufferUint16Data, 
    bufferUint8Data: bufferUint8Data, 
    bufferInt32Data: bufferInt32Data, 
    bufferInt16Data: bufferInt16Data, 
    bufferInt8Data: bufferInt8Data, 
    getDrawingBufferWidth: $foreign.getDrawingBufferWidth, 
    getDrawingBufferHeight: $foreign.getDrawingBufferHeight, 
    getCanvas: $foreign.getCanvas
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Raw.Extra\\foreign.js","Control.Monad.Eff":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff\\index.js","Data.ArrayBuffer.Types":"c:\\Development\\Web\\jundo\\output\\Data.ArrayBuffer.Types\\index.js","Graphics.Canvas":"c:\\Development\\Web\\jundo\\output\\Graphics.Canvas\\index.js","Graphics.WebGL.Raw.Types":"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Raw.Types\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Raw.Types\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Data_ArrayBuffer_Types = require("Data.ArrayBuffer.Types");
module.exports = {};

},{"Data.ArrayBuffer.Types":"c:\\Development\\Web\\jundo\\output\\Data.ArrayBuffer.Types\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Raw.Util\\foreign.js":[function(require,module,exports){
"use strict";

// module Graphics.WebGL.Raw.Util

exports.toMaybeImpl = function (Nothing, Just, x) {
  if (x === undefined || x === null) {
    return Nothing;
  } else {
    return Just(x);
  }
}

exports.nullAsEmpty = function (x) {
  if (x === undefined || x === null) {
    return [];
  } else {
    return x;
  }
}

},{}],"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Raw.Util\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Data_Function = require("Data.Function");
var Data_Maybe = require("Data.Maybe");
var toMaybe = function (x) {
    return $foreign.toMaybeImpl(Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};
module.exports = {
    toMaybe: toMaybe, 
    nullAsEmpty: $foreign.nullAsEmpty
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Raw.Util\\foreign.js","Data.Function":"c:\\Development\\Web\\jundo\\output\\Data.Function\\index.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Raw\\foreign.js":[function(require,module,exports){
"use strict";

// module Graphics.WebGL.Raw

exports.activeTextureImpl = function (webgl, texture) {
  return function () {
    return webgl.activeTexture(texture);
  };
}

exports.attachShaderImpl = function (webgl, program, shader) {
  return function () {
    return webgl.attachShader(program, shader);
  };
}

exports.bindAttribLocationImpl = function (webgl, program, index, name) {
  return function () {
    return webgl.bindAttribLocation(program, index, name);
  };
}

exports.bindBufferImpl = function (webgl, target, buffer) {
  return function () {
    return webgl.bindBuffer(target, buffer);
  };
}

exports.bindFramebufferImpl = function (webgl, target, framebuffer) {
  return function () {
    return webgl.bindFramebuffer(target, framebuffer);
  };
}

exports.bindRenderbufferImpl = function (webgl, target, renderbuffer) {
  return function () {
    return webgl.bindRenderbuffer(target, renderbuffer);
  };
}

exports.bindTextureImpl = function (webgl, target, texture) {
  return function () {
    return webgl.bindTexture(target, texture);
  };
}

exports.blendColorImpl = function (webgl, red, green, blue, alpha) {
  return function () {
    return webgl.blendColor(red, green, blue, alpha);
  };
}

exports.blendEquationImpl = function (webgl, mode) {
  return function () {
    return webgl.blendEquation(mode);
  };
}

exports.blendEquationSeparateImpl = function (webgl, modeRGB, modeAlpha) {
  return function () {
    return webgl.blendEquationSeparate(modeRGB, modeAlpha);
  };
}

exports.blendFuncImpl = function (webgl, sfactor, dfactor) {
  return function () {
    return webgl.blendFunc(sfactor, dfactor);
  };
}

exports.blendFuncSeparateImpl = function (webgl, srcRGB, dstRGB, srcAlpha, dstAlpha) {
  return function () {
    return webgl.blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);
  };
}

exports.bufferDataImpl = function (webgl, target, data, usage) {
  return function () {
    return webgl.bufferData(target, data, usage);
  };
}

exports.bufferData_Impl = function (webgl, target, size, usage) {
  return function () {
    return webgl.bufferData(target, size, usage);
  };
}

exports.bufferSubDataImpl = function (webgl, target, offset, data) {
  return function () {
    return webgl.bufferSubData(target, offset, data);
  };
}

exports.checkFramebufferStatusImpl = function (webgl, target) {
  return function () {
    return webgl.checkFramebufferStatus(target);
  };
}

exports.clearImpl = function (webgl, mask) {
  return function () {
    return webgl.clear(mask);
  };
}

exports.clearColorImpl = function (webgl, red, green, blue, alpha) {
  return function () {
    return webgl.clearColor(red, green, blue, alpha);
  };
}

exports.clearDepthImpl = function (webgl, depth) {
  return function () {
    return webgl.clearDepth(depth);
  };
}

exports.clearStencilImpl = function (webgl, s) {
  return function () {
    return webgl.clearStencil(s);
  };
}

exports.colorMaskImpl = function (webgl, red, green, blue, alpha) {
  return function () {
    return webgl.colorMask(red, green, blue, alpha);
  };
}

exports.compileShaderImpl = function (webgl, shader) {
  return function () {
    return webgl.compileShader(shader);
  };
}

exports.compressedTexImage2DImpl = function (webgl, target, level, internalformat, width, height, border, data) {
  return function () {
    return webgl.compressedTexImage2D(target, level, internalformat, width, height, border, data);
  };
}

exports.compressedTexSubImage2DImpl = function (webgl, target, level, xoffset, yoffset, width, height, format, data) {
  return function () {
    return webgl.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, data);
  };
}

exports.copyTexImage2DImpl = function (webgl, target, level, internalformat, x, y, width, height, border) {
  return function () {
    return webgl.copyTexImage2D(target, level, internalformat, x, y, width, height, border);
  };
}

exports.copyTexSubImage2DImpl = function (webgl, target, level, xoffset, yoffset, x, y, width, height) {
  return function () {
    return webgl.copyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);
  };
}

exports.createBufferImpl = function (webgl) {
  return function () {
    return webgl.createBuffer();
  };
}

exports.createFramebufferImpl = function (webgl) {
  return function () {
    return webgl.createFramebuffer();
  };
}

exports.createProgramImpl = function (webgl) {
  return function () {
    return webgl.createProgram();
  };
}

exports.createRenderbufferImpl = function (webgl) {
  return function () {
    return webgl.createRenderbuffer();
  };
}

exports.createShaderImpl = function (webgl, type) {
  return function () {
    return webgl.createShader(type);
  };
}

exports.createTextureImpl = function (webgl) {
  return function () {
    return webgl.createTexture();
  };
}

exports.cullFaceImpl = function (webgl, mode) {
  return function () {
    return webgl.cullFace(mode);
  };
}

exports.deleteBufferImpl = function (webgl, buffer) {
  return function () {
    return webgl.deleteBuffer(buffer);
  };
}

exports.deleteFramebufferImpl = function (webgl, framebuffer) {
  return function () {
    return webgl.deleteFramebuffer(framebuffer);
  };
}

exports.deleteProgramImpl = function (webgl, program) {
  return function () {
    return webgl.deleteProgram(program);
  };
}

exports.deleteRenderbufferImpl = function (webgl, renderbuffer) {
  return function () {
    return webgl.deleteRenderbuffer(renderbuffer);
  };
}

exports.deleteShaderImpl = function (webgl, shader) {
  return function () {
    return webgl.deleteShader(shader);
  };
}

exports.deleteTextureImpl = function (webgl, texture) {
  return function () {
    return webgl.deleteTexture(texture);
  };
}

exports.depthFuncImpl = function (webgl, func) {
  return function () {
    return webgl.depthFunc(func);
  };
}

exports.depthMaskImpl = function (webgl, flag) {
  return function () {
    return webgl.depthMask(flag);
  };
}

exports.depthRangeImpl = function (webgl, zNear, zFar) {
  return function () {
    return webgl.depthRange(zNear, zFar);
  };
}

exports.detachShaderImpl = function (webgl, program, shader) {
  return function () {
    return webgl.detachShader(program, shader);
  };
}

exports.disableImpl = function (webgl, cap) {
  return function () {
    return webgl.disable(cap);
  };
}

exports.disableVertexAttribArrayImpl = function (webgl, index) {
  return function () {
    return webgl.disableVertexAttribArray(index);
  };
}

exports.drawArraysImpl = function (webgl, mode, first, count) {
  return function () {
    return webgl.drawArrays(mode, first, count);
  };
}

exports.drawElementsImpl = function (webgl, mode, count, type, offset) {
  return function () {
    return webgl.drawElements(mode, count, type, offset);
  };
}

exports.enableImpl = function (webgl, cap) {
  return function () {
    return webgl.enable(cap);
  };
}

exports.enableVertexAttribArrayImpl = function (webgl, index) {
  return function () {
    return webgl.enableVertexAttribArray(index);
  };
}

exports.finishImpl = function (webgl) {
  return function () {
    return webgl.finish();
  };
}

exports.flushImpl = function (webgl) {
  return function () {
    return webgl.flush();
  };
}

exports.framebufferRenderbufferImpl = function (webgl, target, attachment, renderbuffertarget, renderbuffer) {
  return function () {
    return webgl.framebufferRenderbuffer(target, attachment, renderbuffertarget, renderbuffer);
  };
}

exports.framebufferTexture2DImpl = function (webgl, target, attachment, textarget, texture, level) {
  return function () {
    return webgl.framebufferTexture2D(target, attachment, textarget, texture, level);
  };
}

exports.frontFaceImpl = function (webgl, mode) {
  return function () {
    return webgl.frontFace(mode);
  };
}

exports.generateMipmapImpl = function (webgl, target) {
  return function () {
    return webgl.generateMipmap(target);
  };
}

exports.getActiveAttribImpl = function (webgl, program, index) {
  return function () {
    return webgl.getActiveAttrib(program, index);
  };
}

exports.getActiveUniformImpl = function (webgl, program, index) {
  return function () {
    return webgl.getActiveUniform(program, index);
  };
}

exports.getAttachedShadersImpl = function (webgl, program) {
  return function () {
    return webgl.getAttachedShaders(program);
  };
}

exports.getAttribLocationImpl = function (webgl, program, name) {
  return function () {
    return webgl.getAttribLocation(program, name);
  };
}

exports.getBufferParameterImpl = function (webgl, target, pname) {
  return function () {
    return webgl.getBufferParameter(target, pname);
  };
}

exports.getContextAttributesImpl = function (webgl) {
  return function () {
    return webgl.getContextAttributes();
  };
}

exports.getErrorImpl = function (webgl) {
  return function () {
    return webgl.getError();
  };
}

exports.getExtensionImpl = function (webgl, name) {
  return function () {
    return webgl.getExtension(name);
  };
}

exports.getFramebufferAttachmentParameterImpl = function (webgl, target, attachment, pname) {
  return function () {
    return webgl.getFramebufferAttachmentParameter(target, attachment, pname);
  };
}

exports.getParameterImpl = function (webgl, pname) {
  return function () {
    return webgl.getParameter(pname);
  };
}

exports.getProgramInfoLogImpl = function (webgl, program) {
  return function () {
    return webgl.getProgramInfoLog(program);
  };
}

exports.getProgramParameterImpl = function (webgl, program, pname) {
  return function () {
    return webgl.getProgramParameter(program, pname);
  };
}

exports.getRenderbufferParameterImpl = function (webgl, target, pname) {
  return function () {
    return webgl.getRenderbufferParameter(target, pname);
  };
}

exports.getShaderInfoLogImpl = function (webgl, shader) {
  return function () {
    return webgl.getShaderInfoLog(shader);
  };
}

exports.getShaderParameterImpl = function (webgl, shader, pname) {
  return function () {
    return webgl.getShaderParameter(shader, pname);
  };
}

exports.getShaderPrecisionFormatImpl = function (webgl, shadertype, precisiontype) {
  return function () {
    return webgl.getShaderPrecisionFormat(shadertype, precisiontype);
  };
}

exports.getShaderSourceImpl = function (webgl, shader) {
  return function () {
    return webgl.getShaderSource(shader);
  };
}

exports.getSupportedExtensionsImpl = function (webgl) {
  return function () {
    return webgl.getSupportedExtensions();
  };
}

exports.getTexParameterImpl = function (webgl, target, pname) {
  return function () {
    return webgl.getTexParameter(target, pname);
  };
}

exports.getUniformImpl = function (webgl, program, location) {
  return function () {
    return webgl.getUniform(program, location);
  };
}

exports.getUniformLocationImpl = function (webgl, program, name) {
  return function () {
    return webgl.getUniformLocation(program, name);
  };
}

exports.getVertexAttribImpl = function (webgl, index, pname) {
  return function () {
    return webgl.getVertexAttrib(index, pname);
  };
}

exports.getVertexAttribOffsetImpl = function (webgl, index, pname) {
  return function () {
    return webgl.getVertexAttribOffset(index, pname);
  };
}

exports.hintImpl = function (webgl, target, mode) {
  return function () {
    return webgl.hint(target, mode);
  };
}

exports.isBufferImpl = function (webgl, buffer) {
  return function () {
    return webgl.isBuffer(buffer);
  };
}

exports.isContextLostImpl = function (webgl) {
  return function () {
    return webgl.isContextLost();
  };
}

exports.isEnabledImpl = function (webgl, cap) {
  return function () {
    return webgl.isEnabled(cap);
  };
}

exports.isFramebufferImpl = function (webgl, framebuffer) {
  return function () {
    return webgl.isFramebuffer(framebuffer);
  };
}

exports.isProgramImpl = function (webgl, program) {
  return function () {
    return webgl.isProgram(program);
  };
}

exports.isRenderbufferImpl = function (webgl, renderbuffer) {
  return function () {
    return webgl.isRenderbuffer(renderbuffer);
  };
}

exports.isShaderImpl = function (webgl, shader) {
  return function () {
    return webgl.isShader(shader);
  };
}

exports.isTextureImpl = function (webgl, texture) {
  return function () {
    return webgl.isTexture(texture);
  };
}

exports.lineWidthImpl = function (webgl, width) {
  return function () {
    return webgl.lineWidth(width);
  };
}

exports.linkProgramImpl = function (webgl, program) {
  return function () {
    return webgl.linkProgram(program);
  };
}

exports.pixelStoreiImpl = function (webgl, pname, param) {
  return function () {
    return webgl.pixelStorei(pname, param);
  };
}

exports.polygonOffsetImpl = function (webgl, factor, units) {
  return function () {
    return webgl.polygonOffset(factor, units);
  };
}

exports.readPixelsImpl = function (webgl, x, y, width, height, format, type, pixels) {
  return function () {
    return webgl.readPixels(x, y, width, height, format, type, pixels);
  };
}

exports.renderbufferStorageImpl = function (webgl, target, internalformat, width, height) {
  return function () {
    return webgl.renderbufferStorage(target, internalformat, width, height);
  };
}

exports.sampleCoverageImpl = function (webgl, value, invert) {
  return function () {
    return webgl.sampleCoverage(value, invert);
  };
}

exports.scissorImpl = function (webgl, x, y, width, height) {
  return function () {
    return webgl.scissor(x, y, width, height);
  };
}

exports.shaderSourceImpl = function (webgl, shader, source) {
  return function () {
    return webgl.shaderSource(shader, source);
  };
}

exports.stencilFuncImpl = function (webgl, func, ref, mask) {
  return function () {
    return webgl.stencilFunc(func, ref, mask);
  };
}

exports.stencilFuncSeparateImpl = function (webgl, face, func, ref, mask) {
  return function () {
    return webgl.stencilFuncSeparate(face, func, ref, mask);
  };
}

exports.stencilMaskImpl = function (webgl, mask) {
  return function () {
    return webgl.stencilMask(mask);
  };
}

exports.stencilMaskSeparateImpl = function (webgl, face, mask) {
  return function () {
    return webgl.stencilMaskSeparate(face, mask);
  };
}

exports.stencilOpImpl = function (webgl, fail, zfail, zpass) {
  return function () {
    return webgl.stencilOp(fail, zfail, zpass);
  };
}

exports.stencilOpSeparateImpl = function (webgl, face, fail, zfail, zpass) {
  return function () {
    return webgl.stencilOpSeparate(face, fail, zfail, zpass);
  };
}

exports.texImage2DImpl = function (webgl, target, level, internalformat, format, type, source) {
  return function () {
    return webgl.texImage2D(target, level, internalformat, format, type, source);
  };
}

exports.texImage2D_Impl = function (webgl, target, level, internalformat, width, height, border, format, type, pixels) {
  return function () {
    return webgl.texImage2D(target, level, internalformat, width, height, border, format, type, pixels);
  };
}

exports.texParameterfImpl = function (webgl, target, pname, param) {
  return function () {
    return webgl.texParameterf(target, pname, param);
  };
}

exports.texParameteriImpl = function (webgl, target, pname, param) {
  return function () {
    return webgl.texParameteri(target, pname, param);
  };
}

exports.texSubImage2DImpl = function (webgl, target, level, xoffset, yoffset, format, type, source) {
  return function () {
    return webgl.texSubImage2D(target, level, xoffset, yoffset, format, type, source);
  };
}

exports.texSubImage2D_Impl = function (webgl, target, level, xoffset, yoffset, width, height, format, type, pixels) {
  return function () {
    return webgl.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels);
  };
}

exports.uniform1fImpl = function (webgl, location, x) {
  return function () {
    return webgl.uniform1f(location, x);
  };
}

exports.uniform1fvImpl = function (webgl, location, v) {
  return function () {
    return webgl.uniform1fv(location, v);
  };
}

exports.uniform1fv_Impl = function (webgl, location, v) {
  return function () {
    return webgl.uniform1fv(location, v);
  };
}

exports.uniform1iImpl = function (webgl, location, x) {
  return function () {
    return webgl.uniform1i(location, x);
  };
}

exports.uniform1ivImpl = function (webgl, location, v) {
  return function () {
    return webgl.uniform1iv(location, v);
  };
}

exports.uniform1iv_Impl = function (webgl, location, v) {
  return function () {
    return webgl.uniform1iv(location, v);
  };
}

exports.uniform2fImpl = function (webgl, location, x, y) {
  return function () {
    return webgl.uniform2f(location, x, y);
  };
}

exports.uniform2fvImpl = function (webgl, location, v) {
  return function () {
    return webgl.uniform2fv(location, v);
  };
}

exports.uniform2fv_Impl = function (webgl, location, v) {
  return function () {
    return webgl.uniform2fv(location, v);
  };
}

exports.uniform2iImpl = function (webgl, location, x, y) {
  return function () {
    return webgl.uniform2i(location, x, y);
  };
}

exports.uniform2ivImpl = function (webgl, location, v) {
  return function () {
    return webgl.uniform2iv(location, v);
  };
}

exports.uniform2iv_Impl = function (webgl, location, v) {
  return function () {
    return webgl.uniform2iv(location, v);
  };
}

exports.uniform3fImpl = function (webgl, location, x, y, z) {
  return function () {
    return webgl.uniform3f(location, x, y, z);
  };
}

exports.uniform3fvImpl = function (webgl, location, v) {
  return function () {
    return webgl.uniform3fv(location, v);
  };
}

exports.uniform3fv_Impl = function (webgl, location, v) {
  return function () {
    return webgl.uniform3fv(location, v);
  };
}

exports.uniform3iImpl = function (webgl, location, x, y, z) {
  return function () {
    return webgl.uniform3i(location, x, y, z);
  };
}

exports.uniform3ivImpl = function (webgl, location, v) {
  return function () {
    return webgl.uniform3iv(location, v);
  };
}

exports.uniform3iv_Impl = function (webgl, location, v) {
  return function () {
    return webgl.uniform3iv(location, v);
  };
}

exports.uniform4fImpl = function (webgl, location, x, y, z, w) {
  return function () {
    return webgl.uniform4f(location, x, y, z, w);
  };
}

exports.uniform4fvImpl = function (webgl, location, v) {
  return function () {
    return webgl.uniform4fv(location, v);
  };
}

exports.uniform4fv_Impl = function (webgl, location, v) {
  return function () {
    return webgl.uniform4fv(location, v);
  };
}

exports.uniform4iImpl = function (webgl, location, x, y, z, w) {
  return function () {
    return webgl.uniform4i(location, x, y, z, w);
  };
}

exports.uniform4ivImpl = function (webgl, location, v) {
  return function () {
    return webgl.uniform4iv(location, v);
  };
}

exports.uniform4iv_Impl = function (webgl, location, v) {
  return function () {
    return webgl.uniform4iv(location, v);
  };
}

exports.uniformMatrix2fvImpl = function (webgl, location, transpose, value) {
  return function () {
    return webgl.uniformMatrix2fv(location, transpose, value);
  };
}

exports.uniformMatrix2fv_Impl = function (webgl, location, transpose, value) {
  return function () {
    return webgl.uniformMatrix2fv(location, transpose, value);
  };
}

exports.uniformMatrix3fvImpl = function (webgl, location, transpose, value) {
  return function () {
    return webgl.uniformMatrix3fv(location, transpose, value);
  };
}

exports.uniformMatrix3fv_Impl = function (webgl, location, transpose, value) {
  return function () {
    return webgl.uniformMatrix3fv(location, transpose, value);
  };
}

exports.uniformMatrix4fvImpl = function (webgl, location, transpose, value) {
  return function () {
    return webgl.uniformMatrix4fv(location, transpose, value);
  };
}

exports.uniformMatrix4fv_Impl = function (webgl, location, transpose, value) {
  return function () {
    return webgl.uniformMatrix4fv(location, transpose, value);
  };
}

exports.useProgramImpl = function (webgl, program) {
  return function () {
    return webgl.useProgram(program);
  };
}

exports.validateProgramImpl = function (webgl, program) {
  return function () {
    return webgl.validateProgram(program);
  };
}

exports.vertexAttrib1fImpl = function (webgl, indx, x) {
  return function () {
    return webgl.vertexAttrib1f(indx, x);
  };
}

exports.vertexAttrib1fvImpl = function (webgl, indx, values) {
  return function () {
    return webgl.vertexAttrib1fv(indx, values);
  };
}

exports.vertexAttrib1fv_Impl = function (webgl, indx, values) {
  return function () {
    return webgl.vertexAttrib1fv(indx, values);
  };
}

exports.vertexAttrib2fImpl = function (webgl, indx, x, y) {
  return function () {
    return webgl.vertexAttrib2f(indx, x, y);
  };
}

exports.vertexAttrib2fvImpl = function (webgl, indx, values) {
  return function () {
    return webgl.vertexAttrib2fv(indx, values);
  };
}

exports.vertexAttrib2fv_Impl = function (webgl, indx, values) {
  return function () {
    return webgl.vertexAttrib2fv(indx, values);
  };
}

exports.vertexAttrib3fImpl = function (webgl, indx, x, y, z) {
  return function () {
    return webgl.vertexAttrib3f(indx, x, y, z);
  };
}

exports.vertexAttrib3fvImpl = function (webgl, indx, values) {
  return function () {
    return webgl.vertexAttrib3fv(indx, values);
  };
}

exports.vertexAttrib3fv_Impl = function (webgl, indx, values) {
  return function () {
    return webgl.vertexAttrib3fv(indx, values);
  };
}

exports.vertexAttrib4fImpl = function (webgl, indx, x, y, z, w) {
  return function () {
    return webgl.vertexAttrib4f(indx, x, y, z, w);
  };
}

exports.vertexAttrib4fvImpl = function (webgl, indx, values) {
  return function () {
    return webgl.vertexAttrib4fv(indx, values);
  };
}

exports.vertexAttrib4fv_Impl = function (webgl, indx, values) {
  return function () {
    return webgl.vertexAttrib4fv(indx, values);
  };
}

exports.vertexAttribPointerImpl = function (webgl, indx, size, type, normalized, stride, offset) {
  return function () {
    return webgl.vertexAttribPointer(indx, size, type, normalized, stride, offset);
  };
}

exports.viewportImpl = function (webgl, x, y, width, height) {
  return function () {
    return webgl.viewport(x, y, width, height);
  };
}


},{}],"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Raw\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_ArrayBuffer_Types = require("Data.ArrayBuffer.Types");
var Data_Function = require("Data.Function");
var Data_Maybe = require("Data.Maybe");
var Graphics_Canvas = require("Graphics.Canvas");
var Graphics_WebGL_Raw_Types = require("Graphics.WebGL.Raw.Types");
var Graphics_WebGL_Raw_Util = require("Graphics.WebGL.Raw.Util");
var Prelude = require("Prelude");
var viewport = function (webgl) {
    return function (x) {
        return function (y) {
            return function (width) {
                return function (height) {
                    return $foreign.viewportImpl(webgl, x, y, width, height);
                };
            };
        };
    };
};
var vertexAttribPointer = function (webgl) {
    return function (indx) {
        return function (size) {
            return function (type$prime) {
                return function (normalized) {
                    return function (stride) {
                        return function (offset) {
                            return $foreign.vertexAttribPointerImpl(webgl, indx, size, type$prime, normalized, stride, offset);
                        };
                    };
                };
            };
        };
    };
};
var vertexAttrib4fv_ = function (webgl) {
    return function (indx) {
        return function (values) {
            return $foreign.vertexAttrib4fv_Impl(webgl, indx, values);
        };
    };
};
var vertexAttrib4fv = function (webgl) {
    return function (indx) {
        return function (values) {
            return $foreign.vertexAttrib4fvImpl(webgl, indx, values);
        };
    };
};
var vertexAttrib4f = function (webgl) {
    return function (indx) {
        return function (x) {
            return function (y) {
                return function (z) {
                    return function (w) {
                        return $foreign.vertexAttrib4fImpl(webgl, indx, x, y, z, w);
                    };
                };
            };
        };
    };
};
var vertexAttrib3fv_ = function (webgl) {
    return function (indx) {
        return function (values) {
            return $foreign.vertexAttrib3fv_Impl(webgl, indx, values);
        };
    };
};
var vertexAttrib3fv = function (webgl) {
    return function (indx) {
        return function (values) {
            return $foreign.vertexAttrib3fvImpl(webgl, indx, values);
        };
    };
};
var vertexAttrib3f = function (webgl) {
    return function (indx) {
        return function (x) {
            return function (y) {
                return function (z) {
                    return $foreign.vertexAttrib3fImpl(webgl, indx, x, y, z);
                };
            };
        };
    };
};
var vertexAttrib2fv_ = function (webgl) {
    return function (indx) {
        return function (values) {
            return $foreign.vertexAttrib2fv_Impl(webgl, indx, values);
        };
    };
};
var vertexAttrib2fv = function (webgl) {
    return function (indx) {
        return function (values) {
            return $foreign.vertexAttrib2fvImpl(webgl, indx, values);
        };
    };
};
var vertexAttrib2f = function (webgl) {
    return function (indx) {
        return function (x) {
            return function (y) {
                return $foreign.vertexAttrib2fImpl(webgl, indx, x, y);
            };
        };
    };
};
var vertexAttrib1fv_ = function (webgl) {
    return function (indx) {
        return function (values) {
            return $foreign.vertexAttrib1fv_Impl(webgl, indx, values);
        };
    };
};
var vertexAttrib1fv = function (webgl) {
    return function (indx) {
        return function (values) {
            return $foreign.vertexAttrib1fvImpl(webgl, indx, values);
        };
    };
};
var vertexAttrib1f = function (webgl) {
    return function (indx) {
        return function (x) {
            return $foreign.vertexAttrib1fImpl(webgl, indx, x);
        };
    };
};
var validateProgram = function (webgl) {
    return function (program) {
        return $foreign.validateProgramImpl(webgl, program);
    };
};
var useProgram = function (webgl) {
    return function (program) {
        return $foreign.useProgramImpl(webgl, program);
    };
};
var uniformMatrix4fv_ = function (webgl) {
    return function (location) {
        return function (transpose) {
            return function (value) {
                return $foreign.uniformMatrix4fv_Impl(webgl, location, transpose, value);
            };
        };
    };
};
var uniformMatrix4fv = function (webgl) {
    return function (location) {
        return function (transpose) {
            return function (value) {
                return $foreign.uniformMatrix4fvImpl(webgl, location, transpose, value);
            };
        };
    };
};
var uniformMatrix3fv_ = function (webgl) {
    return function (location) {
        return function (transpose) {
            return function (value) {
                return $foreign.uniformMatrix3fv_Impl(webgl, location, transpose, value);
            };
        };
    };
};
var uniformMatrix3fv = function (webgl) {
    return function (location) {
        return function (transpose) {
            return function (value) {
                return $foreign.uniformMatrix3fvImpl(webgl, location, transpose, value);
            };
        };
    };
};
var uniformMatrix2fv_ = function (webgl) {
    return function (location) {
        return function (transpose) {
            return function (value) {
                return $foreign.uniformMatrix2fv_Impl(webgl, location, transpose, value);
            };
        };
    };
};
var uniformMatrix2fv = function (webgl) {
    return function (location) {
        return function (transpose) {
            return function (value) {
                return $foreign.uniformMatrix2fvImpl(webgl, location, transpose, value);
            };
        };
    };
};
var uniform4iv_ = function (webgl) {
    return function (location) {
        return function (v) {
            return $foreign.uniform4iv_Impl(webgl, location, v);
        };
    };
};
var uniform4iv = function (webgl) {
    return function (location) {
        return function (v) {
            return $foreign.uniform4ivImpl(webgl, location, v);
        };
    };
};
var uniform4i = function (webgl) {
    return function (location) {
        return function (x) {
            return function (y) {
                return function (z) {
                    return function (w) {
                        return $foreign.uniform4iImpl(webgl, location, x, y, z, w);
                    };
                };
            };
        };
    };
};
var uniform4fv_ = function (webgl) {
    return function (location) {
        return function (v) {
            return $foreign.uniform4fv_Impl(webgl, location, v);
        };
    };
};
var uniform4fv = function (webgl) {
    return function (location) {
        return function (v) {
            return $foreign.uniform4fvImpl(webgl, location, v);
        };
    };
};
var uniform4f = function (webgl) {
    return function (location) {
        return function (x) {
            return function (y) {
                return function (z) {
                    return function (w) {
                        return $foreign.uniform4fImpl(webgl, location, x, y, z, w);
                    };
                };
            };
        };
    };
};
var uniform3iv_ = function (webgl) {
    return function (location) {
        return function (v) {
            return $foreign.uniform3iv_Impl(webgl, location, v);
        };
    };
};
var uniform3iv = function (webgl) {
    return function (location) {
        return function (v) {
            return $foreign.uniform3ivImpl(webgl, location, v);
        };
    };
};
var uniform3i = function (webgl) {
    return function (location) {
        return function (x) {
            return function (y) {
                return function (z) {
                    return $foreign.uniform3iImpl(webgl, location, x, y, z);
                };
            };
        };
    };
};
var uniform3fv_ = function (webgl) {
    return function (location) {
        return function (v) {
            return $foreign.uniform3fv_Impl(webgl, location, v);
        };
    };
};
var uniform3fv = function (webgl) {
    return function (location) {
        return function (v) {
            return $foreign.uniform3fvImpl(webgl, location, v);
        };
    };
};
var uniform3f = function (webgl) {
    return function (location) {
        return function (x) {
            return function (y) {
                return function (z) {
                    return $foreign.uniform3fImpl(webgl, location, x, y, z);
                };
            };
        };
    };
};
var uniform2iv_ = function (webgl) {
    return function (location) {
        return function (v) {
            return $foreign.uniform2iv_Impl(webgl, location, v);
        };
    };
};
var uniform2iv = function (webgl) {
    return function (location) {
        return function (v) {
            return $foreign.uniform2ivImpl(webgl, location, v);
        };
    };
};
var uniform2i = function (webgl) {
    return function (location) {
        return function (x) {
            return function (y) {
                return $foreign.uniform2iImpl(webgl, location, x, y);
            };
        };
    };
};
var uniform2fv_ = function (webgl) {
    return function (location) {
        return function (v) {
            return $foreign.uniform2fv_Impl(webgl, location, v);
        };
    };
};
var uniform2fv = function (webgl) {
    return function (location) {
        return function (v) {
            return $foreign.uniform2fvImpl(webgl, location, v);
        };
    };
};
var uniform2f = function (webgl) {
    return function (location) {
        return function (x) {
            return function (y) {
                return $foreign.uniform2fImpl(webgl, location, x, y);
            };
        };
    };
};
var uniform1iv_ = function (webgl) {
    return function (location) {
        return function (v) {
            return $foreign.uniform1iv_Impl(webgl, location, v);
        };
    };
};
var uniform1iv = function (webgl) {
    return function (location) {
        return function (v) {
            return $foreign.uniform1ivImpl(webgl, location, v);
        };
    };
};
var uniform1i = function (webgl) {
    return function (location) {
        return function (x) {
            return $foreign.uniform1iImpl(webgl, location, x);
        };
    };
};
var uniform1fv_ = function (webgl) {
    return function (location) {
        return function (v) {
            return $foreign.uniform1fv_Impl(webgl, location, v);
        };
    };
};
var uniform1fv = function (webgl) {
    return function (location) {
        return function (v) {
            return $foreign.uniform1fvImpl(webgl, location, v);
        };
    };
};
var uniform1f = function (webgl) {
    return function (location) {
        return function (x) {
            return $foreign.uniform1fImpl(webgl, location, x);
        };
    };
};
var texSubImage2D_ = function (webgl) {
    return function (target) {
        return function (level) {
            return function (xoffset) {
                return function (yoffset) {
                    return function (width) {
                        return function (height) {
                            return function (format) {
                                return function (type$prime) {
                                    return function (pixels) {
                                        return $foreign.texSubImage2D_Impl(webgl, target, level, xoffset, yoffset, width, height, format, type$prime, pixels);
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var texSubImage2D = function (webgl) {
    return function (target) {
        return function (level) {
            return function (xoffset) {
                return function (yoffset) {
                    return function (format) {
                        return function (type$prime) {
                            return function (source) {
                                return $foreign.texSubImage2DImpl(webgl, target, level, xoffset, yoffset, format, type$prime, source);
                            };
                        };
                    };
                };
            };
        };
    };
};
var texParameteri = function (webgl) {
    return function (target) {
        return function (pname) {
            return function (param) {
                return $foreign.texParameteriImpl(webgl, target, pname, param);
            };
        };
    };
};
var texParameterf = function (webgl) {
    return function (target) {
        return function (pname) {
            return function (param) {
                return $foreign.texParameterfImpl(webgl, target, pname, param);
            };
        };
    };
};
var texImage2D_ = function (webgl) {
    return function (target) {
        return function (level) {
            return function (internalformat) {
                return function (width) {
                    return function (height) {
                        return function (border) {
                            return function (format) {
                                return function (type$prime) {
                                    return function (pixels) {
                                        return $foreign.texImage2D_Impl(webgl, target, level, internalformat, width, height, border, format, type$prime, pixels);
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var texImage2D = function (webgl) {
    return function (target) {
        return function (level) {
            return function (internalformat) {
                return function (format) {
                    return function (type$prime) {
                        return function (source) {
                            return $foreign.texImage2DImpl(webgl, target, level, internalformat, format, type$prime, source);
                        };
                    };
                };
            };
        };
    };
};
var stencilOpSeparate = function (webgl) {
    return function (face) {
        return function (fail) {
            return function (zfail) {
                return function (zpass) {
                    return $foreign.stencilOpSeparateImpl(webgl, face, fail, zfail, zpass);
                };
            };
        };
    };
};
var stencilOp = function (webgl) {
    return function (fail) {
        return function (zfail) {
            return function (zpass) {
                return $foreign.stencilOpImpl(webgl, fail, zfail, zpass);
            };
        };
    };
};
var stencilMaskSeparate = function (webgl) {
    return function (face) {
        return function (mask) {
            return $foreign.stencilMaskSeparateImpl(webgl, face, mask);
        };
    };
};
var stencilMask = function (webgl) {
    return function (mask) {
        return $foreign.stencilMaskImpl(webgl, mask);
    };
};
var stencilFuncSeparate = function (webgl) {
    return function (face) {
        return function (func) {
            return function (ref) {
                return function (mask) {
                    return $foreign.stencilFuncSeparateImpl(webgl, face, func, ref, mask);
                };
            };
        };
    };
};
var stencilFunc = function (webgl) {
    return function (func) {
        return function (ref) {
            return function (mask) {
                return $foreign.stencilFuncImpl(webgl, func, ref, mask);
            };
        };
    };
};
var shaderSource = function (webgl) {
    return function (shader) {
        return function (source) {
            return $foreign.shaderSourceImpl(webgl, shader, source);
        };
    };
};
var scissor = function (webgl) {
    return function (x) {
        return function (y) {
            return function (width) {
                return function (height) {
                    return $foreign.scissorImpl(webgl, x, y, width, height);
                };
            };
        };
    };
};
var sampleCoverage = function (webgl) {
    return function (value) {
        return function (invert) {
            return $foreign.sampleCoverageImpl(webgl, value, invert);
        };
    };
};
var renderbufferStorage = function (webgl) {
    return function (target) {
        return function (internalformat) {
            return function (width) {
                return function (height) {
                    return $foreign.renderbufferStorageImpl(webgl, target, internalformat, width, height);
                };
            };
        };
    };
};
var readPixels = function (webgl) {
    return function (x) {
        return function (y) {
            return function (width) {
                return function (height) {
                    return function (format) {
                        return function (type$prime) {
                            return function (pixels) {
                                return $foreign.readPixelsImpl(webgl, x, y, width, height, format, type$prime, pixels);
                            };
                        };
                    };
                };
            };
        };
    };
};
var polygonOffset = function (webgl) {
    return function (factor) {
        return function (units) {
            return $foreign.polygonOffsetImpl(webgl, factor, units);
        };
    };
};
var pixelStorei = function (webgl) {
    return function (pname) {
        return function (param) {
            return $foreign.pixelStoreiImpl(webgl, pname, param);
        };
    };
};
var linkProgram = function (webgl) {
    return function (program) {
        return $foreign.linkProgramImpl(webgl, program);
    };
};
var lineWidth = function (webgl) {
    return function (width) {
        return $foreign.lineWidthImpl(webgl, width);
    };
};
var isTexture = function (webgl) {
    return function (texture) {
        return $foreign.isTextureImpl(webgl, texture);
    };
};
var isShader = function (webgl) {
    return function (shader) {
        return $foreign.isShaderImpl(webgl, shader);
    };
};
var isRenderbuffer = function (webgl) {
    return function (renderbuffer) {
        return $foreign.isRenderbufferImpl(webgl, renderbuffer);
    };
};
var isProgram = function (webgl) {
    return function (program) {
        return $foreign.isProgramImpl(webgl, program);
    };
};
var isFramebuffer = function (webgl) {
    return function (framebuffer) {
        return $foreign.isFramebufferImpl(webgl, framebuffer);
    };
};
var isEnabled = function (webgl) {
    return function (cap) {
        return $foreign.isEnabledImpl(webgl, cap);
    };
};
var isContextLost = function (webgl) {
    return $foreign.isContextLostImpl(webgl);
};
var isBuffer = function (webgl) {
    return function (buffer) {
        return $foreign.isBufferImpl(webgl, buffer);
    };
};
var hint = function (webgl) {
    return function (target) {
        return function (mode) {
            return $foreign.hintImpl(webgl, target, mode);
        };
    };
};
var getVertexAttribOffset = function (webgl) {
    return function (index) {
        return function (pname) {
            return $foreign.getVertexAttribOffsetImpl(webgl, index, pname);
        };
    };
};
var getVertexAttrib = function (webgl) {
    return function (index) {
        return function (pname) {
            return Prelude[">>="](Control_Monad_Eff.bindEff)($foreign.getVertexAttribImpl(webgl, index, pname))(Prelude[">>>"](Prelude.semigroupoidFn)(Graphics_WebGL_Raw_Util.toMaybe)(Prelude["return"](Control_Monad_Eff.applicativeEff)));
        };
    };
};
var getUniformLocation = function (webgl) {
    return function (program) {
        return function (name) {
            return Prelude[">>="](Control_Monad_Eff.bindEff)($foreign.getUniformLocationImpl(webgl, program, name))(Prelude[">>>"](Prelude.semigroupoidFn)(Graphics_WebGL_Raw_Util.toMaybe)(Prelude["return"](Control_Monad_Eff.applicativeEff)));
        };
    };
};
var getUniform = function (webgl) {
    return function (program) {
        return function (location) {
            return Prelude[">>="](Control_Monad_Eff.bindEff)($foreign.getUniformImpl(webgl, program, location))(Prelude[">>>"](Prelude.semigroupoidFn)(Graphics_WebGL_Raw_Util.toMaybe)(Prelude["return"](Control_Monad_Eff.applicativeEff)));
        };
    };
};
var getTexParameter = function (webgl) {
    return function (target) {
        return function (pname) {
            return Prelude[">>="](Control_Monad_Eff.bindEff)($foreign.getTexParameterImpl(webgl, target, pname))(Prelude[">>>"](Prelude.semigroupoidFn)(Graphics_WebGL_Raw_Util.toMaybe)(Prelude["return"](Control_Monad_Eff.applicativeEff)));
        };
    };
};
var getSupportedExtensions = function (webgl) {
    return Prelude[">>="](Control_Monad_Eff.bindEff)($foreign.getSupportedExtensionsImpl(webgl))(Prelude[">>>"](Prelude.semigroupoidFn)(Graphics_WebGL_Raw_Util.nullAsEmpty)(Prelude["return"](Control_Monad_Eff.applicativeEff)));
};
var getShaderSource = function (webgl) {
    return function (shader) {
        return Prelude[">>="](Control_Monad_Eff.bindEff)($foreign.getShaderSourceImpl(webgl, shader))(Prelude[">>>"](Prelude.semigroupoidFn)(Graphics_WebGL_Raw_Util.toMaybe)(Prelude["return"](Control_Monad_Eff.applicativeEff)));
    };
};
var getShaderPrecisionFormat = function (webgl) {
    return function (shadertype) {
        return function (precisiontype) {
            return Prelude[">>="](Control_Monad_Eff.bindEff)($foreign.getShaderPrecisionFormatImpl(webgl, shadertype, precisiontype))(Prelude[">>>"](Prelude.semigroupoidFn)(Graphics_WebGL_Raw_Util.toMaybe)(Prelude["return"](Control_Monad_Eff.applicativeEff)));
        };
    };
};
var getShaderParameter = function (webgl) {
    return function (shader) {
        return function (pname) {
            return Prelude[">>="](Control_Monad_Eff.bindEff)($foreign.getShaderParameterImpl(webgl, shader, pname))(Prelude[">>>"](Prelude.semigroupoidFn)(Graphics_WebGL_Raw_Util.toMaybe)(Prelude["return"](Control_Monad_Eff.applicativeEff)));
        };
    };
};
var getShaderInfoLog = function (webgl) {
    return function (shader) {
        return Prelude[">>="](Control_Monad_Eff.bindEff)($foreign.getShaderInfoLogImpl(webgl, shader))(Prelude[">>>"](Prelude.semigroupoidFn)(Graphics_WebGL_Raw_Util.toMaybe)(Prelude["return"](Control_Monad_Eff.applicativeEff)));
    };
};
var getRenderbufferParameter = function (webgl) {
    return function (target) {
        return function (pname) {
            return Prelude[">>="](Control_Monad_Eff.bindEff)($foreign.getRenderbufferParameterImpl(webgl, target, pname))(Prelude[">>>"](Prelude.semigroupoidFn)(Graphics_WebGL_Raw_Util.toMaybe)(Prelude["return"](Control_Monad_Eff.applicativeEff)));
        };
    };
};
var getProgramParameter = function (webgl) {
    return function (program) {
        return function (pname) {
            return Prelude[">>="](Control_Monad_Eff.bindEff)($foreign.getProgramParameterImpl(webgl, program, pname))(Prelude[">>>"](Prelude.semigroupoidFn)(Graphics_WebGL_Raw_Util.toMaybe)(Prelude["return"](Control_Monad_Eff.applicativeEff)));
        };
    };
};
var getProgramInfoLog = function (webgl) {
    return function (program) {
        return Prelude[">>="](Control_Monad_Eff.bindEff)($foreign.getProgramInfoLogImpl(webgl, program))(Prelude[">>>"](Prelude.semigroupoidFn)(Graphics_WebGL_Raw_Util.toMaybe)(Prelude["return"](Control_Monad_Eff.applicativeEff)));
    };
};
var getParameter = function (webgl) {
    return function (pname) {
        return Prelude[">>="](Control_Monad_Eff.bindEff)($foreign.getParameterImpl(webgl, pname))(Prelude[">>>"](Prelude.semigroupoidFn)(Graphics_WebGL_Raw_Util.toMaybe)(Prelude["return"](Control_Monad_Eff.applicativeEff)));
    };
};
var getFramebufferAttachmentParameter = function (webgl) {
    return function (target) {
        return function (attachment) {
            return function (pname) {
                return Prelude[">>="](Control_Monad_Eff.bindEff)($foreign.getFramebufferAttachmentParameterImpl(webgl, target, attachment, pname))(Prelude[">>>"](Prelude.semigroupoidFn)(Graphics_WebGL_Raw_Util.toMaybe)(Prelude["return"](Control_Monad_Eff.applicativeEff)));
            };
        };
    };
};
var getExtension = function (webgl) {
    return function (name) {
        return Prelude[">>="](Control_Monad_Eff.bindEff)($foreign.getExtensionImpl(webgl, name))(Prelude[">>>"](Prelude.semigroupoidFn)(Graphics_WebGL_Raw_Util.toMaybe)(Prelude["return"](Control_Monad_Eff.applicativeEff)));
    };
};
var getError = function (webgl) {
    return $foreign.getErrorImpl(webgl);
};
var getContextAttributes = function (webgl) {
    return Prelude[">>="](Control_Monad_Eff.bindEff)($foreign.getContextAttributesImpl(webgl))(Prelude[">>>"](Prelude.semigroupoidFn)(Graphics_WebGL_Raw_Util.toMaybe)(Prelude["return"](Control_Monad_Eff.applicativeEff)));
};
var getBufferParameter = function (webgl) {
    return function (target) {
        return function (pname) {
            return Prelude[">>="](Control_Monad_Eff.bindEff)($foreign.getBufferParameterImpl(webgl, target, pname))(Prelude[">>>"](Prelude.semigroupoidFn)(Graphics_WebGL_Raw_Util.toMaybe)(Prelude["return"](Control_Monad_Eff.applicativeEff)));
        };
    };
};
var getAttribLocation = function (webgl) {
    return function (program) {
        return function (name) {
            return $foreign.getAttribLocationImpl(webgl, program, name);
        };
    };
};
var getAttachedShaders = function (webgl) {
    return function (program) {
        return Prelude[">>="](Control_Monad_Eff.bindEff)($foreign.getAttachedShadersImpl(webgl, program))(Prelude[">>>"](Prelude.semigroupoidFn)(Graphics_WebGL_Raw_Util.nullAsEmpty)(Prelude["return"](Control_Monad_Eff.applicativeEff)));
    };
};
var getActiveUniform = function (webgl) {
    return function (program) {
        return function (index) {
            return Prelude[">>="](Control_Monad_Eff.bindEff)($foreign.getActiveUniformImpl(webgl, program, index))(Prelude[">>>"](Prelude.semigroupoidFn)(Graphics_WebGL_Raw_Util.toMaybe)(Prelude["return"](Control_Monad_Eff.applicativeEff)));
        };
    };
};
var getActiveAttrib = function (webgl) {
    return function (program) {
        return function (index) {
            return Prelude[">>="](Control_Monad_Eff.bindEff)($foreign.getActiveAttribImpl(webgl, program, index))(Prelude[">>>"](Prelude.semigroupoidFn)(Graphics_WebGL_Raw_Util.toMaybe)(Prelude["return"](Control_Monad_Eff.applicativeEff)));
        };
    };
};
var generateMipmap = function (webgl) {
    return function (target) {
        return $foreign.generateMipmapImpl(webgl, target);
    };
};
var frontFace = function (webgl) {
    return function (mode) {
        return $foreign.frontFaceImpl(webgl, mode);
    };
};
var framebufferTexture2D = function (webgl) {
    return function (target) {
        return function (attachment) {
            return function (textarget) {
                return function (texture) {
                    return function (level) {
                        return $foreign.framebufferTexture2DImpl(webgl, target, attachment, textarget, texture, level);
                    };
                };
            };
        };
    };
};
var framebufferRenderbuffer = function (webgl) {
    return function (target) {
        return function (attachment) {
            return function (renderbuffertarget) {
                return function (renderbuffer) {
                    return $foreign.framebufferRenderbufferImpl(webgl, target, attachment, renderbuffertarget, renderbuffer);
                };
            };
        };
    };
};
var flush = function (webgl) {
    return $foreign.flushImpl(webgl);
};
var finish = function (webgl) {
    return $foreign.finishImpl(webgl);
};
var enableVertexAttribArray = function (webgl) {
    return function (index) {
        return $foreign.enableVertexAttribArrayImpl(webgl, index);
    };
};
var enable = function (webgl) {
    return function (cap) {
        return $foreign.enableImpl(webgl, cap);
    };
};
var drawElements = function (webgl) {
    return function (mode) {
        return function (count) {
            return function (type$prime) {
                return function (offset) {
                    return $foreign.drawElementsImpl(webgl, mode, count, type$prime, offset);
                };
            };
        };
    };
};
var drawArrays = function (webgl) {
    return function (mode) {
        return function (first) {
            return function (count) {
                return $foreign.drawArraysImpl(webgl, mode, first, count);
            };
        };
    };
};
var disableVertexAttribArray = function (webgl) {
    return function (index) {
        return $foreign.disableVertexAttribArrayImpl(webgl, index);
    };
};
var disable = function (webgl) {
    return function (cap) {
        return $foreign.disableImpl(webgl, cap);
    };
};
var detachShader = function (webgl) {
    return function (program) {
        return function (shader) {
            return $foreign.detachShaderImpl(webgl, program, shader);
        };
    };
};
var depthRange = function (webgl) {
    return function (zNear) {
        return function (zFar) {
            return $foreign.depthRangeImpl(webgl, zNear, zFar);
        };
    };
};
var depthMask = function (webgl) {
    return function (flag) {
        return $foreign.depthMaskImpl(webgl, flag);
    };
};
var depthFunc = function (webgl) {
    return function (func) {
        return $foreign.depthFuncImpl(webgl, func);
    };
};
var deleteTexture = function (webgl) {
    return function (texture) {
        return $foreign.deleteTextureImpl(webgl, texture);
    };
};
var deleteShader = function (webgl) {
    return function (shader) {
        return $foreign.deleteShaderImpl(webgl, shader);
    };
};
var deleteRenderbuffer = function (webgl) {
    return function (renderbuffer) {
        return $foreign.deleteRenderbufferImpl(webgl, renderbuffer);
    };
};
var deleteProgram = function (webgl) {
    return function (program) {
        return $foreign.deleteProgramImpl(webgl, program);
    };
};
var deleteFramebuffer = function (webgl) {
    return function (framebuffer) {
        return $foreign.deleteFramebufferImpl(webgl, framebuffer);
    };
};
var deleteBuffer = function (webgl) {
    return function (buffer) {
        return $foreign.deleteBufferImpl(webgl, buffer);
    };
};
var cullFace = function (webgl) {
    return function (mode) {
        return $foreign.cullFaceImpl(webgl, mode);
    };
};
var createTexture = function (webgl) {
    return Prelude[">>="](Control_Monad_Eff.bindEff)($foreign.createTextureImpl(webgl))(Prelude[">>>"](Prelude.semigroupoidFn)(Graphics_WebGL_Raw_Util.toMaybe)(Prelude["return"](Control_Monad_Eff.applicativeEff)));
};
var createShader = function (webgl) {
    return function (type$prime) {
        return Prelude[">>="](Control_Monad_Eff.bindEff)($foreign.createShaderImpl(webgl, type$prime))(Prelude[">>>"](Prelude.semigroupoidFn)(Graphics_WebGL_Raw_Util.toMaybe)(Prelude["return"](Control_Monad_Eff.applicativeEff)));
    };
};
var createRenderbuffer = function (webgl) {
    return Prelude[">>="](Control_Monad_Eff.bindEff)($foreign.createRenderbufferImpl(webgl))(Prelude[">>>"](Prelude.semigroupoidFn)(Graphics_WebGL_Raw_Util.toMaybe)(Prelude["return"](Control_Monad_Eff.applicativeEff)));
};
var createProgram = function (webgl) {
    return Prelude[">>="](Control_Monad_Eff.bindEff)($foreign.createProgramImpl(webgl))(Prelude[">>>"](Prelude.semigroupoidFn)(Graphics_WebGL_Raw_Util.toMaybe)(Prelude["return"](Control_Monad_Eff.applicativeEff)));
};
var createFramebuffer = function (webgl) {
    return Prelude[">>="](Control_Monad_Eff.bindEff)($foreign.createFramebufferImpl(webgl))(Prelude[">>>"](Prelude.semigroupoidFn)(Graphics_WebGL_Raw_Util.toMaybe)(Prelude["return"](Control_Monad_Eff.applicativeEff)));
};
var createBuffer = function (webgl) {
    return Prelude[">>="](Control_Monad_Eff.bindEff)($foreign.createBufferImpl(webgl))(Prelude[">>>"](Prelude.semigroupoidFn)(Graphics_WebGL_Raw_Util.toMaybe)(Prelude["return"](Control_Monad_Eff.applicativeEff)));
};
var copyTexSubImage2D = function (webgl) {
    return function (target) {
        return function (level) {
            return function (xoffset) {
                return function (yoffset) {
                    return function (x) {
                        return function (y) {
                            return function (width) {
                                return function (height) {
                                    return $foreign.copyTexSubImage2DImpl(webgl, target, level, xoffset, yoffset, x, y, width, height);
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var copyTexImage2D = function (webgl) {
    return function (target) {
        return function (level) {
            return function (internalformat) {
                return function (x) {
                    return function (y) {
                        return function (width) {
                            return function (height) {
                                return function (border) {
                                    return $foreign.copyTexImage2DImpl(webgl, target, level, internalformat, x, y, width, height, border);
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var compressedTexSubImage2D = function (webgl) {
    return function (target) {
        return function (level) {
            return function (xoffset) {
                return function (yoffset) {
                    return function (width) {
                        return function (height) {
                            return function (format) {
                                return function (data$prime) {
                                    return $foreign.compressedTexSubImage2DImpl(webgl, target, level, xoffset, yoffset, width, height, format, data$prime);
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var compressedTexImage2D = function (webgl) {
    return function (target) {
        return function (level) {
            return function (internalformat) {
                return function (width) {
                    return function (height) {
                        return function (border) {
                            return function (data$prime) {
                                return $foreign.compressedTexImage2DImpl(webgl, target, level, internalformat, width, height, border, data$prime);
                            };
                        };
                    };
                };
            };
        };
    };
};
var compileShader = function (webgl) {
    return function (shader) {
        return $foreign.compileShaderImpl(webgl, shader);
    };
};
var colorMask = function (webgl) {
    return function (red) {
        return function (green) {
            return function (blue) {
                return function (alpha) {
                    return $foreign.colorMaskImpl(webgl, red, green, blue, alpha);
                };
            };
        };
    };
};
var clearStencil = function (webgl) {
    return function (s) {
        return $foreign.clearStencilImpl(webgl, s);
    };
};
var clearDepth = function (webgl) {
    return function (depth) {
        return $foreign.clearDepthImpl(webgl, depth);
    };
};
var clearColor = function (webgl) {
    return function (red) {
        return function (green) {
            return function (blue) {
                return function (alpha) {
                    return $foreign.clearColorImpl(webgl, red, green, blue, alpha);
                };
            };
        };
    };
};
var clear = function (webgl) {
    return function (mask) {
        return $foreign.clearImpl(webgl, mask);
    };
};
var checkFramebufferStatus = function (webgl) {
    return function (target) {
        return $foreign.checkFramebufferStatusImpl(webgl, target);
    };
};
var bufferSubData = function (webgl) {
    return function (target) {
        return function (offset) {
            return function (data$prime) {
                return $foreign.bufferSubDataImpl(webgl, target, offset, data$prime);
            };
        };
    };
};
var bufferData_ = function (webgl) {
    return function (target) {
        return function (size) {
            return function (usage) {
                return $foreign.bufferData_Impl(webgl, target, size, usage);
            };
        };
    };
};
var bufferData = function (webgl) {
    return function (target) {
        return function (data$prime) {
            return function (usage) {
                return $foreign.bufferDataImpl(webgl, target, data$prime, usage);
            };
        };
    };
};
var blendFuncSeparate = function (webgl) {
    return function (srcRGB) {
        return function (dstRGB) {
            return function (srcAlpha) {
                return function (dstAlpha) {
                    return $foreign.blendFuncSeparateImpl(webgl, srcRGB, dstRGB, srcAlpha, dstAlpha);
                };
            };
        };
    };
};
var blendFunc = function (webgl) {
    return function (sfactor) {
        return function (dfactor) {
            return $foreign.blendFuncImpl(webgl, sfactor, dfactor);
        };
    };
};
var blendEquationSeparate = function (webgl) {
    return function (modeRGB) {
        return function (modeAlpha) {
            return $foreign.blendEquationSeparateImpl(webgl, modeRGB, modeAlpha);
        };
    };
};
var blendEquation = function (webgl) {
    return function (mode) {
        return $foreign.blendEquationImpl(webgl, mode);
    };
};
var blendColor = function (webgl) {
    return function (red) {
        return function (green) {
            return function (blue) {
                return function (alpha) {
                    return $foreign.blendColorImpl(webgl, red, green, blue, alpha);
                };
            };
        };
    };
};
var bindTexture = function (webgl) {
    return function (target) {
        return function (texture) {
            return $foreign.bindTextureImpl(webgl, target, texture);
        };
    };
};
var bindRenderbuffer = function (webgl) {
    return function (target) {
        return function (renderbuffer) {
            return $foreign.bindRenderbufferImpl(webgl, target, renderbuffer);
        };
    };
};
var bindFramebuffer = function (webgl) {
    return function (target) {
        return function (framebuffer) {
            return $foreign.bindFramebufferImpl(webgl, target, framebuffer);
        };
    };
};
var bindBuffer = function (webgl) {
    return function (target) {
        return function (buffer) {
            return $foreign.bindBufferImpl(webgl, target, buffer);
        };
    };
};
var bindAttribLocation = function (webgl) {
    return function (program) {
        return function (index) {
            return function (name) {
                return $foreign.bindAttribLocationImpl(webgl, program, index, name);
            };
        };
    };
};
var attachShader = function (webgl) {
    return function (program) {
        return function (shader) {
            return $foreign.attachShaderImpl(webgl, program, shader);
        };
    };
};
var activeTexture = function (webgl) {
    return function (texture) {
        return $foreign.activeTextureImpl(webgl, texture);
    };
};
module.exports = {
    viewport: viewport, 
    vertexAttribPointer: vertexAttribPointer, 
    vertexAttrib4fv_: vertexAttrib4fv_, 
    vertexAttrib4fv: vertexAttrib4fv, 
    vertexAttrib4f: vertexAttrib4f, 
    vertexAttrib3fv_: vertexAttrib3fv_, 
    vertexAttrib3fv: vertexAttrib3fv, 
    vertexAttrib3f: vertexAttrib3f, 
    vertexAttrib2fv_: vertexAttrib2fv_, 
    vertexAttrib2fv: vertexAttrib2fv, 
    vertexAttrib2f: vertexAttrib2f, 
    vertexAttrib1fv_: vertexAttrib1fv_, 
    vertexAttrib1fv: vertexAttrib1fv, 
    vertexAttrib1f: vertexAttrib1f, 
    validateProgram: validateProgram, 
    useProgram: useProgram, 
    uniformMatrix4fv_: uniformMatrix4fv_, 
    uniformMatrix4fv: uniformMatrix4fv, 
    uniformMatrix3fv_: uniformMatrix3fv_, 
    uniformMatrix3fv: uniformMatrix3fv, 
    uniformMatrix2fv_: uniformMatrix2fv_, 
    uniformMatrix2fv: uniformMatrix2fv, 
    uniform4iv_: uniform4iv_, 
    uniform4iv: uniform4iv, 
    uniform4i: uniform4i, 
    uniform4fv_: uniform4fv_, 
    uniform4fv: uniform4fv, 
    uniform4f: uniform4f, 
    uniform3iv_: uniform3iv_, 
    uniform3iv: uniform3iv, 
    uniform3i: uniform3i, 
    uniform3fv_: uniform3fv_, 
    uniform3fv: uniform3fv, 
    uniform3f: uniform3f, 
    uniform2iv_: uniform2iv_, 
    uniform2iv: uniform2iv, 
    uniform2i: uniform2i, 
    uniform2fv_: uniform2fv_, 
    uniform2fv: uniform2fv, 
    uniform2f: uniform2f, 
    uniform1iv_: uniform1iv_, 
    uniform1iv: uniform1iv, 
    uniform1i: uniform1i, 
    uniform1fv_: uniform1fv_, 
    uniform1fv: uniform1fv, 
    uniform1f: uniform1f, 
    texSubImage2D_: texSubImage2D_, 
    texSubImage2D: texSubImage2D, 
    texParameteri: texParameteri, 
    texParameterf: texParameterf, 
    texImage2D_: texImage2D_, 
    texImage2D: texImage2D, 
    stencilOpSeparate: stencilOpSeparate, 
    stencilOp: stencilOp, 
    stencilMaskSeparate: stencilMaskSeparate, 
    stencilMask: stencilMask, 
    stencilFuncSeparate: stencilFuncSeparate, 
    stencilFunc: stencilFunc, 
    shaderSource: shaderSource, 
    scissor: scissor, 
    sampleCoverage: sampleCoverage, 
    renderbufferStorage: renderbufferStorage, 
    readPixels: readPixels, 
    polygonOffset: polygonOffset, 
    pixelStorei: pixelStorei, 
    linkProgram: linkProgram, 
    lineWidth: lineWidth, 
    isTexture: isTexture, 
    isShader: isShader, 
    isRenderbuffer: isRenderbuffer, 
    isProgram: isProgram, 
    isFramebuffer: isFramebuffer, 
    isEnabled: isEnabled, 
    isContextLost: isContextLost, 
    isBuffer: isBuffer, 
    hint: hint, 
    getVertexAttribOffset: getVertexAttribOffset, 
    getVertexAttrib: getVertexAttrib, 
    getUniformLocation: getUniformLocation, 
    getUniform: getUniform, 
    getTexParameter: getTexParameter, 
    getSupportedExtensions: getSupportedExtensions, 
    getShaderSource: getShaderSource, 
    getShaderPrecisionFormat: getShaderPrecisionFormat, 
    getShaderParameter: getShaderParameter, 
    getShaderInfoLog: getShaderInfoLog, 
    getRenderbufferParameter: getRenderbufferParameter, 
    getProgramParameter: getProgramParameter, 
    getProgramInfoLog: getProgramInfoLog, 
    getParameter: getParameter, 
    getFramebufferAttachmentParameter: getFramebufferAttachmentParameter, 
    getExtension: getExtension, 
    getError: getError, 
    getContextAttributes: getContextAttributes, 
    getBufferParameter: getBufferParameter, 
    getAttribLocation: getAttribLocation, 
    getAttachedShaders: getAttachedShaders, 
    getActiveUniform: getActiveUniform, 
    getActiveAttrib: getActiveAttrib, 
    generateMipmap: generateMipmap, 
    frontFace: frontFace, 
    framebufferTexture2D: framebufferTexture2D, 
    framebufferRenderbuffer: framebufferRenderbuffer, 
    flush: flush, 
    finish: finish, 
    enableVertexAttribArray: enableVertexAttribArray, 
    enable: enable, 
    drawElements: drawElements, 
    drawArrays: drawArrays, 
    disableVertexAttribArray: disableVertexAttribArray, 
    disable: disable, 
    detachShader: detachShader, 
    depthRange: depthRange, 
    depthMask: depthMask, 
    depthFunc: depthFunc, 
    deleteTexture: deleteTexture, 
    deleteShader: deleteShader, 
    deleteRenderbuffer: deleteRenderbuffer, 
    deleteProgram: deleteProgram, 
    deleteFramebuffer: deleteFramebuffer, 
    deleteBuffer: deleteBuffer, 
    cullFace: cullFace, 
    createTexture: createTexture, 
    createShader: createShader, 
    createRenderbuffer: createRenderbuffer, 
    createProgram: createProgram, 
    createFramebuffer: createFramebuffer, 
    createBuffer: createBuffer, 
    copyTexSubImage2D: copyTexSubImage2D, 
    copyTexImage2D: copyTexImage2D, 
    compressedTexSubImage2D: compressedTexSubImage2D, 
    compressedTexImage2D: compressedTexImage2D, 
    compileShader: compileShader, 
    colorMask: colorMask, 
    clearStencil: clearStencil, 
    clearDepth: clearDepth, 
    clearColor: clearColor, 
    clear: clear, 
    checkFramebufferStatus: checkFramebufferStatus, 
    bufferSubData: bufferSubData, 
    bufferData_: bufferData_, 
    bufferData: bufferData, 
    blendFuncSeparate: blendFuncSeparate, 
    blendFunc: blendFunc, 
    blendEquationSeparate: blendEquationSeparate, 
    blendEquation: blendEquation, 
    blendColor: blendColor, 
    bindTexture: bindTexture, 
    bindRenderbuffer: bindRenderbuffer, 
    bindFramebuffer: bindFramebuffer, 
    bindBuffer: bindBuffer, 
    bindAttribLocation: bindAttribLocation, 
    attachShader: attachShader, 
    activeTexture: activeTexture
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Raw\\foreign.js","Control.Monad.Eff":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff\\index.js","Data.ArrayBuffer.Types":"c:\\Development\\Web\\jundo\\output\\Data.ArrayBuffer.Types\\index.js","Data.Function":"c:\\Development\\Web\\jundo\\output\\Data.Function\\index.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js","Graphics.Canvas":"c:\\Development\\Web\\jundo\\output\\Graphics.Canvas\\index.js","Graphics.WebGL.Raw.Types":"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Raw.Types\\index.js","Graphics.WebGL.Raw.Util":"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Raw.Util\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Main\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Cube = require("Cube");
var Shaders = require("Shaders");
var Simulation = require("Simulation");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_Eff_Exception = require("Control.Monad.Eff.Exception");
var Control_Monad_ST = require("Control.Monad.ST");
var Data_ArrayBuffer_Types = require("Data.ArrayBuffer.Types");
var Data_Date = require("Data.Date");
var Data_Time = require("Data.Time");
var Data_Either = require("Data.Either");
var Data_Int = require("Data.Int");
var Data_Int_Bits = require("Data.Int.Bits");
var Data_Matrix = require("Data.Matrix");
var Data_Matrix4 = require("Data.Matrix4");
var Data_Vector3 = require("Data.Vector3");
var Data_Maybe = require("Data.Maybe");
var Data_Nullable = require("Data.Nullable");
var Data_Tuple = require("Data.Tuple");
var Data_TypedArray = require("Data.TypedArray");
var DOM = require("DOM");
var DOM_Event_EventTarget = require("DOM.Event.EventTarget");
var DOM_Event_Experimental = require("DOM.Event.Experimental");
var DOM_Event_MouseEvent = require("DOM.Event.MouseEvent");
var DOM_Event_Types = require("DOM.Event.Types");
var DOM_HTML = require("DOM.HTML");
var DOM_HTML_Types = require("DOM.HTML.Types");
var DOM_HTML_Window = require("DOM.HTML.Window");
var DOM_Node_Document_Experimental = require("DOM.Node.Document.Experimental");
var DOM_Node_Element_Experimental = require("DOM.Node.Element.Experimental");
var DOM_Node_Types = require("DOM.Node.Types");
var DOM_RequestAnimationFrame = require("DOM.RequestAnimationFrame");
var Graphics_WebGL_Context = require("Graphics.WebGL.Context");
var Graphics_WebGL_Free = require("Graphics.WebGL.Free");
var Graphics_WebGL_Raw_Enums = require("Graphics.WebGL.Raw.Enums");
var Graphics_WebGL_Raw_Types = require("Graphics.WebGL.Raw.Types");
var Graphics_Canvas = require("Graphics.Canvas");
var Graphics_Canvas_Element = require("Graphics.Canvas.Element");
var Math_Radians = require("Math.Radians");
var Control_Monad_Free = require("Control.Monad.Free");
var matrixToFloat32Array = function (_4002) {
    return Data_TypedArray.asFloat32Array(Data_Matrix.toArray(_4002));
};
var mvMatrix = function (_1005) {
    return matrixToFloat32Array(Data_Matrix4.rotate(_1005)(Data_Vector3.j3)(Data_Matrix4.translate(Data_Vector3.vec3(0.0)(0.0)(-6.0))(Data_Matrix4.identity)));
};
var perspectiveMatrix = function (bufferWidth) {
    return function (bufferHeight) {
        return matrixToFloat32Array(Data_Matrix4.makePerspective(45.0)(Data_Int.toNumber(bufferWidth) / Data_Int.toNumber(bufferHeight))(0.1)(100.0));
    };
};
var tick = function (c) {
    return function (stateRef) {
        return function (time) {
            return function __do() {
                var _109 = DOM_Node_Element_Experimental.clientHeight(Graphics_Canvas_Element.toElement(c.el))();
                var _108 = DOM_Node_Element_Experimental.clientWidth(Graphics_Canvas_Element.toElement(c.el))();
                Graphics_Canvas.setCanvasDimensions({
                    height: Data_Int.toNumber(_109), 
                    width: Data_Int.toNumber(_108)
                })(c.el)();
                var _107 = Data_Date.nowEpochMilliseconds();
                var _106 = Control_Monad_ST.modifySTRef(stateRef)(Simulation.timestep(Prelude["-"](Data_Time.ringMilliseconds)(_107)(time)))();
                Graphics_WebGL_Free.runWebGL(c.gl)(Prelude.bind(Control_Monad_Free.freeBind)(Graphics_WebGL_Free.getDrawingBufferHeight)(function (_105) {
                    return Prelude.bind(Control_Monad_Free.freeBind)(Graphics_WebGL_Free.getDrawingBufferWidth)(function (_104) {
                        return Prelude.bind(Control_Monad_Free.freeBind)(Graphics_WebGL_Free.viewport(0)(0)(_104)(_105))(function () {
                            return Prelude.bind(Control_Monad_Free.freeBind)(Graphics_WebGL_Free.clear(Graphics_WebGL_Raw_Enums.colorBufferBit | Graphics_WebGL_Raw_Enums.depthBufferBit))(function () {
                                return Prelude.bind(Control_Monad_Free.freeBind)(Graphics_WebGL_Free.uniformMatrix4fv(c.programLocations.pMatrix)(false)(perspectiveMatrix(_104)(_105)))(function () {
                                    return Prelude.bind(Control_Monad_Free.freeBind)(Graphics_WebGL_Free.uniformMatrix4fv(c.programLocations.mvMatrix)(false)(mvMatrix(_106.angle)))(function () {
                                        return Prelude.bind(Control_Monad_Free.freeBind)(Graphics_WebGL_Free.bindBuffer(Graphics_WebGL_Raw_Enums.arrayBuffer)(c.cubeBuffers.vertex))(function () {
                                            return Prelude.bind(Control_Monad_Free.freeBind)(Graphics_WebGL_Free.vertexAttribPointer(c.programLocations.aVertex)(3)(Graphics_WebGL_Raw_Enums["float"])(false)(0)(0))(function () {
                                                return Prelude.bind(Control_Monad_Free.freeBind)(Graphics_WebGL_Free.bindBuffer(Graphics_WebGL_Raw_Enums.elementArrayBuffer)(c.cubeBuffers.index))(function () {
                                                    return Graphics_WebGL_Free.drawElements(Graphics_WebGL_Raw_Enums.triangles)(36)(Graphics_WebGL_Raw_Enums.unsignedShort)(0);
                                                });
                                            });
                                        });
                                    });
                                });
                            });
                        });
                    });
                }))();
                return DOM_RequestAnimationFrame.requestAnimationFrame(tick(c)(stateRef)(_107))();
            };
        };
    };
};
var canvasClick = function (stateRef) {
    return function (el) {
        return function (_1006) {
            return function __do() {
                var _103 = (function __do() {
                    var _4004 = Prelude[">>="](Control_Monad_Eff.bindEff)(function __do() {
                        var _4003 = Prelude[">>="](Control_Monad_Eff.bindEff)(DOM_HTML.window)(DOM_HTML_Window.document)();
                        return DOM_HTML_Types.htmlDocumentToDocument(_4003);
                    })(DOM_Node_Document_Experimental.fullscreenElement)();
                    return Data_Nullable.toMaybe(_4004);
                })();
                return (function () {
                    if (_103 instanceof Data_Maybe.Nothing) {
                        return function __do() {
                            DOM_Node_Element_Experimental.requestFullscreen(el)();
                            return DOM_Node_Element_Experimental.requestPointerLock(el)();
                        };
                    };
                    if (_103 instanceof Data_Maybe.Just) {
                        return function __do() {
                            Control_Monad_ST.modifySTRef(stateRef)(Simulation.toggleDirection)();
                            return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit)();
                        };
                    };
                    throw new Error("Failed pattern match at Main line 68, column 1 - line 69, column 1: " + [ _103.constructor.name ]);
                })()();
            };
        };
    };
};
var main = function __do() {
    var _116 = Graphics_Canvas.getCanvasElementById("easel")();
    if (_116 instanceof Data_Maybe.Just) {
        var _115 = Graphics_WebGL_Context.getWebGLContext(_116.value0)();
        var _114 = Shaders.initialiseShaderProgram(_115)();
        var _113 = Graphics_WebGL_Free.runWebGL(_115)(Prelude.bind(Control_Monad_Free.freeBind)(Graphics_WebGL_Free.clearColor(0.0)(0.0)(0.0)(1.0))(function () {
            return Prelude.bind(Control_Monad_Free.freeBind)(Graphics_WebGL_Free.enable(Graphics_WebGL_Raw_Enums.depthTest))(function () {
                return Prelude.bind(Control_Monad_Free.freeBind)(Graphics_WebGL_Free.depthFunc(Graphics_WebGL_Raw_Enums.lequal))(function () {
                    return Prelude.bind(Control_Monad_Free.freeBind)(Graphics_WebGL_Free.useProgram(_114.value0))(function () {
                        return Cube.initialiseBuffers;
                    });
                });
            });
        }))();
        var _112 = Data_Date.nowEpochMilliseconds();
        var _111 = DOM_Node_Types.elementToEventTarget(Graphics_Canvas_Element.toElement(_116.value0));
        var _110 = {
            value: Simulation.initialSimulationState
        };
        DOM_Event_MouseEvent.addMouseEventListener(DOM_Event_MouseEvent.click)(canvasClick(_110)(Graphics_Canvas_Element.toElement(_116.value0)))(false)(_111)();
        return tick({
            el: _116.value0, 
            gl: _115, 
            programLocations: _114.value1, 
            cubeBuffers: _113
        })(_110)(_112)();
    };
    throw new Error("Failed pattern match at Main line 109, column 1 - line 110, column 1: " + [ _116.constructor.name ]);
};
module.exports = {
    main: main, 
    tick: tick, 
    canvasClick: canvasClick, 
    perspectiveMatrix: perspectiveMatrix, 
    mvMatrix: mvMatrix, 
    matrixToFloat32Array: matrixToFloat32Array
};

},{"Control.Monad.Eff":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff\\index.js","Control.Monad.Eff.Exception":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff.Exception\\index.js","Control.Monad.Free":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Free\\index.js","Control.Monad.ST":"c:\\Development\\Web\\jundo\\output\\Control.Monad.ST\\index.js","Cube":"c:\\Development\\Web\\jundo\\output\\Cube\\index.js","DOM":"c:\\Development\\Web\\jundo\\output\\DOM\\index.js","DOM.Event.EventTarget":"c:\\Development\\Web\\jundo\\output\\DOM.Event.EventTarget\\index.js","DOM.Event.Experimental":"c:\\Development\\Web\\jundo\\output\\DOM.Event.Experimental\\index.js","DOM.Event.MouseEvent":"c:\\Development\\Web\\jundo\\output\\DOM.Event.MouseEvent\\index.js","DOM.Event.Types":"c:\\Development\\Web\\jundo\\output\\DOM.Event.Types\\index.js","DOM.HTML":"c:\\Development\\Web\\jundo\\output\\DOM.HTML\\index.js","DOM.HTML.Types":"c:\\Development\\Web\\jundo\\output\\DOM.HTML.Types\\index.js","DOM.HTML.Window":"c:\\Development\\Web\\jundo\\output\\DOM.HTML.Window\\index.js","DOM.Node.Document.Experimental":"c:\\Development\\Web\\jundo\\output\\DOM.Node.Document.Experimental\\index.js","DOM.Node.Element.Experimental":"c:\\Development\\Web\\jundo\\output\\DOM.Node.Element.Experimental\\index.js","DOM.Node.Types":"c:\\Development\\Web\\jundo\\output\\DOM.Node.Types\\index.js","DOM.RequestAnimationFrame":"c:\\Development\\Web\\jundo\\output\\DOM.RequestAnimationFrame\\index.js","Data.ArrayBuffer.Types":"c:\\Development\\Web\\jundo\\output\\Data.ArrayBuffer.Types\\index.js","Data.Date":"c:\\Development\\Web\\jundo\\output\\Data.Date\\index.js","Data.Either":"c:\\Development\\Web\\jundo\\output\\Data.Either\\index.js","Data.Int":"c:\\Development\\Web\\jundo\\output\\Data.Int\\index.js","Data.Int.Bits":"c:\\Development\\Web\\jundo\\output\\Data.Int.Bits\\index.js","Data.Matrix":"c:\\Development\\Web\\jundo\\output\\Data.Matrix\\index.js","Data.Matrix4":"c:\\Development\\Web\\jundo\\output\\Data.Matrix4\\index.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js","Data.Nullable":"c:\\Development\\Web\\jundo\\output\\Data.Nullable\\index.js","Data.Time":"c:\\Development\\Web\\jundo\\output\\Data.Time\\index.js","Data.Tuple":"c:\\Development\\Web\\jundo\\output\\Data.Tuple\\index.js","Data.TypedArray":"c:\\Development\\Web\\jundo\\output\\Data.TypedArray\\index.js","Data.Vector3":"c:\\Development\\Web\\jundo\\output\\Data.Vector3\\index.js","Graphics.Canvas":"c:\\Development\\Web\\jundo\\output\\Graphics.Canvas\\index.js","Graphics.Canvas.Element":"c:\\Development\\Web\\jundo\\output\\Graphics.Canvas.Element\\index.js","Graphics.WebGL.Context":"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Context\\index.js","Graphics.WebGL.Free":"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Free\\index.js","Graphics.WebGL.Raw.Enums":"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Raw.Enums\\index.js","Graphics.WebGL.Raw.Types":"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Raw.Types\\index.js","Math.Radians":"c:\\Development\\Web\\jundo\\output\\Math.Radians\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js","Shaders":"c:\\Development\\Web\\jundo\\output\\Shaders\\index.js","Simulation":"c:\\Development\\Web\\jundo\\output\\Simulation\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Math.Radians\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Radians = function (x) {
    return x;
};
var showRadians = new Prelude.Show(function (_166) {
    return "(Radians " + (Prelude.show(Prelude.showNumber)(_166) + ")");
});
var semiringRadians = new Prelude.Semiring(function (_156) {
    return function (_157) {
        return _156 + _157;
    };
}, function (_158) {
    return function (_159) {
        return _158 * _159;
    };
}, 1.0, 0.0);
var ringRadians = new Prelude.Ring(function () {
    return semiringRadians;
}, function (_160) {
    return function (_161) {
        return _160 - _161;
    };
});
var moduloSemiringRadians = new Prelude.ModuloSemiring(function () {
    return semiringRadians;
}, function (_162) {
    return function (_163) {
        return _162 / _163;
    };
}, function (_164) {
    return function (_165) {
        return 0.0;
    };
});
var eqRadians = new Prelude.Eq(function (_152) {
    return function (_153) {
        return _152 === _153;
    };
});
var ordRadians = new Prelude.Ord(function () {
    return eqRadians;
}, function (_154) {
    return function (_155) {
        return Prelude.compare(Prelude.ordNumber)(_154)(_155);
    };
});
var divisionRingRadians = new Prelude.DivisionRing(function () {
    return moduloSemiringRadians;
}, function () {
    return ringRadians;
});
var numRadians = new Prelude.Num(function () {
    return divisionRingRadians;
});
module.exports = {
    Radians: Radians, 
    eqRadians: eqRadians, 
    ordRadians: ordRadians, 
    semiringRadians: semiringRadians, 
    ringRadians: ringRadians, 
    moduloSemiringRadians: moduloSemiringRadians, 
    divisionRingRadians: divisionRingRadians, 
    numRadians: numRadians, 
    showRadians: showRadians
};

},{"Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Math\\foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Math

exports.abs = Math.abs;

exports.acos = Math.acos;

exports.asin = Math.asin;

exports.atan = Math.atan;

exports.atan2 = function (y) {
  return function (x) {
    return Math.atan2(y, x);
  };
};

exports.ceil = Math.ceil;

exports.cos = Math.cos;

exports.exp = Math.exp;

exports.floor = Math.floor;

exports.log = Math.log;

exports.max = function (n1) {
  return function (n2) {
    return Math.max(n1, n2);
  };
};

exports.min = function (n1) {
  return function (n2) {
    return Math.min(n1, n2);
  };
};

exports.pow = function (n) {
  return function (p) {
    return Math.pow(n, p);
  };
};

exports["%"] = function(n) {
  return function(m) {
    return n % m;
  };
};

exports.round = Math.round;

exports.sin = Math.sin;

exports.sqrt = Math.sqrt;

exports.tan = Math.tan;

exports.e = Math.E;

exports.ln2 = Math.LN2;

exports.ln10 = Math.LN10;

exports.log2e = Math.LOG2E;

exports.log10e = Math.LOG10E;

exports.pi = Math.PI;

exports.sqrt1_2 = Math.SQRT1_2;

exports.sqrt2 = Math.SQRT2;

},{}],"c:\\Development\\Web\\jundo\\output\\Math\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
module.exports = {
    sqrt2: $foreign.sqrt2, 
    sqrt1_2: $foreign.sqrt1_2, 
    pi: $foreign.pi, 
    log10e: $foreign.log10e, 
    log2e: $foreign.log2e, 
    ln10: $foreign.ln10, 
    ln2: $foreign.ln2, 
    e: $foreign.e, 
    "%": $foreign["%"], 
    tan: $foreign.tan, 
    sqrt: $foreign.sqrt, 
    sin: $foreign.sin, 
    round: $foreign.round, 
    pow: $foreign.pow, 
    min: $foreign.min, 
    max: $foreign.max, 
    log: $foreign.log, 
    floor: $foreign.floor, 
    exp: $foreign.exp, 
    cos: $foreign.cos, 
    ceil: $foreign.ceil, 
    atan2: $foreign.atan2, 
    atan: $foreign.atan, 
    asin: $foreign.asin, 
    acos: $foreign.acos, 
    abs: $foreign.abs
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\Math\\foreign.js"}],"c:\\Development\\Web\\jundo\\output\\Prelude\\foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Prelude

//- Functor --------------------------------------------------------------------

exports.arrayMap = function (f) {
  return function (arr) {
    var l = arr.length;
    var result = new Array(l);
    for (var i = 0; i < l; i++) {
      result[i] = f(arr[i]);
    }
    return result;
  };
};

//- Bind -----------------------------------------------------------------------

exports.arrayBind = function (arr) {
  return function (f) {
    var result = [];
    for (var i = 0, l = arr.length; i < l; i++) {
      Array.prototype.push.apply(result, f(arr[i]));
    }
    return result;
  };
};

//- Monoid ---------------------------------------------------------------------

exports.concatString = function (s1) {
  return function (s2) {
    return s1 + s2;
  };
};

exports.concatArray = function (xs) {
  return function (ys) {
    return xs.concat(ys);
  };
};

//- Semiring -------------------------------------------------------------------

exports.intAdd = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x + y | 0;
  };
};

exports.intMul = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x * y | 0;
  };
};

exports.numAdd = function (n1) {
  return function (n2) {
    return n1 + n2;
  };
};

exports.numMul = function (n1) {
  return function (n2) {
    return n1 * n2;
  };
};

//- ModuloSemiring -------------------------------------------------------------

exports.intDiv = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x / y | 0;
  };
};

exports.intMod = function (x) {
  return function (y) {
    return x % y;
  };
};

exports.numDiv = function (n1) {
  return function (n2) {
    return n1 / n2;
  };
};

//- Ring -----------------------------------------------------------------------

exports.intSub = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x - y | 0;
  };
};

exports.numSub = function (n1) {
  return function (n2) {
    return n1 - n2;
  };
};

//- Eq -------------------------------------------------------------------------

exports.refEq = function (r1) {
  return function (r2) {
    return r1 === r2;
  };
};

exports.refIneq = function (r1) {
  return function (r2) {
    return r1 !== r2;
  };
};

exports.eqArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      if (xs.length !== ys.length) return false;
      for (var i = 0; i < xs.length; i++) {
        if (!f(xs[i])(ys[i])) return false;
      }
      return true;
    };
  };
};

exports.ordArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      var i = 0;
      var xlen = xs.length;
      var ylen = ys.length;
      while (i < xlen && i < ylen) {
        var x = xs[i];
        var y = ys[i];
        var o = f(x)(y);
        if (o !== 0) {
          return o;
        }
        i++;
      }
      if (xlen === ylen) {
        return 0;
      } else if (xlen > ylen) {
        return -1;
      } else {
        return 1;
      }
    };
  };
};

//- Ord ------------------------------------------------------------------------

exports.unsafeCompareImpl = function (lt) {
  return function (eq) {
    return function (gt) {
      return function (x) {
        return function (y) {
          return x < y ? lt : x > y ? gt : eq;
        };
      };
    };
  };
};

//- Bounded --------------------------------------------------------------------

exports.topChar = String.fromCharCode(65535);
exports.bottomChar = String.fromCharCode(0);

//- BooleanAlgebra -------------------------------------------------------------

exports.boolOr = function (b1) {
  return function (b2) {
    return b1 || b2;
  };
};

exports.boolAnd = function (b1) {
  return function (b2) {
    return b1 && b2;
  };
};

exports.boolNot = function (b) {
  return !b;
};

//- Show -----------------------------------------------------------------------

exports.showIntImpl = function (n) {
  return n.toString();
};

exports.showNumberImpl = function (n) {
  /* jshint bitwise: false */
  return n === (n | 0) ? n + ".0" : n.toString();
};

exports.showCharImpl = function (c) {
  return c === "'" ? "'\\''" : "'" + c + "'";
};

exports.showStringImpl = function (s) {
  return JSON.stringify(s);
};

exports.showArrayImpl = function (f) {
  return function (xs) {
    var ss = [];
    for (var i = 0, l = xs.length; i < l; i++) {
      ss[i] = f(xs[i]);
    }
    return "[" + ss.join(",") + "]";
  };
};

},{}],"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Unit = function (x) {
    return x;
};
var LT = (function () {
    function LT() {

    };
    LT.value = new LT();
    return LT;
})();
var GT = (function () {
    function GT() {

    };
    GT.value = new GT();
    return GT;
})();
var EQ = (function () {
    function EQ() {

    };
    EQ.value = new EQ();
    return EQ;
})();
var Semigroupoid = function (compose) {
    this.compose = compose;
};
var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
    this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
    this.id = id;
};
var Functor = function (map) {
    this.map = map;
};
var Apply = function (__superclass_Prelude$dotFunctor_0, apply) {
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.apply = apply;
};
var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
    this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    this.pure = pure;
};
var Bind = function (__superclass_Prelude$dotApply_0, bind) {
    this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    this.bind = bind;
};
var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
    this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
    this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
};
var Semigroup = function (append) {
    this.append = append;
};
var Semiring = function (add, mul, one, zero) {
    this.add = add;
    this.mul = mul;
    this.one = one;
    this.zero = zero;
};
var Ring = function (__superclass_Prelude$dotSemiring_0, sub) {
    this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
    this.sub = sub;
};
var ModuloSemiring = function (__superclass_Prelude$dotSemiring_0, div, mod) {
    this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
    this.div = div;
    this.mod = mod;
};
var DivisionRing = function (__superclass_Prelude$dotModuloSemiring_1, __superclass_Prelude$dotRing_0) {
    this["__superclass_Prelude.ModuloSemiring_1"] = __superclass_Prelude$dotModuloSemiring_1;
    this["__superclass_Prelude.Ring_0"] = __superclass_Prelude$dotRing_0;
};
var Num = function (__superclass_Prelude$dotDivisionRing_0) {
    this["__superclass_Prelude.DivisionRing_0"] = __superclass_Prelude$dotDivisionRing_0;
};
var Eq = function (eq) {
    this.eq = eq;
};
var Ord = function (__superclass_Prelude$dotEq_0, compare) {
    this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
    this.compare = compare;
};
var Bounded = function (bottom, top) {
    this.bottom = bottom;
    this.top = top;
};
var BoundedOrd = function (__superclass_Prelude$dotBounded_0, __superclass_Prelude$dotOrd_1) {
    this["__superclass_Prelude.Bounded_0"] = __superclass_Prelude$dotBounded_0;
    this["__superclass_Prelude.Ord_1"] = __superclass_Prelude$dotOrd_1;
};
var BooleanAlgebra = function (__superclass_Prelude$dotBounded_0, conj, disj, not) {
    this["__superclass_Prelude.Bounded_0"] = __superclass_Prelude$dotBounded_0;
    this.conj = conj;
    this.disj = disj;
    this.not = not;
};
var Show = function (show) {
    this.show = show;
};
var $dollar = function (f) {
    return function (x) {
        return f(x);
    };
};
var $hash = function (x) {
    return function (f) {
        return f(x);
    };
};
var zero = function (dict) {
    return dict.zero;
};
var unsafeCompare = $foreign.unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
var unit = {};
var top = function (dict) {
    return dict.top;
};
var sub = function (dict) {
    return dict.sub;
};
var $minus = function (__dict_Ring_0) {
    return sub(__dict_Ring_0);
};
var showUnit = new Show(function (_150) {
    return "unit";
});
var showString = new Show($foreign.showStringImpl);
var showOrdering = new Show(function (_151) {
    if (_151 instanceof LT) {
        return "LT";
    };
    if (_151 instanceof GT) {
        return "GT";
    };
    if (_151 instanceof EQ) {
        return "EQ";
    };
    throw new Error("Failed pattern match at Prelude line 860, column 1 - line 865, column 1: " + [ _151.constructor.name ]);
});
var showNumber = new Show($foreign.showNumberImpl);
var showInt = new Show($foreign.showIntImpl);
var showChar = new Show($foreign.showCharImpl);
var showBoolean = new Show(function (_149) {
    if (_149) {
        return "true";
    };
    if (!_149) {
        return "false";
    };
    throw new Error("Failed pattern match at Prelude line 838, column 1 - line 842, column 1: " + [ _149.constructor.name ]);
});
var show = function (dict) {
    return dict.show;
};
var showArray = function (__dict_Show_1) {
    return new Show($foreign.showArrayImpl(show(__dict_Show_1)));
};
var semiringUnit = new Semiring(function (_122) {
    return function (_123) {
        return unit;
    };
}, function (_124) {
    return function (_125) {
        return unit;
    };
}, unit, unit);
var semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);
var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
var semigroupoidFn = new Semigroupoid(function (f) {
    return function (g) {
        return function (x) {
            return f(g(x));
        };
    };
});
var semigroupUnit = new Semigroup(function (_119) {
    return function (_120) {
        return unit;
    };
});
var semigroupString = new Semigroup($foreign.concatString);
var semigroupOrdering = new Semigroup(function (_121) {
    return function (y) {
        if (_121 instanceof LT) {
            return LT.value;
        };
        if (_121 instanceof GT) {
            return GT.value;
        };
        if (_121 instanceof EQ) {
            return y;
        };
        throw new Error("Failed pattern match at Prelude line 413, column 1 - line 418, column 1: " + [ _121.constructor.name, y.constructor.name ]);
    };
});
var semigroupArray = new Semigroup($foreign.concatArray);
var ringUnit = new Ring(function () {
    return semiringUnit;
}, function (_126) {
    return function (_127) {
        return unit;
    };
});
var ringNumber = new Ring(function () {
    return semiringNumber;
}, $foreign.numSub);
var ringInt = new Ring(function () {
    return semiringInt;
}, $foreign.intSub);
var pure = function (dict) {
    return dict.pure;
};
var $$return = function (__dict_Applicative_2) {
    return pure(__dict_Applicative_2);
};
var otherwise = true;
var one = function (dict) {
    return dict.one;
};
var not = function (dict) {
    return dict.not;
};
var negate = function (__dict_Ring_3) {
    return function (a) {
        return $minus(__dict_Ring_3)(zero(__dict_Ring_3["__superclass_Prelude.Semiring_0"]()))(a);
    };
};
var mul = function (dict) {
    return dict.mul;
};
var $times = function (__dict_Semiring_4) {
    return mul(__dict_Semiring_4);
};
var moduloSemiringUnit = new ModuloSemiring(function () {
    return semiringUnit;
}, function (_130) {
    return function (_131) {
        return unit;
    };
}, function (_132) {
    return function (_133) {
        return unit;
    };
});
var moduloSemiringNumber = new ModuloSemiring(function () {
    return semiringNumber;
}, $foreign.numDiv, function (_128) {
    return function (_129) {
        return 0.0;
    };
});
var moduloSemiringInt = new ModuloSemiring(function () {
    return semiringInt;
}, $foreign.intDiv, $foreign.intMod);
var mod = function (dict) {
    return dict.mod;
};
var map = function (dict) {
    return dict.map;
};
var $less$dollar$greater = function (__dict_Functor_5) {
    return map(__dict_Functor_5);
};
var $less$hash$greater = function (__dict_Functor_6) {
    return function (fa) {
        return function (f) {
            return $less$dollar$greater(__dict_Functor_6)(f)(fa);
        };
    };
};
var id = function (dict) {
    return dict.id;
};
var functorArray = new Functor($foreign.arrayMap);
var flip = function (f) {
    return function (b) {
        return function (a) {
            return f(a)(b);
        };
    };
};
var eqUnit = new Eq(function (_134) {
    return function (_135) {
        return true;
    };
});
var ordUnit = new Ord(function () {
    return eqUnit;
}, function (_138) {
    return function (_139) {
        return EQ.value;
    };
});
var eqString = new Eq($foreign.refEq);
var ordString = new Ord(function () {
    return eqString;
}, unsafeCompare);
var eqOrdering = new Eq(function (_136) {
    return function (_137) {
        if (_136 instanceof LT && _137 instanceof LT) {
            return true;
        };
        if (_136 instanceof GT && _137 instanceof GT) {
            return true;
        };
        if (_136 instanceof EQ && _137 instanceof EQ) {
            return true;
        };
        return false;
    };
});
var ordOrdering = new Ord(function () {
    return eqOrdering;
}, function (_140) {
    return function (_141) {
        if (_140 instanceof LT && _141 instanceof LT) {
            return EQ.value;
        };
        if (_140 instanceof EQ && _141 instanceof EQ) {
            return EQ.value;
        };
        if (_140 instanceof GT && _141 instanceof GT) {
            return EQ.value;
        };
        if (_140 instanceof LT) {
            return LT.value;
        };
        if (_140 instanceof EQ && _141 instanceof LT) {
            return GT.value;
        };
        if (_140 instanceof EQ && _141 instanceof GT) {
            return LT.value;
        };
        if (_140 instanceof GT) {
            return GT.value;
        };
        throw new Error("Failed pattern match at Prelude line 668, column 1 - line 677, column 1: " + [ _140.constructor.name, _141.constructor.name ]);
    };
});
var eqNumber = new Eq($foreign.refEq);
var ordNumber = new Ord(function () {
    return eqNumber;
}, unsafeCompare);
var eqInt = new Eq($foreign.refEq);
var ordInt = new Ord(function () {
    return eqInt;
}, unsafeCompare);
var eqChar = new Eq($foreign.refEq);
var ordChar = new Ord(function () {
    return eqChar;
}, unsafeCompare);
var eqBoolean = new Eq($foreign.refEq);
var ordBoolean = new Ord(function () {
    return eqBoolean;
}, unsafeCompare);
var eq = function (dict) {
    return dict.eq;
};
var $eq$eq = function (__dict_Eq_7) {
    return eq(__dict_Eq_7);
};
var eqArray = function (__dict_Eq_8) {
    return new Eq($foreign.eqArrayImpl($eq$eq(__dict_Eq_8)));
};
var divisionRingUnit = new DivisionRing(function () {
    return moduloSemiringUnit;
}, function () {
    return ringUnit;
});
var numUnit = new Num(function () {
    return divisionRingUnit;
});
var divisionRingNumber = new DivisionRing(function () {
    return moduloSemiringNumber;
}, function () {
    return ringNumber;
});
var numNumber = new Num(function () {
    return divisionRingNumber;
});
var div = function (dict) {
    return dict.div;
};
var $div = function (__dict_ModuloSemiring_10) {
    return div(__dict_ModuloSemiring_10);
};
var disj = function (dict) {
    return dict.disj;
};
var $bar$bar = function (__dict_BooleanAlgebra_11) {
    return disj(__dict_BooleanAlgebra_11);
};
var $$const = function (a) {
    return function (_117) {
        return a;
    };
};
var $$void = function (__dict_Functor_12) {
    return function (fa) {
        return $less$dollar$greater(__dict_Functor_12)($$const(unit))(fa);
    };
};
var conj = function (dict) {
    return dict.conj;
};
var $amp$amp = function (__dict_BooleanAlgebra_13) {
    return conj(__dict_BooleanAlgebra_13);
};
var compose = function (dict) {
    return dict.compose;
};
var functorFn = new Functor(compose(semigroupoidFn));
var $less$less$less = function (__dict_Semigroupoid_14) {
    return compose(__dict_Semigroupoid_14);
};
var $greater$greater$greater = function (__dict_Semigroupoid_15) {
    return flip(compose(__dict_Semigroupoid_15));
};
var compare = function (dict) {
    return dict.compare;
};
var ordArray = function (__dict_Ord_16) {
    return new Ord(function () {
        return eqArray(__dict_Ord_16["__superclass_Prelude.Eq_0"]());
    }, function (xs) {
        return function (ys) {
            return $dollar(compare(ordInt)(0))($foreign.ordArrayImpl(function (x) {
                return function (y) {
                    var _1015 = compare(__dict_Ord_16)(x)(y);
                    if (_1015 instanceof EQ) {
                        return 0;
                    };
                    if (_1015 instanceof LT) {
                        return 1;
                    };
                    if (_1015 instanceof GT) {
                        return negate(ringInt)(1);
                    };
                    throw new Error("Failed pattern match at Prelude line 660, column 1 - line 666, column 1: " + [ _1015.constructor.name ]);
                };
            })(xs)(ys));
        };
    });
};
var $less = function (__dict_Ord_17) {
    return function (a1) {
        return function (a2) {
            var _1016 = compare(__dict_Ord_17)(a1)(a2);
            if (_1016 instanceof LT) {
                return true;
            };
            return false;
        };
    };
};
var $less$eq = function (__dict_Ord_18) {
    return function (a1) {
        return function (a2) {
            var _1017 = compare(__dict_Ord_18)(a1)(a2);
            if (_1017 instanceof GT) {
                return false;
            };
            return true;
        };
    };
};
var $greater = function (__dict_Ord_19) {
    return function (a1) {
        return function (a2) {
            var _1018 = compare(__dict_Ord_19)(a1)(a2);
            if (_1018 instanceof GT) {
                return true;
            };
            return false;
        };
    };
};
var $greater$eq = function (__dict_Ord_20) {
    return function (a1) {
        return function (a2) {
            var _1019 = compare(__dict_Ord_20)(a1)(a2);
            if (_1019 instanceof LT) {
                return false;
            };
            return true;
        };
    };
};
var categoryFn = new Category(function () {
    return semigroupoidFn;
}, function (x) {
    return x;
});
var boundedUnit = new Bounded(unit, unit);
var boundedOrdering = new Bounded(LT.value, GT.value);
var boundedOrdUnit = new BoundedOrd(function () {
    return boundedUnit;
}, function () {
    return ordUnit;
});
var boundedOrdOrdering = new BoundedOrd(function () {
    return boundedOrdering;
}, function () {
    return ordOrdering;
});
var boundedInt = new Bounded(negate(ringInt)(2147483648), 2147483647);
var boundedOrdInt = new BoundedOrd(function () {
    return boundedInt;
}, function () {
    return ordInt;
});
var boundedChar = new Bounded($foreign.bottomChar, $foreign.topChar);
var boundedOrdChar = new BoundedOrd(function () {
    return boundedChar;
}, function () {
    return ordChar;
});
var boundedBoolean = new Bounded(false, true);
var boundedOrdBoolean = new BoundedOrd(function () {
    return boundedBoolean;
}, function () {
    return ordBoolean;
});
var bottom = function (dict) {
    return dict.bottom;
};
var boundedFn = function (__dict_Bounded_21) {
    return new Bounded(function (_143) {
        return bottom(__dict_Bounded_21);
    }, function (_142) {
        return top(__dict_Bounded_21);
    });
};
var booleanAlgebraUnit = new BooleanAlgebra(function () {
    return boundedUnit;
}, function (_144) {
    return function (_145) {
        return unit;
    };
}, function (_146) {
    return function (_147) {
        return unit;
    };
}, function (_148) {
    return unit;
});
var booleanAlgebraFn = function (__dict_BooleanAlgebra_22) {
    return new BooleanAlgebra(function () {
        return boundedFn(__dict_BooleanAlgebra_22["__superclass_Prelude.Bounded_0"]());
    }, function (fx) {
        return function (fy) {
            return function (a) {
                return conj(__dict_BooleanAlgebra_22)(fx(a))(fy(a));
            };
        };
    }, function (fx) {
        return function (fy) {
            return function (a) {
                return disj(__dict_BooleanAlgebra_22)(fx(a))(fy(a));
            };
        };
    }, function (fx) {
        return function (a) {
            return not(__dict_BooleanAlgebra_22)(fx(a));
        };
    });
};
var booleanAlgebraBoolean = new BooleanAlgebra(function () {
    return boundedBoolean;
}, $foreign.boolAnd, $foreign.boolOr, $foreign.boolNot);
var $div$eq = function (__dict_Eq_9) {
    return function (x) {
        return function (y) {
            return not(booleanAlgebraBoolean)($eq$eq(__dict_Eq_9)(x)(y));
        };
    };
};
var bind = function (dict) {
    return dict.bind;
};
var liftM1 = function (__dict_Monad_23) {
    return function (f) {
        return function (a) {
            return bind(__dict_Monad_23["__superclass_Prelude.Bind_1"]())(a)(function (_16) {
                return $$return(__dict_Monad_23["__superclass_Prelude.Applicative_0"]())(f(_16));
            });
        };
    };
};
var $greater$greater$eq = function (__dict_Bind_24) {
    return bind(__dict_Bind_24);
};
var asTypeOf = function (x) {
    return function (_118) {
        return x;
    };
};
var applyFn = new Apply(function () {
    return functorFn;
}, function (f) {
    return function (g) {
        return function (x) {
            return f(x)(g(x));
        };
    };
});
var bindFn = new Bind(function () {
    return applyFn;
}, function (m) {
    return function (f) {
        return function (x) {
            return f(m(x))(x);
        };
    };
});
var apply = function (dict) {
    return dict.apply;
};
var $less$times$greater = function (__dict_Apply_25) {
    return apply(__dict_Apply_25);
};
var liftA1 = function (__dict_Applicative_26) {
    return function (f) {
        return function (a) {
            return $less$times$greater(__dict_Applicative_26["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_26)(f))(a);
        };
    };
};
var applicativeFn = new Applicative(function () {
    return applyFn;
}, $$const);
var monadFn = new Monad(function () {
    return applicativeFn;
}, function () {
    return bindFn;
});
var append = function (dict) {
    return dict.append;
};
var $plus$plus = function (__dict_Semigroup_27) {
    return append(__dict_Semigroup_27);
};
var $less$greater = function (__dict_Semigroup_28) {
    return append(__dict_Semigroup_28);
};
var semigroupFn = function (__dict_Semigroup_29) {
    return new Semigroup(function (f) {
        return function (g) {
            return function (x) {
                return $less$greater(__dict_Semigroup_29)(f(x))(g(x));
            };
        };
    });
};
var ap = function (__dict_Monad_30) {
    return function (f) {
        return function (a) {
            return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(f)(function (_18) {
                return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(a)(function (_17) {
                    return $$return(__dict_Monad_30["__superclass_Prelude.Applicative_0"]())(_18(_17));
                });
            });
        };
    };
};
var monadArray = new Monad(function () {
    return applicativeArray;
}, function () {
    return bindArray;
});
var bindArray = new Bind(function () {
    return applyArray;
}, $foreign.arrayBind);
var applyArray = new Apply(function () {
    return functorArray;
}, ap(monadArray));
var applicativeArray = new Applicative(function () {
    return applyArray;
}, function (x) {
    return [ x ];
});
var add = function (dict) {
    return dict.add;
};
var $plus = function (__dict_Semiring_31) {
    return add(__dict_Semiring_31);
};
module.exports = {
    LT: LT, 
    GT: GT, 
    EQ: EQ, 
    Show: Show, 
    BooleanAlgebra: BooleanAlgebra, 
    BoundedOrd: BoundedOrd, 
    Bounded: Bounded, 
    Ord: Ord, 
    Eq: Eq, 
    DivisionRing: DivisionRing, 
    Num: Num, 
    Ring: Ring, 
    ModuloSemiring: ModuloSemiring, 
    Semiring: Semiring, 
    Semigroup: Semigroup, 
    Monad: Monad, 
    Bind: Bind, 
    Applicative: Applicative, 
    Apply: Apply, 
    Functor: Functor, 
    Category: Category, 
    Semigroupoid: Semigroupoid, 
    show: show, 
    "||": $bar$bar, 
    "&&": $amp$amp, 
    not: not, 
    disj: disj, 
    conj: conj, 
    bottom: bottom, 
    top: top, 
    unsafeCompare: unsafeCompare, 
    ">=": $greater$eq, 
    "<=": $less$eq, 
    ">": $greater, 
    "<": $less, 
    compare: compare, 
    "/=": $div$eq, 
    "==": $eq$eq, 
    eq: eq, 
    "-": $minus, 
    negate: negate, 
    sub: sub, 
    "/": $div, 
    mod: mod, 
    div: div, 
    "*": $times, 
    "+": $plus, 
    one: one, 
    mul: mul, 
    zero: zero, 
    add: add, 
    "++": $plus$plus, 
    "<>": $less$greater, 
    append: append, 
    ap: ap, 
    liftM1: liftM1, 
    "return": $$return, 
    ">>=": $greater$greater$eq, 
    bind: bind, 
    liftA1: liftA1, 
    pure: pure, 
    "<*>": $less$times$greater, 
    apply: apply, 
    "void": $$void, 
    "<#>": $less$hash$greater, 
    "<$>": $less$dollar$greater, 
    map: map, 
    id: id, 
    ">>>": $greater$greater$greater, 
    "<<<": $less$less$less, 
    compose: compose, 
    otherwise: otherwise, 
    asTypeOf: asTypeOf, 
    "const": $$const, 
    flip: flip, 
    "#": $hash, 
    "$": $dollar, 
    unit: unit, 
    semigroupoidFn: semigroupoidFn, 
    categoryFn: categoryFn, 
    functorFn: functorFn, 
    functorArray: functorArray, 
    applyFn: applyFn, 
    applyArray: applyArray, 
    applicativeFn: applicativeFn, 
    applicativeArray: applicativeArray, 
    bindFn: bindFn, 
    bindArray: bindArray, 
    monadFn: monadFn, 
    monadArray: monadArray, 
    semigroupString: semigroupString, 
    semigroupUnit: semigroupUnit, 
    semigroupFn: semigroupFn, 
    semigroupOrdering: semigroupOrdering, 
    semigroupArray: semigroupArray, 
    semiringInt: semiringInt, 
    semiringNumber: semiringNumber, 
    semiringUnit: semiringUnit, 
    ringInt: ringInt, 
    ringNumber: ringNumber, 
    ringUnit: ringUnit, 
    moduloSemiringInt: moduloSemiringInt, 
    moduloSemiringNumber: moduloSemiringNumber, 
    moduloSemiringUnit: moduloSemiringUnit, 
    divisionRingNumber: divisionRingNumber, 
    divisionRingUnit: divisionRingUnit, 
    numNumber: numNumber, 
    numUnit: numUnit, 
    eqBoolean: eqBoolean, 
    eqInt: eqInt, 
    eqNumber: eqNumber, 
    eqChar: eqChar, 
    eqString: eqString, 
    eqUnit: eqUnit, 
    eqArray: eqArray, 
    eqOrdering: eqOrdering, 
    ordBoolean: ordBoolean, 
    ordInt: ordInt, 
    ordNumber: ordNumber, 
    ordString: ordString, 
    ordChar: ordChar, 
    ordUnit: ordUnit, 
    ordArray: ordArray, 
    ordOrdering: ordOrdering, 
    boundedBoolean: boundedBoolean, 
    boundedUnit: boundedUnit, 
    boundedOrdering: boundedOrdering, 
    boundedInt: boundedInt, 
    boundedChar: boundedChar, 
    boundedFn: boundedFn, 
    boundedOrdBoolean: boundedOrdBoolean, 
    boundedOrdUnit: boundedOrdUnit, 
    boundedOrdOrdering: boundedOrdOrdering, 
    boundedOrdInt: boundedOrdInt, 
    boundedOrdChar: boundedOrdChar, 
    booleanAlgebraBoolean: booleanAlgebraBoolean, 
    booleanAlgebraUnit: booleanAlgebraUnit, 
    booleanAlgebraFn: booleanAlgebraFn, 
    showBoolean: showBoolean, 
    showInt: showInt, 
    showNumber: showNumber, 
    showChar: showChar, 
    showString: showString, 
    showUnit: showUnit, 
    showArray: showArray, 
    showOrdering: showOrdering
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\Prelude\\foreign.js"}],"c:\\Development\\Web\\jundo\\output\\Shaders\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_Eff_Exception = require("Control.Monad.Eff.Exception");
var Data_Either = require("Data.Either");
var Data_Maybe = require("Data.Maybe");
var Data_Nullable = require("Data.Nullable");
var Data_Tuple = require("Data.Tuple");
var DOM = require("DOM");
var DOM_Node_Node = require("DOM.Node.Node");
var DOM_Node_NonElementParentNode = require("DOM.Node.NonElementParentNode");
var DOM_Node_Types = require("DOM.Node.Types");
var DOM_HTML = require("DOM.HTML");
var DOM_HTML_Types = require("DOM.HTML.Types");
var DOM_HTML_Window = require("DOM.HTML.Window");
var Graphics_Canvas = require("Graphics.Canvas");
var Graphics_WebGL_Free = require("Graphics.WebGL.Free");
var Graphics_WebGL_Free_Shaders = require("Graphics.WebGL.Free.Shaders");
var Graphics_WebGL_Raw_Types = require("Graphics.WebGL.Raw.Types");
var Control_Monad_Free = require("Control.Monad.Free");
var vertexShaderId = "vertex-shader";
var programLocations = function (mvMatrix) {
    return function (pMatrix) {
        return function (aVertex) {
            return {
                mvMatrix: mvMatrix, 
                pMatrix: pMatrix, 
                aVertex: aVertex
            };
        };
    };
};
var loadShaderSourceFromElement = function (elementId) {
    return function __do() {
        var _95 = (function __do() {
            var _3980 = Prelude[">>="](Control_Monad_Eff.bindEff)(DOM_HTML.window)(DOM_HTML_Window.document)();
            return DOM_HTML_Types.htmlDocumentToNonElementParentNode(_3980);
        })();
        var _94 = (function __do() {
            var _3981 = DOM_Node_NonElementParentNode.getElementById(elementId)(_95)();
            return Data_Nullable.toMaybe(_3981);
        })();
        if (_94 instanceof Data_Maybe.Just) {
            return DOM_Node_Node.textContent(DOM_Node_Types.elementToNode(_94.value0))();
        };
        throw new Error("Failed pattern match at Shaders line 40, column 1 - line 41, column 1: " + [ _94.constructor.name ]);
    };
};
var fragmentShaderId = "fragment-shader";
var initialiseShaderProgram = function (gl) {
    return function __do() {
        var _102 = loadShaderSourceFromElement(fragmentShaderId)();
        var _101 = loadShaderSourceFromElement(vertexShaderId)();
        var _100 = Graphics_WebGL_Free.runWebGL(gl)(Graphics_WebGL_Free_Shaders.compileAndLinkProgram(_101)(_102))();
        return (function () {
            if (_100 instanceof Data_Either.Left) {
                return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error(_100.value0));
            };
            if (_100 instanceof Data_Either.Right) {
                return function __do() {
                    var _99 = Graphics_WebGL_Free.runWebGL(gl)(Prelude.bind(Control_Monad_Free.freeBind)(Graphics_WebGL_Free.getUniformLocation(_100.value0)("uMVMatrix"))(function (_98) {
                        return Prelude.bind(Control_Monad_Free.freeBind)(Graphics_WebGL_Free.getUniformLocation(_100.value0)("uPMatrix"))(function (_97) {
                            return Prelude.bind(Control_Monad_Free.freeBind)(Graphics_WebGL_Free.getAttribLocation(_100.value0)("aVertexPosition"))(function (_96) {
                                return Prelude["return"](Control_Monad_Free.freeApplicative)(Prelude["<*>"](Data_Maybe.applyMaybe)(Prelude["<*>"](Data_Maybe.applyMaybe)(Prelude["<$>"](Data_Maybe.functorMaybe)(programLocations)(_98))(_97))(_96));
                            });
                        });
                    }))();
                    return (function () {
                        if (_99 instanceof Data_Maybe.Nothing) {
                            return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("Missing shader program location"));
                        };
                        if (_99 instanceof Data_Maybe.Just) {
                            return function __do() {
                                Graphics_WebGL_Free.runWebGL(gl)(Graphics_WebGL_Free.enableVertexAttribArray(_99.value0.aVertex))();
                                return Prelude["return"](Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(_100.value0, _99.value0))();
                            };
                        };
                        throw new Error("Failed pattern match at Shaders line 47, column 1 - line 48, column 1: " + [ _99.constructor.name ]);
                    })()();
                };
            };
            throw new Error("Failed pattern match at Shaders line 47, column 1 - line 48, column 1: " + [ _100.constructor.name ]);
        })()();
    };
};
module.exports = {
    initialiseShaderProgram: initialiseShaderProgram
};

},{"Control.Monad.Eff":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff\\index.js","Control.Monad.Eff.Exception":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Eff.Exception\\index.js","Control.Monad.Free":"c:\\Development\\Web\\jundo\\output\\Control.Monad.Free\\index.js","DOM":"c:\\Development\\Web\\jundo\\output\\DOM\\index.js","DOM.HTML":"c:\\Development\\Web\\jundo\\output\\DOM.HTML\\index.js","DOM.HTML.Types":"c:\\Development\\Web\\jundo\\output\\DOM.HTML.Types\\index.js","DOM.HTML.Window":"c:\\Development\\Web\\jundo\\output\\DOM.HTML.Window\\index.js","DOM.Node.Node":"c:\\Development\\Web\\jundo\\output\\DOM.Node.Node\\index.js","DOM.Node.NonElementParentNode":"c:\\Development\\Web\\jundo\\output\\DOM.Node.NonElementParentNode\\index.js","DOM.Node.Types":"c:\\Development\\Web\\jundo\\output\\DOM.Node.Types\\index.js","Data.Either":"c:\\Development\\Web\\jundo\\output\\Data.Either\\index.js","Data.Maybe":"c:\\Development\\Web\\jundo\\output\\Data.Maybe\\index.js","Data.Nullable":"c:\\Development\\Web\\jundo\\output\\Data.Nullable\\index.js","Data.Tuple":"c:\\Development\\Web\\jundo\\output\\Data.Tuple\\index.js","Graphics.Canvas":"c:\\Development\\Web\\jundo\\output\\Graphics.Canvas\\index.js","Graphics.WebGL.Free":"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Free\\index.js","Graphics.WebGL.Free.Shaders":"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Free.Shaders\\index.js","Graphics.WebGL.Raw.Types":"c:\\Development\\Web\\jundo\\output\\Graphics.WebGL.Raw.Types\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Simulation\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Data_Time = require("Data.Time");
var Math_Radians = require("Math.Radians");
var Clockwise = (function () {
    function Clockwise() {

    };
    Clockwise.value = new Clockwise();
    return Clockwise;
})();
var Anticlockwise = (function () {
    function Anticlockwise() {

    };
    Anticlockwise.value = new Anticlockwise();
    return Anticlockwise;
})();
var RadiansPerSecond = function (x) {
    return x;
};
var toggleDirection = function (_270) {
    var newDirection = (function () {
        if (_270.direction instanceof Clockwise) {
            return Anticlockwise.value;
        };
        if (_270.direction instanceof Anticlockwise) {
            return Clockwise.value;
        };
        throw new Error("Failed pattern match at Simulation line 45, column 3 - line 47, column 22: " + [ _270.direction.constructor.name ]);
    })();
    return {
        direction: newDirection, 
        angle: _270.angle
    };
};
var initialSimulationState = {
    direction: Anticlockwise.value, 
    angle: 0.0
};
var angularSpeed = 1.0;
var angleFromVelocity = function (_267) {
    return function (_268) {
        return _267 * _268;
    };
};
var timestep = function (step) {
    return function (_269) {
        var directionMultiplier = (function () {
            if (_269.direction instanceof Anticlockwise) {
                return 1.0;
            };
            if (_269.direction instanceof Clockwise) {
                return -1.0;
            };
            throw new Error("Failed pattern match at Simulation line 34, column 3 - line 35, column 3: " + [ _269.direction.constructor.name ]);
        })();
        var angleChange = Prelude["*"](Math_Radians.semiringRadians)(directionMultiplier)(angleFromVelocity(angularSpeed)(Data_Time.toSeconds(Data_Time.timeValueMilliseconds)(step)));
        return {
            direction: _269.direction, 
            angle: Prelude["+"](Math_Radians.semiringRadians)(_269.angle)(angleChange)
        };
    };
};
module.exports = {
    Clockwise: Clockwise, 
    Anticlockwise: Anticlockwise, 
    toggleDirection: toggleDirection, 
    timestep: timestep, 
    initialSimulationState: initialSimulationState
};

},{"Data.Time":"c:\\Development\\Web\\jundo\\output\\Data.Time\\index.js","Math.Radians":"c:\\Development\\Web\\jundo\\output\\Math.Radians\\index.js","Prelude":"c:\\Development\\Web\\jundo\\output\\Prelude\\index.js"}],"c:\\Development\\Web\\jundo\\output\\Unsafe.Coerce\\foreign.js":[function(require,module,exports){
"use strict";

// module Unsafe.Coerce

exports.unsafeCoerce = function(x) { return x; }

},{}],"c:\\Development\\Web\\jundo\\output\\Unsafe.Coerce\\index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
module.exports = {
    unsafeCoerce: $foreign.unsafeCoerce
};

},{"./foreign":"c:\\Development\\Web\\jundo\\output\\Unsafe.Coerce\\foreign.js"}],"c:\\Development\\Web\\jundo\\output\\browserify.js":[function(require,module,exports){
require('Main').main();

},{"Main":"c:\\Development\\Web\\jundo\\output\\Main\\index.js"}]},{},["c:\\Development\\Web\\jundo\\output\\browserify.js"]);
